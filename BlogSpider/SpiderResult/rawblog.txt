[
    {
        "Title": "[置顶]通知：正式迁移至新博客",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/06/01/1749045.html",
        "BriefIntro": "摘要: 博客迁移这事情已经有一段时间了，不过最近发现似乎还有许多朋友不知道这点，以为我怎么不写博客了――其实我还在写，写的还挺勤快的，只不过已经不继续同步到博客园了。这事儿说来也很遗憾，原本我打算两边同步更新，毕竟在博客园积累了大量人气，像我现在新博客的访问量少的可怜。不过从博客园吸引流量的做法也让一些朋友感到不满，主要是指关闭评论这件事情吧。我关闭评论，主要是因为不想在两边维护评论（一句话说两遍还是相当不DRY的如果dudu要引入第三方博客的合作机制，也要考虑一下这个问题）。权衡之下，还是主营新博客，如果没有特别的事情就不更新了吧。 我的新博客搬迁至http://blog.zhaojie.me，R."
    },
    {
        "Title": "两则.NET高级技术人员的招聘信息",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/06/22/two-job-descriptions.html",
        "BriefIntro": "摘要: 几小时前我在微博上发布了一条消息，表示我即将加入一家外企，而且完全是大家耳熟能详的IT公司之一，而且这个公司会让大家感到“意外”。于是大伙有猜微软的，也有猜Google，Apple，Oracle，HP等等，当然也有猜对的童鞋。在此公布答案，它便是传说中的IBM公司，我将在那里继续我的.NET程序员之旅。同时，我也希望可以找到一位同学可以帮助我目前在盛大创新院的项目继续良好地发展下去。"
    },
    {
        "Title": "上周末Jscex项目介绍的幻灯片",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/05/16/jscex-write-sexy-javascript-slide.html",
        "BriefIntro": "摘要: 上周末，在风景秀丽的浙江大学校园内，举行了NodeParty杭州站的活动。我在活动上结合Node.js项目对Jscex进行了简单介绍，包括其设计目的，设计原则，使用方式，高级模式，组成部分等等。在场的许多朋友也提出了不少问题，我也一一作了解答或是演示。总体感觉还算不错，毕竟是亲手编写的项目，对其各方面还是了然于胸的。在此发布演讲用的幻灯片，希望能给不在现场的同学带来一些帮助。"
    },
    {
        "Title": "Jscex使用BSD授权协议正式发布",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/04/22/jscex-released-under-bsd-license.html",
        "BriefIntro": "摘要: 这次打算把Jscex好好搞一下了，其实很少会有技术方面的障碍能“轮到”我们去突破，但我觉得Jscex的确有机会，HTML 5、Node.js各个都是红火的玩意儿。前几天我花了两个晚上用半生不熟的中式英语写了一篇自认为比较完整的说明文字放到了Github上的项目首页上，没想到几个小时后便收到了StratifiedJS（一个与Jscex目标有些类似的项目）作者的邮件，提到了一些关于StratifiedJS的事情。我向他咨询了StratifiedJS的某些细节问题，也向他简单介绍了Jscex的实现原理。如今Jscex已经使用BSD授权协议正式发布（中文站也会在近期推出），再进行一些细节上的优化便要开始作推广了。"
    },
    {
        "Title": "Jscex项目现状：UglifyJS解析器及AOT编译器",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/04/15/jscex-status-uglifyjs-parser-and-aot-compiler.html",
        "BriefIntro": "摘要: Jscex项目是我为了简化JavaScript异步的一个类库，支持任意JavaScript（ECMASCript 3）引擎。Jscex小巧而强大，可以极大地改善前端的AJAX及动画等场景的编程体验，同样也可以用在node.js进行服务器开发。从产生Jscex的想法到现在也有几个月的时间了，也一直想设法进行推广。在思考过程也发现了它在实际生产中可能会遇到的问题，于是前两个星期的主要工作，便是针对这些问题进行优化。首先我将Jscex的JavaScript分析器从Narcissus换成了UglifyJS，并基于node.js开发了一个简单的AOT编译器。接下来我也打算写个稍微详细一点的介绍，然后在国外社区看看反响如何。"
    },
    {
        "Title": "我们不是牛人，所以还是老老实实跟着兴趣走吧",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/02/10/piano-life-and-interests-driven-practice.html",
        "BriefIntro": "摘要: 前几天周筠老师写了篇博客，她认为兴趣十分重要，没有兴趣做不成事情。我对此十分同意，有亲身经历为证。更值得一提的是，这个亲身经历和技术或是职业方面的关系真不大，我对许多技术都感兴趣，一时还真难找出对比反差明显的东西。这次来说说我近几个月找到――或者说“找回”的兴趣，弹钢琴。在看来，这对我来说实在是“兴趣”的最佳例证了。"
    },
    {
        "Title": "分清“语言/规范”以及“平台/实现”，以及跨平台.NET开发",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/01/14/be-clear-with-language-spec-and-platform-implementation-dotnet-cross-platform.html",
        "BriefIntro": "摘要: 在许多年前，“语言”就等同于“平台”，例如C，C++以及最早的Ruby和Python等等。但是随着技术发展，出现了一些通用的平台，例如.NET和Java，逐渐这些平台上的语言也越来越多。再后来，某些语言在不同平台上的实现也越来越多，事情也变得有些复杂。技术在发展，但是从目前社区的讨论中，我发现许多朋友的观念还没有跟上。简单地说，如今的观念，一定要从“语言即平台”切换成“语言及平台”，当分清“语言”和“平台”这两个不同事物之后，许多问题才能讨论地清楚。而且，这点对于.NET程序员来说尤为重要，因为C#语言可以说是目前“平台”、“实现”最为广泛的“语言”之一了。"
    },
    {
        "Title": "“花钱”购买App Hub Membership终于成功了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2011/01/11/paid-for-app-hub-membership.html",
        "BriefIntro": "摘要: 作为一个身在天朝的开发人员，要及早使用国外的服务总是一件杯具的事情，注册Windows Phone 7的App Hub Membership也不例外。不幸中的万幸，我工作于盛大创新院，这也是个奇妙的地方，身边的同事就有美国人，在他的帮助下，从提及注册信息到审核成功也只用了6、7个小时。说起来美国人在这方面的确占有十分重大的优势，不光是审核速度快（其他国家用户还需要等待GeoTrust主动联系，并提交更多信息，多花上2、3个工作日十分正常），连价格也便宜（年费只需99美金，前两天让荷兰的朋友帮忙注册需要99欧元），不得不长叹一声。"
    },
    {
        "Title": "第三届nBazaar技术交流会开始报名",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/12/21/3rd-nbazaar-meeting-sign-up.html",
        "BriefIntro": "摘要: 为了错开年底密集的技术会议，第三届nBazaar技术交流会（即前“盛大创新院赞助的.NET技术交流会”）将于2011年1月15日举行。第三届的交流会将继续以往四场高质量的演讲，这也是确定nBazaar名称之后的第一次活动，希望nBazaar能够真正成为“集市”般热闹的社区活动。从现在开始，nBazaar技术沙龙的相关信息将逐渐集中至独立域名中，欢迎关注。"
    },
    {
        "Title": "Silverlight与微软技术（下）：微软技术与技术学习",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/11/05/silverlight-and-microsoft-technology-2-microsoft-technology-and-how-to-learn.html",
        "BriefIntro": "摘要: 经常听到有人说微软的技术变化太快，持续性不好，让程序员追得很累。这种观点在微软技术社区内部和外部都有出现，似乎是一个不争的事实。但从我追随.NET平台这近十年的时间里，我并没有明显的感觉。微软的技术的确很多，但至少在.NET领域过渡性做的非常好，我没有任何疲惫之感。微软技术开拓了我的眼界，让我在微软内外许多技术方面越来越少有“新奇”的感觉，一切都是那么自然和稳妥。我现在就来仔细谈谈我在学习微软技术方面的经验与感受。"
    },
    {
        "Title": "Silverlight与微软技术（上）：微软抛弃Silverlight了么？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/11/02/silverlight-and-microsoft-technology-1-is-silverlight-dead.html",
        "BriefIntro": "摘要: 话说，在最近的PDC上，微软的副总裁Bob Muglia说了类似的话“我们对Silverlight的策略改变了，我们要用HTML5来实现跨平台的应用程序”，于是乎，社区铺天盖地响起了“微软要抛弃Silverlight”的调调。出现这个说法并不奇怪，媒体转述一遍，再给社区理解一下，很正常。但是我觉得奇怪甚至有些恶心的是，当事实愈发明朗化的时候，冒出的一些莫名其妙，兴灾乐祸，事后诸葛还在愈演愈烈。这两天我在社区里看的很多说法，某些“评论家”连一些基本概念，如“Silverlight是Windows Phone 7的开发平台”都不清楚，就来捕风捉影，实在让我难以继续旁观。"
    },
    {
        "Title": "浅谈这次ASP.NET的Padding Oracle Attack相关内容",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/09/25/things-about-padding-oracle-vulnerability-in-asp-net.html",
        "BriefIntro": "摘要: 上一周爆出了一个关于ASP.NET的安全漏洞，有关这个漏洞的第一篇文章应该是ScottGu的说明，但是其中各方面谈的也是语焉不详。由于这个漏洞关系到“安全”这样敏感的话题，其中又涉及到密码学这样常人看不明白的技术，于是导致了各种猜测和推测，其中甚至与我对ASP.NET的了解所有矛盾，因此我觉得也大都不靠谱。中秋休息在家，我简单地了解了一下与这个漏洞有关的内容，总结出了一些“能够说服自己”的内容，在此记录下来。因此，这篇文章的面向读者是那些和我差不多的同学：对ASP.NET有所了解，但对密码学知之甚少。"
    },
    {
        "Title": "综述：编程语言的发展趋势及未来方向",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/08/30/1812515.html",
        "BriefIntro": "摘要: 这是一篇发表在《程序员》杂志8月刊的文章，是根据我对Anders Hejlsberg的演讲内容的翻译的缩写。原本的完整演讲内容有数万字，为了在杂志上发表因此简化成了五千字，因此如果您对完整内容感兴趣，不妨根据文末链接来访问完整内容，其中也包含大量分解的幻灯片以及代码。"
    },
    {
        "Title": "盛大创新院赞助第二届.NET技术交流会开始报名了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/08/16/2nd-snda-dotnet-conference-sign-up.html",
        "BriefIntro": "摘要: 自上次盛大创新院赞助的首届.NET技术交流会到现在已经有两个月，这意味着按照原来的“一季一次”的计划也已经离第二次的活动不远了，考虑到9月份的中秋和国庆假期将工作日和休息日搞的支离破碎，于是交流会的时间会略微有些提前。第二届交流会的形式与上次相同，将为您献上四场高质量的技术演讲。当然这次在内容上有了新的尝试，除了引入了算法及面向对象设计的内容之外，这次更是请到了“传说中的大侠”为大家带来有关Windows内核的深度内容。人数暂定为200人，事不宜迟，赶快报名吧。除了.NET社区的群众以外，也欢迎其他技术社区的朋友前来参与交流。事实上，我组织技术交流会的目的之一便是希望能够促进.NET社区与其他技术社区的交流及相互学习。"
    },
    {
        "Title": "NDC 2010视频下载：看看其他微软平台程序员们都在做什么",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/07/13/ndc-2010-videos.html",
        "BriefIntro": "摘要: NDC（Norwegian Developers Conference，挪威开发者大会）是一年一度的挪威最大的微软平台开发者大会，内容丰富，讲师阵容强大。NDC与PDC同为高端技术会议，但NDC与PDC的不同之处在于，PDC是微软官方会议，主要是面向微软资深产品的深入探讨。而NDC涉及的内容则广泛的多，包括了我所感兴趣的Java、Mono、IronRuby/Ruby on Rails、NoSQL方面的内容。这也就像我一直强调的那样，微软技术社区非常开放，微软平台上的太多程序员都能够非常热情地拥抱其他平台的技术。那些认为微软技术社区是井底之蛙的兄弟，殊不知你们的嘲笑反而体现了自身的狭隘。"
    },
    {
        "Title": "关于using及foreach的一点看法，及其他",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/07/02/1769803.html",
        "BriefIntro": "摘要: firelong雄文又起，其中的观点很多我看得不太懂，某些看懂的地方（如单向链表和List"
    },
    {
        "Title": "单链表与List<T>究竟哪个遍历速度快？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/07/02/1769605.html",
        "BriefIntro": "摘要: firelong雄文又起，不过说实话，可能是这篇文章写的太简单了，其中的理由和结论都听得不是很明白。当然有一段话的意思很清楚（原话）：“C#事件的背后是一个委托链表（单链表），单链表的遍历调用性能远低于数组链表（List"
    },
    {
        "Title": "盛大创新院赞助首届.NET技术交流会 - 演讲录像及下载",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/06/24/first-snda-dotnet-conference-videos.html",
        "BriefIntro": "摘要: 经过几天的努力，终于将盛大创新院赞助的首届.NET技术交流会的演讲录像制作完成了。本来在现在的高清视频以外，我还想像Channel 9一样提供一些低码率的格式下载，但多次尝试都以失败告终，各中滋味难以言喻。因此目前只能给大家提供mov格式的高清视频下载，对于Windows下各类强大的播放器都不成问题。您也可以在线观看这些视频，不过上传至优酷后，发现除了清晰度较低外，甚至还有音画不同步的问题。我正在联系酷六网，会尽快用上质量更好的视频。"
    },
    {
        "Title": "盛大创新院赞助首届.NET技术交流会即将召开",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/06/17/first-snda-dotnet-conference-is-coming.html",
        "BriefIntro": "摘要: 由盛大创新院赞助的首届.NET技术大会将于6月19号下午1点召开，本次交流会请到了四位讲师，议题覆盖了F#、C#、Rails及架构等多个方面。我已经看过了各场演讲的幻灯片草稿，也很期待各位讲师在正式演讲中的表现。本次大会中，我们还获得了人民邮电出版社图灵教育赠送的20册图书，将会作为奖品赠送给在交流会中表现积极的听众。此外，我们还请到了酷六网的专业摄影师对演讲过程进行全程拍摄，并配合各位讲师自身的屏幕录像，将在后期合成为适合独立观看的演讲视频，让不能到场的朋友在线或是下载后观看。"
    },
    {
        "Title": "浅谈Java 7的闭包与Lambda表达式之优劣",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/06/07/first-version-of-lambda-and-closures-in-java-7.html",
        "BriefIntro": "摘要: 前几天Oracle推出了Java 7官方的闭包与Lambda表达式的第一个实现，这基本上也是最终在正式版中的样式了。看了这个实现之后，我的第一感觉便是“丑”，当然不排除这是因为看惯了其他语言中实现的缘故。后来再仔细看了看又想了想，发现Java 7的实现也并非毫无可取之处，但似乎又感到某些做法上有一些问题。总之整个过程颇为有趣，决定将我的想法记录下来，希望可以吸引人来一起讨论一下。"
    },
    {
        "Title": "通知：正式迁移至新博客",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/06/01/1749045.html",
        "BriefIntro": "摘要: 博客迁移这事情已经有一段时间了，不过最近发现似乎还有许多朋友不知道这点，以为我怎么不写博客了――其实我还在写，写的还挺勤快的，只不过已经不继续同步到博客园了。这事儿说来也很遗憾，原本我打算两边同步更新，毕竟在博客园积累了大量人气，像我现在新博客的访问量少的可怜。不过从博客园吸引流量的做法也让一些朋友感到不满，主要是指关闭评论这件事情吧。我关闭评论，主要是因为不想在两边维护评论（一句话说两遍还是相当不DRY的如果dudu要引入第三方博客的合作机制，也要考虑一下这个问题）。权衡之下，还是主营新博客，如果没有特别的事情就不更新了吧。 我的新博客搬迁至http://blog.zhaojie.me，R."
    },
    {
        "Title": "盛大创新院赞助首届.NET技术交流会开始报名了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/05/13/first-snda-dotnet-conference-sign-up.html",
        "BriefIntro": "摘要: 自从上次在博客中提到盛大创新院赞助.NET技术会议已经过去了一个半月，如今这件事情终于落实了。我为此准备了数千字的申请书，但老大看也不看便表示支持。他的说法是，只要办得热烈，有影响力，那么这样的活动绝对支持。为此，各场次演讲内容及会场等诸多事宜之后，现在“首届.NET技术交流会”正式进入报名阶段了。参与人数不设上限，多多益善，怕只怕会场会显得空旷。除了.NET社区的群众以外，也欢迎其他技术社区的朋友前来参与交流。事实上，我组织技术交流会的目的之一便是希望能够促进.NET社区与其他技术社区的交流及相互学习。"
    },
    {
        "Title": "编程语言的发展趋势及未来方向（3）：函数式编程",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/05/06/trends-and-future-directions-in-programming-languages-by-anders-3-functional-programming-and-fsharp.html",
        "BriefIntro": "摘要: 这是Anders Hejlsberg在比利时TechDays 2010所做的开场演讲。由于最近我在博客上关于语言的讨论比较多，出于应景，也打算将Anders的演讲完整地听写出来。在上一部分中，Anders阐述了他眼中声明式编程的理念及DSL，并演示C#中一种内部DSL的形式：LINQ。在这一部分中，Anders谈及了声明式编程的另一个重要组成部分：函数式编程，并使用.NET平台上的函数式编程语言F#进行了演示。"
    },
    {
        "Title": "关于“程序员圈子”说几句废话",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/28/programmers-group-effect.html",
        "BriefIntro": "摘要: 最近有人在TopLanguage上发了一条，怎么说，我个人感觉写的还不错的帖子。帖子的标题叫做“程序员的虚伪”，里面主要谈的是说如今在程序员社区里有这么一种不好的现象：话说一群人抱成团，有福同享有难同当，一荣俱容一损俱损，你方开张我来捧场，谁遇问题同仇敌忾。这样的风气造就了一些南郭先生，本事不大却感觉良好。这样的事情简直就是一出台湾偶像剧大陆白领剧，俗不可耐矫揉造作──这不就是在说我嘛。"
    },
    {
        "Title": "Why Java Sucks and C# Rocks（3）：Attribute与Annotation",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/25/why-java-sucks-and-csharp-rocks-3-attribute-and-annotation.html",
        "BriefIntro": "摘要: 上一篇文章里我谈了Java和C#语言中对于基础类型的不同态度，我认为C#把基础类型视做对象的做法比Java更有“万物皆对象”的理念，使用起来也更为方便。此外，C#拥有一个Java 1.4所不存在的特性，即Attribute（自定义特性），而在之后的Java 5.0中也增加了类似的功能，这便是Annotation（标注）。那么，Attribute的作用是什么，Java中的Annotation和C#中的Attribute又有什么区别呢，Java 5.0中又从C# 1.0中吸收了哪些优点？我们现在就来关注这方面的问题。"
    },
    {
        "Title": "在QCon中了解到的一些有关Groovy和F#的内容",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/24/something-about-groovy-and-fsharp-from-qcon.html",
        "BriefIntro": "摘要: 今天参加了QCon Beijing 2010的活动，第一天采访了Groovy和F#两种语言的技术领袖，在交流的过程中了解了不少内容，趁着还有一些印象就记点下来吧。Groovy方面这次来的是社区中贡献最多（没有之一）的Paul King，他也是《Groovy in Action》的作者之一。F#方面参加QCon的是Timothy Ng，年轻高大帅气，生于香港，四岁去加拿大，毕业后加入微软至今，目前是F#开发团队的Senior Dev Lead。与Tim晚餐时聊了许多，最大的收获是……发现我的英语也不是太哑巴嘛。"
    },
    {
        "Title": "Why Java Sucks and C# Rocks（2）：基础类型与对象",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/21/why-java-sucks-and-csharp-rocks-2-primitive-types-and-object-orientation.html",
        "BriefIntro": "摘要: 既然已经谈过这次语言比较的意义与目的，而完整的幻灯片和录音也已经放出，那么接下来自然是详细讨论了。在这篇文章中，我会对两个语言的基本特征进行简单描述，并主要讨论两者对于基础类型的处理方式。在我看来，Java语言对于基础类型的处理方式，并不如C#中值类型般妥当。如果您有任何觉得不妥或是想要补充的意见，请不吝回复。由于C# 1.0发布于2002年，因此本文内容将基于Java 1.4及C# 1.0的情况。"
    },
    {
        "Title": "关于F#大家有什么问题吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/19/1715364.html",
        "BriefIntro": "摘要: 本周五我将在QCon Beijing 2010中采访F#团队的Lead，Timothy Ng。如果对这门语言感兴趣或是相关内容的朋友，可以在文章下方回复一些问题给我（尽可能具体一些），我会有选择的作为采访内容。谢谢大家支持。"
    },
    {
        "Title": "幻灯片：Why Java Sucks and C# Rocks",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/18/why-java-sucks-and-csharp-rocks-slides-final-version.html",
        "BriefIntro": "摘要: 昨天在5173与博客园联合举办的技术交流活动中进行了演讲，现在幻灯片终于可以放出了。当然，光看幻灯片本身的效果不大，在演讲过程中我进行了非常多的代码演示和说明，幻灯片本身只能算是一个提纲，因此各位没有来听演讲的朋友，还是等我慢慢地对这个话题进行详细讨论吧。只是有些话我不得不说：Java平台的开放只能反衬出一些Java粉丝的狭隘心态和视野。我一个封闭的微软平台的封闭的.NET程序员，无论从心态和眼界都比您要开阔，这还不够讽刺吗？"
    },
    {
        "Title": "Why Java Sucks and C# Rocks（1）：比较的意义与目的",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/17/why-java-sucks-and-csharp-rocks-1-thoughts-and-goals.html",
        "BriefIntro": "摘要: 消息发布之后，许多朋友都表示对我这个主题的关注――无论是正面还是负面的――这让我很高兴。不过说实话，我原本并没有打算写这篇文章。我原本的打算是从一开始就进行技术方面的讨论，但是大家在前文的反馈让我把一些问题想得更清楚了，也认识到有些东西可能需要先说在前面可以有更好的效果。希望各位朋友可以继续给我一些反馈，这样我可以在必要的时候进行补充更完整的内容。这次的话题很有价值，我想把它做的更好。"
    },
    {
        "Title": "编程语言的发展趋势及未来方向（2）：声明式编程与DSL",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/14/trends-and-future-directions-in-programming-languages-by-anders-2-declarative-programming-and-dsl.html",
        "BriefIntro": "摘要: 这是Anders Hejlsberg在比利时TechDays 2010所做的开场演讲。由于最近我在博客上关于语言的讨论比较多，出于应景，也打算将Anders的演讲完整地听写出来。在上一部分中，Anders指出语言本身在过去的数十年里并没有明显的发展，并给出了他眼中编程语言发展趋势的预测。在现在的第2部分中，Anders将阐述声明式编程的理念及DSL，并演示C#中一种内部DSL的形式：LINQ。"
    },
    {
        "Title": "编程语言的发展趋势及未来方向（1）：历史回顾及趋势概述",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/13/trends-and-future-directions-in-programming-languages-by-anders-1-history-and-trends.html",
        "BriefIntro": "摘要: 这是Anders Hejlsberg在比利时TechDays 2010所做的开场演讲。由于最近我在博客上关于语言的讨论比较多，出于应景，也打算将Anders的演讲完整地听写出来。我希望这个讲座可以从侧面回答某些朋友关于“语言讨论是否有价值”的疑问，并且展示出目前语言的发展状况以及微软在这方面的努力。完整内容将分为多次发表，每天一小部分，每次大约10分钟的演讲内容。等不及的朋友也和可以下载演讲视频一睹为快。现在的第1部分则包含Anders对编程语言发展的历史回顾，以及对趋势简单概述。"
    },
    {
        "Title": "演讲预告：Why Java Sucks and C# Rocks",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/11/speech-why-java-sucks-and-csharp-rocks.html",
        "BriefIntro": "摘要: 怎么样，这个标题是不是足够吸引眼球？嗯，我下个星期便打算在5173和博客园举办的技术交流会上讨论一下这个话题。原本这是一个为盛大创新院内部分享交流会准备的内容，不过正好5173要举办一个技术交流会──还有比那儿更适合这个话题的地方吗？直到现在，还有许多朋友认为，Java语言和C#的区别并不大，也有人认为C#只是语法糖比较多，没有什么特别的――而我现在便打算详细阐述C#是如何改变开发人员“编程理念”及“思维方式”，并在生产力上大大超越Java语言。我也打算在会后将这个内容详细地总结成一系列文章，除了发表在博客上，还会转载去一些Java开发社区，看看那儿的弟兄们对这个话题会怎么看。"
    },
    {
        "Title": "Keynote，对不起，我爱的是PowerPoint 2007",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/08/powerpoint-2007-vs-keynote-for-beginners.html",
        "BriefIntro": "摘要: 两个月前我加入了水果党，使用至今，感觉挺好，尤其是触摸板的多点触摸功能令人着迷。一直听许多果粉说Mac系统在艺术设计方面表现一流，其办公套件iWork更是远胜于Microsoft Office，后者的流行完全是“劣币驱逐良币”的结果。耳濡目染之下我自然对此期待万分，于是在Open Office及NeoOffice这两个免费的办公套件身上无法得到快感的情况下，兴冲冲地花费了近700块钱购买了一套正版的iWork。然后打开Keynote制作幻灯片，心想终于可以尝试一下超越PowerPoint 2007的产品了。可能是期望过高吧，初尝Keynote的感觉只能用“大失所望”来形容――而且，真的是我期望过高吗？"
    },
    {
        "Title": "F#与ASP.NET（2）：使用F#实现基于事件的异步模式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/05/fsharp-for-asp-net-2-implement-event-based-asynchronous-pattern-with-fsharp.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们的简单讨论了.NET中两种异步模型以及它们在异常处理上的区别，并且简单观察了ASP.NET MVC 2中异步Action的编写方式。从中我们得知，ASP.NET MVC 2的异步Action并非使用了传统基于Begin/End的异步编程模型，而是另一种基于事件的异步模式。此外，ASP.NET MVC 2对于这种异步模式提供了必要的支持，使此方面的程序设计变得相对简单一些。但是，简单的原因主要还是在于已经由其他组件提供了良好的，基于事件的异步模式。那么现在我们就来看看一般我们应该如何来实现这样的功能，以及F#是如何美化我们的生活的吧。"
    },
    {
        "Title": "F#与ASP.NET（1）：基于事件的异步模式与异步Action",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/04/02/fsharp-for-asp-net-1-event-based-asynchronous-pattern-and-async-action.html",
        "BriefIntro": "摘要: 提高ASP.NET应用程序伸缩性的有效手段之一便是使用异步请求。而在ASP.NET MVC 1中是不能直接支持异步Action的，因此我们需要使用一些简单的Hack方式来实现这一点。不过简单的Hack毕竟无法利用ASP.NET MVC的完整功能，幸好ASP.NET MVC 2已经正式支持ASP.NET中的异步请求处理方式，并且通过一种比较易于使用的方式提供给开发人员使用。只可惜，由于语言层面的约束，这种使用方式还是有些不便，而此时便是F#的用武之地了。"
    },
    {
        "Title": "最容易令初学者混乱的F#命令",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/31/reference-cell-retrieval-in-fsharp.html",
        "BriefIntro": "摘要: 话说，其实我也是F#的初学者，至少相对于C#等语言来说一定是这样的。而对于初学者，或是C#和F#混用的程序员来说，我认为最F#中最容易令人混乱的命令是Reference Cells的取值操作了。下面便详细谈谈这么说的原因，及建议的应对方法。"
    },
    {
        "Title": "如何成为一名优秀的博主（PPT）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/29/how-to-become-a-good-tech-blogger.html",
        "BriefIntro": "摘要: 如何成为一名优秀的博主？这是一个问题。我一直到处建议别人写博客，写技术博客，但是还真没想过或总结过这个问题。上个星期微软“社区经营计划”讲解了微软内部关于撰写优秀博客的一些方法和注意事项――同时微软的朋友也希望我分享一下我的经验，于是我制作了这份PPT。后来发现，我写的内容和微软的内部资料倒有相当部分不谋而合的地方，自然微软的资料更为美观，图示丰富，而我的内容则相对更有山寨的感觉。"
    },
    {
        "Title": "盛大创新院赞助.NET技术会议意见征询",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/26/snda-dotnet-conference-advices.html",
        "BriefIntro": "摘要: 各位可能大都知道，我于不久前加入了盛大创新院。最近我了解到，创新院这边对于社区开展技术会议的活动也是相当支持的，并且对每个社区的会议会有资金和人员上的支持。这几天我和副院长聊了一下，他表示只要组织得当，创新院也支持把技术交流会办成一个有规律的活动，定期举行。事实上，创新院已经赞助过多次Flash及产品设计方面的技术会议。当然，会议的目的是进行技术交流，对观众自然是完全免费的。因此，我打算在5月或6月份在上海举办一次.NET技术会议，在此征求一下您的意见。"
    },
    {
        "Title": "新博客评论使用方式介绍",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/24/comment-markup-help.html",
        "BriefIntro": "摘要: 新博客终于上线了，与旧博客不同的是，我在评论方面花了许多精力，希望可以提供一个优秀的评论方法。我对优秀的定义是“格式丰富，使用简单”，再加上由于是技术博客，因此对于代码片段也要有较好的支持。最终，我选择使用Markdown作为评论的输入标记。Markdown是一个轻量的标记规则，但对于评论应用来说也已经足够丰富了。Markdown的运用非常广泛，例如著名的编程网站Stack Overflow也使用了这种标记语言。事实上，我这篇评论使用方式的介绍也有相当部分是翻译自Stack Overflow编辑器的帮助，自然还有部分自定义的内容（主要是对于代码片段的支持）。"
    },
    {
        "Title": "F#中的异步及并行模式（3 - 下）：代理的进一步使用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/21/async-and-parallel-design-patterns-in-fsharp-3-more-agents.html",
        "BriefIntro": "摘要: 之前的文章中我们了解了F#中并行及交互式程序的编程方式。在本系列的第3部分中，我们会来探索F#中轻量级的，交互式的代理，以及与代理有关的一些模式，包括隔离的内部状态。（译注：由于原文内容较多，译文拆成两段进行。在上半段文章中讨论了代理的基本使用方式，而下半段则讨论关于代理使用中更进一步的模式。）"
    },
    {
        "Title": "F#中的异步及并行模式（3 - 上）：代理的基本使用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/15/async-and-parallel-design-patterns-in-fsharp-3-agents.html",
        "BriefIntro": "摘要: 之前的文章中我们了解了F#中并行及交互式程序的编程方式。在本系列的第3部分中，我们会来探索F#中轻量级的，交互式的代理，以及与代理有关的一些模式，包括“隔离的内部状态”。（译注：由于原文较长，因此译文分为两段，目前是第一段，讲解了F#中异步代理的基本使用方式。）"
    },
    {
        "Title": "一种以ID特征为依据的数据分片（Sharding）策略",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/09/sharding-by-id-characteristic.html",
        "BriefIntro": "摘要: 假如您有一个应用程序，随着业务越来越有起色，系统所牵涉到的数据量也就越来越大，此时您要涉及到对系统进行伸缩（Scale）的问题了。系统的扩展方式往往分为“向上伸缩”和“向外伸缩”两种，而从“硬件成本”或是“系统极限”的角度来说，“向外伸缩”一般都会优于“向上伸缩”，因此大部分上规模的系统都会在一定程度上考虑“向外”的方式。由于许多系统的瓶颈都处在数据存储上，因此一种叫做“数据分片（Database Sharding）”的数据架构方式应运而生，本文便会讨论这种数据架构方式的一种比较典型的实现方式。"
    },
    {
        "Title": "F#中的异步及并行模式（2）：反馈进度的事件（包含Twitter示例）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/08/async-and-parallel-design-patterns-in-fsharp-2-reporting-progress-with-events.html",
        "BriefIntro": "摘要: 上一篇文章中谈到，“异步CPU并行”与“异步I/O并行”两个模式的限制之一便是无法通知组合操作的进度或结果。在这篇文章中，我们讲关注一个常见的异步模式：反馈进度的事件（Reporting Progress with Events），这是一种用于强大而优雅的做法，用于在某个边界之后对并行的执行过程加以封装，并同时汇报执行的结果或是进度。在文章最后，我们会使用这个设计模式开发一个示例，从Twitter中获取一系列记录。"
    },
    {
        "Title": "谈谈微软技术，以及对待技术应有的态度",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/04/microsoft-technology-and-the-attitude.html",
        "BriefIntro": "摘要: 昨晚在家上网，一边对那些有趣而奇妙的微软技术感叹不已，同时却又产生出一种忿忿之情。为什么？因为在国内的技术圈子里，经常有一种在我看来莫名奇妙的鄙视微软技术的风气。这样的风气在国内的推特圈里也非常明显，基本上只有我一个人对微软的技术抱有好感并“勇于”和大量意见向左的人争辩。忿忿之余，我便在推特上不断表达我对这种风气的抱怨及否定，在这个过程中也基本表达了我在这方面的大部分看法，在这里也进行一番总结总结吧。同时，我也想对微软社区的许多弟兄讲一些话。 "
    },
    {
        "Title": "F#中的异步及并行模式（1）：并行CPU及I/O计算",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/03/03/async-and-parallel-design-patterns-in-fsharp-1-parallelizing-cpu-and-io-computations.html",
        "BriefIntro": "摘要: F#是一门并行（parallel）及响应式（reactive）语言。这个说法意味着一个F#程序可以存在多个进行中的运算（如使用.NET线程进行F#计算），或是多个等待中的回应（如等待事件或消息的回调函数及代理对象）。 F#的异步表达式是简化异步及响应式程序编写的方式之一。在这篇及今后的文章中，我会探讨一些使用F#进行异步编程的基本方式──大致说来，它们都是F#异步编程时使用的模式。我们从两个简单的设计模式开始：CPU异步并行（Parallel CPU Asyncs）和I/O异步并行（Paralle I/O Asyncs）。"
    },
    {
        "Title": "MongoDB与Tokyo Tyrant性能比较（2）：并发写入操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/26/mongodb-tokyo-tyrant-benchmark-2-concurrent-insert.html",
        "BriefIntro": "摘要: 在上一次的测试中我们比较了MongoDB与Tokyo Tyrant的Table Database两种存储方式的性能。不过由于条件限制，我只能在自己的MBP上测试，而这至少会带来两个问题。首先，真实环境下客户端和服务器是通过内网连接的，它的性能比本地回环要慢不少，一些和网络传输性能有关的问题可能会体现不出。其次，由于无法进行并发测试（并发测试的客户端资源占用较高，放在同一台机器上准确性较差），这又和生产环境有很大区别了。因此，我前两天向同事借了台性能测试用的机器，希望可以得到更可靠的结果。"
    },
    {
        "Title": "MongoDB与Tokyo Tyrant性能比较（1）：基础CRU操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/24/mongodb-tokyo-tyrant-benchmark-1-basic-cru-operations.html",
        "BriefIntro": "摘要: 以前的项目大都把数据存放在关系型数据库中，但是它们的问题比较明显的，一是在数据量上升的情况下伸缩性比较差，且进行结构调整的代价比较高。因此现在有个所谓NoSQL的“运动”也逐渐普遍起来了，它便是借助一些非关系型存储方式来开发项目。因此在新项目里，我也想尝试一下使用之前一直只是“听说”的存储方式。MongoDB和Tokyo Tyrant都是其中的典型代表，那么现在就来比较一下它们对于基本CRU操作的性能。"
    },
    {
        "Title": "为什么JVM上没有C#语言？浅谈Type Erasure特性",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/22/why-not-csharp-on-jvm-type-erasure.html",
        "BriefIntro": "摘要: JVM上目前已经有许多语言了：JRuby，Jython，也有一些特定于JVM平台的语言，如Scala和Groovy等。但是，为什么JVM上没有C#语言呢？按理说，这门和Java十分相似，却又强大许多的语言更容易被Java程序员接受才对。有人说，Sun和微软是对头，怎么可能将C#移植到JVM平台上呢？嗯，有道理，但是为什么社区里也没有人这么做呢（要知道JVM上其他语言都是由社区发起的）？其实在我看来，这是受到了技术方面的限制。例如：Type Erasure。"
    },
    {
        "Title": "哥谈的是语言，不是寂寞",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/20/programming-languages-platform.html",
        "BriefIntro": "摘要: 经常看到一些文章在谈论语言，例如“哪个语言更有前途”，“语言选择是否关键”。我是个语言粉丝，但是看到这些文章总有一些奇怪的感觉。因为在我看来，这些文章谈的东西都不是我眼中的语言――可能与国内技术环境有关，语言本身被淡化了，例如，谈语言的时候涉及更多的却是“平台”方面的内容。那么我现在便来描述一下我眼中的“语言”该如何谈论吧――下次在我猛砍Java语言时也好有个参考。"
    },
    {
        "Title": "浅谈字节序（Byte Order）及其相关操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/10/byte-order-and-related-library.html",
        "BriefIntro": "摘要: 最近在为Tokyo Tyrant写一个.NET客户端类库。Tokyo Tyrant公开了一个基于TCP协议的二进制协议，于是我们的工作其实也只是按照协议发送和读取一些二进制数据流而已，并不麻烦。不过在其中涉及到了“字节序”的概念，这本是计算机体系结构/操作系统等课程的基础，不过我还是打算在这里进行简单说明，并且对.NET中部分类库在此类数据流处理时的注意事项进行些许记录与总结。"
    },
    {
        "Title": "总结：史上第一混乱、程序员的爱情、Nobody & Sorry Sorry",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/07/play-novel-nobody-sorry-sorry.html",
        "BriefIntro": "摘要: 星期六是我的休息日，这天一般我不安排自己做什么和工作有关的事情，一般就是去看看电影，出去逛逛，或者在家上上网吹吹牛。昨天总结了一部分由推特上的讨论，现在继续剩下的一部分。不过，这次的内容可能就要和技术或产业略远一些了，其中大部分是我自己的一些体会和感想。现在我打算谈三个东西，一是《史上第一混乱》这部话剧，《程序员的爱情》这本小说，以及Nobody和Sorry Sorry（您不知道这是啥？你成奥特曼啦！）。"
    },
    {
        "Title": "总结：0 bug事件、交大ACM夺冠",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/07/0-bug-and-sjtu-acm-champion.html",
        "BriefIntro": "摘要: 如果您还没有上推特（或是还没有想到办法上），那您失去的不光是一个风靡世界的网络应用，您同时还失去了一个优秀的信息获取平台及讨论环境。目前国内大部分靠谱的技术专家都在推特上有帐号，您几乎不会错失任何有价值的信息，更可以参与一些有价值讨论。周六是休息日，因此也在推特上和大家聊得不亦乐乎。不过推特的一个缺陷可能便是难以留住有价值的信息，它们会随着时间推移渐渐消失，因此还是及时记录一下吧。"
    },
    {
        "Title": "李笑来激起千层浪，赵姐夫力拒众强敌",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/03/twitter-talk-about-ms-dev-at-20100201.html",
        "BriefIntro": "摘要: 昨天晚上，李笑来（@xiaolai）老师的无心之语却引起了推特上一次前后长达1个多小时的讨论――当时他似乎只是随手发了一句“Apple告诉我们的铁律是：表面功夫一定要做足”便不见了踪影，但是这句话立即引起了众果粉的共鸣。此后，我（@jeffz_cn）的一句评论又引起了众人对微软开发平台的批判之声。在这次讨论中，几乎只有我孤军奋战为.NET平台进行辩解。因此事后有人给出一副对联为此次争论作出总结：李笑来激起千层浪，赵姐夫力拒众强敌。"
    },
    {
        "Title": "从今日起正式加入水果党",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/02/use-mac.html",
        "BriefIntro": "摘要: 想来我现在的笔记本也用了将近3年，虽然至今没有出现过任何问题，但更新换代似乎也不是件让人无法接受的事情――再加上老爸正好也需要一台笔记本，于是我想，不如就乘此机会升一下级吧。不过其实我本没有打算那么着急，只是两天前忽然出现了一个千载难逢的机会，一台十分便宜的MBP放在我面前，于是我当机立断，即刻入手。因此我在此庄严宣布：从今日起，我正式加入水果党。"
    },
    {
        "Title": "光有逻辑也是万万不能的",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/02/01/logic-is-not-everything.html",
        "BriefIntro": "摘要: 之前我多次强调“逻辑”在讨论问题时的重要性，我也多次表示说，如果大家都运用合适的逻辑思维来讨论问题，那么论坛上8成吵架可以避免。现在我也想再次探讨一下这个话题，只不过这次我想反过来说：光有逻辑也是万万不能的。除了“逻辑”这个东西之外，讨论问题时还有很多其他东西值得注意。"
    },
    {
        "Title": "数组排序方法的性能比较（5）：对象大小与排序性能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/29/sort-array-linq-5-object-size-and-performance.html",
        "BriefIntro": "摘要: 在我公开测试结果之后，有朋友也进行了其他测试。在测试中我使用的是int数组，经过分析之后我们了解到Array.Sort"
    },
    {
        "Title": "数组排序方法的性能比较（4）：LINQ方式的Array排序",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/28/sort-array-linq-4-linq-style-array-sort.html",
        "BriefIntro": "摘要: 经过前两篇文章的分析，我们已经了解了Array.Sort"
    },
    {
        "Title": "数组排序方法的性能比较（3）：LINQ排序实现分析",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/27/sort-array-linq-3-linq-sort.html",
        "BriefIntro": "摘要: 上次我们分析了Array.Sort"
    },
    {
        "Title": "人肉反编译使用yield关键字的方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/26/decompile-methods-with-yield-manually.html",
        "BriefIntro": "摘要: 我认为这是一个真命题：“没有用.NET Reflector反编译并阅读过代码的程序员不是专业的.NET程序员”。.NET Reflector强大的地方就在于可以把IL代码反编译成可读性颇高的高级语言代码，并且能够支持相当多的“模式”，根据这些模式它可以在一定程度上把某些语法糖给还原，甚至可以支持简单的Lambda表达式和LINQ。只可惜，.NET Reflector还是无法做到极致，某些情况下生成的代码还是无法还原到易于理解――yield关键字便是这样一个典型的情况。不过还行，对于不复杂的逻辑，我们可以通过人肉来“整理”个大概。"
    },
    {
        "Title": "昨日搬至办公室的书籍",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/25/books-20100125-at-snda-office.html",
        "BriefIntro": "摘要: 由于家里地方小，总有一部分书籍需要跟着我辗转至各公司。其中一些公司只能让我放抽屉（地方小）甚至地板上，而有一些公司就能让我把书都摞桌子上。昨天下午我特地来了一次办公室搬运书籍。灭霍霍，可真是一个体力活。"
    },
    {
        "Title": "土人眼中的差距：That’s Why I Chose Yale",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/24/why-i-chose-Yale.html",
        "BriefIntro": "摘要: 上周五中午我看了一个视频：That's Why I Chose Yale（我选择耶鲁大学的原因），是由耶鲁大学的学生自导自演自己拍摄、剪辑的短片。这部短片直接就把我看哭了――好吧，还差一点点，但是其中的震撼是难以描绘的，建议您一定要自己体会一下。震撼源于各方面的差距，同样是大学，同样是大学生，为什么差距就那么大呢？而且，这几乎已经是我无法去弥补的差距了，因此遗憾，因此震撼。"
    },
    {
        "Title": "数组排序方法的性能比较（2）：Array.Sort<T>实现分析",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/22/sort-array-linq-2-array-sort.html",
        "BriefIntro": "摘要: 昨天我们比较了Array.Sort"
    },
    {
        "Title": "数组排序方法的性能比较（1）：注意事项及试验",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/21/sort-array-linq-1-notes-and-benchmark.html",
        "BriefIntro": "摘要: 昨天有朋友写了一篇文章，其中比较了List"
    },
    {
        "Title": "今日入职盛大创新院",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/19/1651772.html",
        "BriefIntro": "摘要: 在去年年底的总结中，我谈到放弃所谓的创业，想要加入一家国内的大公司安心发展技术，正所谓“打怪升级”。不过，其实在写完文章不久之后（大约数个小时），我就收到了盛大创新院给我的offer。在家休息了整整两周时间后，今天我终于入职了，因此我现在终于有了个颇为响亮的头衔。好吧，当然这不是关键，当然这终究让我梦想中“搞研究”的心理小小地满足了一把。"
    },
    {
        "Title": "浅谈代码的执行效率（4）：汇编优化",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/14/talk-about-code-performance-4-asm-optimization.html",
        "BriefIntro": "摘要: 终于谈到这个话题了，首先声明我不是汇编优化的高手，甚至于我知道的所有关于汇编优化的内容，仅仅来自于学校的课程、书本及当年做过的一些简单练习。换句话说，我了解的东西只能算是一些原则，甚至也有一些“陈旧”了――不过我想既然是一些原则性的东西，还是能够用它来做一定程度的判断。至少我认为，我在博客园里看到的许多关于“汇编优化”也好，“内嵌汇编”也罢的说法，经常是有些问题的。"
    },
    {
        "Title": "京沪两地Scrum实战营（免费，上海1月23日，北京1月30日）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/13/1646783.html",
        "BriefIntro": "摘要: 种种迹象表明，Scrum已经在很多公司得到实施。同时，不争的事实是很多开发人员和团队在实施过程中也遇到了各种各样的问题，包括对Scrum方法本身的认识、辅助实施工具的使用等等。有关Scrum应用和实施的各种问题也在InfoQ网站和其他网站上被广泛讨论和争论。等等这些，组成了我们要举办这次Scrum实战营的基础。我们希望通过这次活动帮助正在进行敏捷实施、Scrum实施的团队更加清晰地理解Scrum，并将其他人的有效经验借鉴到自己的团队中来。本次活动由InfoQ中文站、雅各布森软件（北京）有限公司、微软中国有限公司共同举办，我们期待您的参与！\n"
    },
    {
        "Title": "浅谈代码的执行效率（3）：缓存与局部性",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/12/talk-about-code-performance-3-locality.html",
        "BriefIntro": "摘要: 在前两篇文章里，我们讨论了程序性能的两个方面，一是算法（广义的算法，即解决问题的方法），二是编译器。通过这两个方面，我想表达的意思是，一段程序的执行效率，是很难从表面现象得出结论的，至少从一些简单的层面，如代码的长度是几乎难以说明任何问题――因此一定要进行Profiling才能做到有效的优化。而现在，我们假设两段程序算法基本相同，编译器也只是进行简单的“翻译”，那么……我们能从“表面”看出性能高下吗？"
    },
    {
        "Title": "按月统计博客园单个用户的发文数量",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/11/fsharp-per-user-posts-by-month-statistics.html",
        "BriefIntro": "摘要: 这几天在家闲着，便试着写一些小程序。之前有朋友问到“F#能不能写Web”，于是我也就打算这么一试。虽然我能肯定，用F#写Web应用程序不会是问题，不过倒真还没有做过这方面的尝试。我想，如果用F#写Web应用程序，那么它很重要的一点，应该是利用其在异步编程方面的强大特性。最后我决定，使用F#编写一个按月统计博客园单个用户发文数量的简单服务。尝试的结果是――还有些问题没有解决。不管怎么样，我先把其主体逻辑描述一下吧。"
    },
    {
        "Title": "浅谈代码的执行效率（2）：编译器的威力",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/08/talk-about-code-performance-2-compiler.html",
        "BriefIntro": "摘要: 在上一篇文章中，我主要表达了这样一个观点：影响程序效率的关键之一是算法，而算法的选择与优化，和是否多一个赋值少一个判断的关系不大。关于算法的选择，我谈到其理论上的复杂度，并不直接反映出效率。因为在实际运用时，数据的规模，形式等等都会涉及到算法的实际效用。一个时间复杂度低的算法并不代表任何情况下的效率都高。这是“实际”和“理论”的区别之一。现在我打算来谈一下另一个比较“实际”的东西：编译器对于程序效率的影响。"
    },
    {
        "Title": "浅谈代码的执行效率（1）：算法是关键",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/07/short-code-is-not-always-fast-1-algorithms.html",
        "BriefIntro": "摘要: 前一段时间在博客园里看到这样一篇文章，那位兄弟谈到程序效率的关键是“简短”。他说，“程序越简短，其可执行代码就越少，就越有效率”，而在编写程序的时候，“要尽量改进我们的算法，而改进算法中最重要的一条，就是减少语句”。这句话从表面上似乎正确，但我认为性能这问题不能用“简短”这种方式去思考，否则会进入一些误区。我整理了一下思路，希望可以从几个方面把详细谈一下这个问题。首先我想说的是：“简短”不是关键，“算法”更加重要。"
    },
    {
        "Title": "AV不识爱卖克，便看三弟也枉然",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/07/1640998.html",
        "BriefIntro": "摘要: 阿凡达，已然无人不知无人不晓。江湖流传：“AV不识爱卖克，就看三弟也枉然”。此处AV自然指的就是Avatar，这句话意思是说，如果你没有看iMax的阿凡达，就算是看了3D版也等于没看过。因此，对于全国只有11块的iMax屏幕，大家自然就是疯抢了。而上海这边，只有位于人民广场的和平影都有这条件，试想全上海有这想法的人都涌到同一个地方，抢这个每日一千多（350 * 4场）人次的机会……是什么景象。"
    },
    {
        "Title": "一次批量修改博客文章的经验（下）：操作过程",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/05/batch-update-posts-1-progress.html",
        "BriefIntro": "摘要: 上一篇文章中我们进行了一些预备工作，主要是了解了该如何使用MetaWeblog API读取和修改博客园的文章――包括同步和异步两种调用方式。此外，由于F#在异步调用方面的优势，我决定使用F#来完成批量修改文章任务。这个任务并不困难，但很“危险”，一旦出错可能之前的文章就无法恢复了。因此，我把这个任务拆成多个步骤，每个步骤都会将数据保存在硬盘上。由此，即便出错，还是有挽回的余地。"
    },
    {
        "Title": "一次批量修改博客文章的经验（上）：准备工作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/04/batch-update-posts-1-preparation.html",
        "BriefIntro": "摘要: 这几天赋闲在家，除了看书和还债（如RSS订阅），终于把一直以来想做却拖着的事情完成了：批量去除博客文章段首的空格。这个过程并不难，只需要按部就班地去做就行了，一切资料都可以在互联网上搜索到。不过我还是打算记录一下，也是为了今后再做类似工作时有个参考，少走一些弯路。"
    },
    {
        "Title": "F#中的XML序列化",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2010/01/03/fsharp-xml-serialization.html",
        "BriefIntro": "摘要: 这两天在用F#写一小段代码，需要把一些对象存到外部文件中去。这个功能很容易，因为.NET本身就内置了序列化功能。方便起见，我打算将这个对象序列化成XML而不是二进制数据流。这意味着我需要使用XmlSerializer而不是BinaryFormatter。这本应没有问题，但是在使用时候还是发生了一些小插曲。"
    },
    {
        "Title": "2009年末，多少进行一些总结和展望吧",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/31/summary-2009.html",
        "BriefIntro": "摘要: 时间就这样悄无声息地到了2009年的最后一天，回首我这过去的一整年，可以用一句废话来总结，那就是“既有遗憾，也有收获”。不管怎么样，多少也应该总结一下吧――尤其是此时此刻，对我来说可谓是一个新的起点。自然，在技术博客上，终究还是围绕着“事业”谈谈吧。"
    },
    {
        "Title": "使用Fiddler辅助观看InfoQ的视频",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/29/fiddler-infoq-video.html",
        "BriefIntro": "摘要: InfoQ是一个好地方，而我认为其中最有价值的资源，便是其中的演讲视频。InfoQ在这方面有个特点：在演讲视频下方提供了清晰的幻灯片，而在播放的同时，还会根据进度进行切换。这观看体验自然比单纯的演讲录像要高出许多。可惜的是，时不时有朋友会向我反馈说，InfoQ实在是太慢，几乎无法流畅地观看视频。由于一时半会儿InfoQ也不会在中国放CDN，因此视频加载速度这问题……几乎无法解决。还好，如果我们退而求其次，至少可以使用Fiddler等工具来“缓解”这个问题。"
    },
    {
        "Title": "计算机（及其他）书籍赠送",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/28/1634125.html",
        "BriefIntro": "摘要: 由于即将转移工作阵地，因此要把所有的书都整理清点一遍。整理过程中发现有些书……还是不要让它占用宝贵的存储资源比较好，于是打算处理掉。其中一部分书是别人送的，另一部分是有年头的，还有一部分是一时兴起买的。它们大都价值不大，因此我是“赠送”而不是卖掉。当然还有一些书也并非如此不堪，只不过我不需要而已――这类书也麻烦兄弟们写写书评罢。:)"
    },
    {
        "Title": "五十种语言的“圣诞快乐”（下）：F#实现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/28/merry-christmas-in-fifty-languages-2-fsharp-async-workflow.html",
        "BriefIntro": "摘要: 不知道大家的圣诞节过的如何？有没有玩点啥有趣的东西？上次的文章中我们主要分析了使用Google Translate进行文字翻译的方式，并使用C#写了一个简单的的翻译程序，效果良好。不过，在平时开发过程中，对于此类问题我常用F#来解决这样的问题。那么使用F#来实现此类任务有什么优势吗？不错，我们现在便来看看这个问题。"
    },
    {
        "Title": "推荐内容索引",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/27/valuable-posts-index.html",
        "BriefIntro": "摘要: 写了不少文章，其中有不少比较用心的系列。积累了那么久，我在博客上也已经讨论过了各种问题。许多人提问的时候，我会说我写过某某文章，可以搜一下，但得到的反馈经常是找不到。其中一个原因是那些弟兄还不太会用搜索引擎――或是懒，但也有可能是以前的文章的确是“沉没”了。无论是博客园还是独立博客，对于内容的组织和管理还做得不够好，所以在这方面有所突破之前，还是通过手动整理的方式来保留重点内容吧。"
    },
    {
        "Title": "五十种语言的“圣诞快乐”（上）：分析与实现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/25/merry-christmas-in-fifty-languages-1-analysis.html",
        "BriefIntro": "摘要: 您知道“圣诞快乐”在不同语言中的写法吗？Google Translate知道。不过Google Translate好像并不希望我们可以直接获得这些内容――但这并不能阻止我们这些光荣的程序员来获得这些信息。"
    },
    {
        "Title": "老赵谈IL（4）：什么时候应该学IL，该怎么学IL",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/25/my-view-of-il-4-how-to-learn-il.html",
        "BriefIntro": "摘要: 又是一个拖了半年的系列，可能是前几篇主要以事实为准，举例子的文章总是比较容易写的，因此十分顺畅。而最后一篇打算做一个总结，以讲道理为主――却发现该将的似乎都已经讲完了。不过做事要有始有终，该完成的也必须要完成。那么现在就来谈谈我的一些个人看法：什么时候应该学IL，以及应该怎么学IL。"
    },
    {
        "Title": "重谈字符串连接性能（下）：分析优化",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/23/string-concat-perf-3-profiling-analysis.html",
        "BriefIntro": "摘要: 经过之间的性能比较，我们得知StringBuilder的性能并非时时最优，再经过实现分析，我们大致了解了StringBuilder的实现方式。虽然在此之前，大家也基本已经了解StringBuilder的实现原理，也有不少朋友指出了它性能缺陷的原因。不过“严谨”起见，寻找性能问题的方式应该是进行Profiling，然后找出性能关键再进行优化――而不是纯粹进行“阅读”这种静态分析方式。"
    },
    {
        "Title": "使用Profiler分析程序性能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/22/profiler-sampling.html",
        "BriefIntro": "摘要: 三个星期之前我向大家求助说，VS的Profiler分析程序性能时无法跟踪框架内部的方法调用。当时我做了不少尝试，例如下载并配置了.NET Framework的symbol文件和源代码，还尝试使用了ANTS Profiler和CLR Profiler等其他工具，最终还是没有成功。Ivony...老大在评论中告诉我说Sampling方式可以获得比Instrumentation更多的信息，不过我觉得Sampling得到的结果并不像我的目标那样干净，因此还是在寻找Instrumentation的方式。不过最终耗费了一个GTSC的支持点数，才被告知――的确应该使用Sampling。"
    },
    {
        "Title": "在.NET平台上使用Scala语言（下）：分析",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/21/scala-for-dotnet-2-analysis.html",
        "BriefIntro": "摘要: 上一篇文章里我们简单尝试了在Scala里编写.NET应用程序。这个过程并不困难，因为似乎Scala官方已经对此已经有较好的支持了。我们要做的只是“获取工具”，“编译成IL”，最后再“生成程序集”即可。那么，这些工具究竟做了些什么，Scala究竟又是如何支持.NET平台的，它的可用性究竟如何，我们还需要进一步的分析及尝试。"
    },
    {
        "Title": "在.NET平台上使用Scala语言（上）：初尝",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/18/scala-for-dotnet.html",
        "BriefIntro": "摘要: Scala是Java平台上的一门新兴起的语言，我也不止一次在博客上提到它。我非常希望它可以取代Java这种劣质语言，让Java平台的生产力上一个台阶。事实上，Scala从一开始――或者说“很早”就对生成.NET程序集提供了支持。只可惜，毕竟还是Java平台的东西，.NET方面的资源少之又少，不过我们还是可以进行一番尝试的。"
    },
    {
        "Title": "定制Paste from Visual Studio插件（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/16/vspaste-customization-2.html",
        "BriefIntro": "摘要: 上一篇文章里我们进行了简单的实验，验证了通过修改IL生成新插件的可行性，不过我们要做的事情还有很多，因为我们实际要做的事情其实是……插入行号。这需要我们补充新的逻辑，并且对CreateContent进行修改。那么我们又该如何写这大段大段的IL呢？没关系，其实这些事情不懂IL也可以做。"
    },
    {
        "Title": "定制Paste from Visual Studio插件（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/16/vspaste-customization-1.html",
        "BriefIntro": "摘要: 我在上一篇文章里谈了我常用Paste from Visual Studio（下文称VSPaste）的插件，这大大方便了我写博客时贴代码的工作。不过今天早上有朋友在我博客后面留言说：“VSPaste没法显示行号，不知大家有没有办法解决？”其实这点很容易，写个小程序，把VSPaste生成的HTML再进行一番处理不就可以了嘛。不过最方便的做法还是让VSPaste直接生成带行号的代码块，不是吗？那么，我们就来自己动手丰衣足食解决这个问题吧。"
    },
    {
        "Title": "浅谈代码着色（下）：服务器端着色",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/15/syntax-highlighting-server-side.html",
        "BriefIntro": "摘要: 上篇文章谈了客户端着色，而现在自然就来讨论服务器端着色了。先下个定义：我在这里谈的“服务器端着色”，是指直接从服务器端输出着色效果的做法（与“客户端着色时”输出纯代码文本相对）。至于这个着色效果是如何获得的，例如是由另一个用户直接提供的，还是用户提供纯代码文本，而用服务器端逻辑“着色”，在这里就统称为“服务器端”着色了。不过接下去的讨论，我们还是会作一些区分。"
    },
    {
        "Title": "浅谈代码着色（上）：客户端着色",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/14/syntax-highlighting-client-side.html",
        "BriefIntro": "摘要: 作为程序员，写文章时总免不了插入代码，而对代码进行着色几乎已经成为一个基础，一个事实标准。代码着色的确可以大大加强代码的可读性，因此即便是再不待见IDE的朋友，代码着色永远是必不可少的。不过在网页中进行代码着色的方式有很多，现在我们就来对比一下。记得之前也有朋友写过，但我总觉得不够完整，于是还是自己写一下吧。我们先来看客户端的着色方式。"
    },
    {
        "Title": "总结一下F#中运算符的定义规则",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/14/fsharp-operator.html",
        "BriefIntro": "摘要: F#允许开发人员定义或重载各类运算符，合理利用这一规则可以让编程变得方便，让代码更容易阅读。例如，在使用F#的MailboxProcessor的时候，我会习惯于定义一个运算符来代替显式的Post操作。不过，F#的运算符定义规则较为复杂，要搞清楚编译器的整体处理方式着实花费了一番功夫。比较奇怪的是，即便是《Expert F#》中对于这个话题也没有详细的叙述――更夸张的是MSDN的文档也相当马虎，甚至有代码缺失以及与试验不符情况（因为还没有正式发布？）。于是我连看带试，最终打算总结一番，作为备忘的同时也算是补充互联网资源。"
    },
    {
        "Title": "数十行F#打造简易Comet聊天服务",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/11/fsharp-comet-prototype.html",
        "BriefIntro": "摘要: 普通的Web应用程序，都是靠大量HTTP短连接维持的。如实现一个聊天服务时，客户端会不断轮询服务器端索要新消息。这种做法的优势在于简单有效，因此广为目前的聊天服务所采用。不过Comet技术与之不同，简单地说，Comet便是指服务器推（Server-Push）技术。它的实现方式是（这里只讨论基于浏览器的Web平台）在浏览器与服务器之间建立一个长连接，待获得消息之后立即返回。否则持续等待，直至超时。客户端得到消息或超时之后，又会立即建立另一个长连接。Comet技术的最大优势，自然就是很高的即使性。而F#实现一个Comet原型，只要几十行代码。"
    },
    {
        "Title": "在项目中使用Google Closure Compiler",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/09/ikvm-google-closure-compiler.html",
        "BriefIntro": "摘要: 现在的Web项目总是离不开大量JavaScript，而JS文件的体积也越来越大，也越来越影响页面的感知性能（Perceived Performance）。因此，我们会对JS文件进行压缩，一方面是使用Gzip，而另一方面则是去除JS文件里的注释、空白，并且压缩局部变量长度等等。对于一些成熟的类库来说，它们本身都会提供“完整注释”以及“强烈压缩”两个版本。但是，有时候我们需要自己修复类库里的bug，这只能在注释版中修改，对于压缩版自然就无能为力了。此外，自定义的脚本文件一般也值得一压。因此我在项目中时常会备一个脚本压缩工具。"
    },
    {
        "Title": "Route组件GetVirtualPath方法性能优化结果",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/08/Route-GetVirtualPath-optimization.html",
        "BriefIntro": "摘要: 由于使用Lambda表达式生成URL的方式性能较差，因此我使用Fluent Interface来代替原有的Lambda表达式构建方式。Fluent Interface主要对生成URL的前两个阶段（创建对象及分析对象）进行了优化，分别带来了超过2/3和1/2的性能优化，但因为最后一步，也就是使用Route对象的GetVirtualPath方法构造URL的性能没有提高，因此总体性能只提高了30%。于是我打算重新实现GetVirtualPath方法，希望得到更好的性能。那么优化的结果又如何呢？"
    },
    {
        "Title": "真有必要去除HTML中的空白字符吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/07/is-it-really-necessary-to-strip-white-space-in-html.html",
        "BriefIntro": "摘要: 刚才有朋友在MSN上问我说，他的页面中有许多空白字符，打开源文件一看发现这代码稀疏得很。他觉得很浪费，他说有什么办法可以去除它们。我问他“你的页面使用GZip压缩了吗？”他说用了，于是我回答说“那么就不用去除空白字符了，连续空白字符压缩得很好，去掉后效果不大的”。这时我又不禁想到早上那篇《博客园首页优化心得》中也有一条是“去除HTML中的空格、空行”，于是我便打算尝试一下，去除空白字符到底有多少效果。"
    },
    {
        "Title": "使用值类型LazyString分析字符串",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/07/LazyString.html",
        "BriefIntro": "摘要: .NET里提供了值类型与引用类型可谓是一个非常关键的特性，例如开发人员使用值类型时，可以充分控制内存的布局方式，这对于Interop等操作非常重要。不过，其实值类型最重要，最基本的特性还是内存分配上。现在基本上是个.NET开发人员就会叨念说“值类型”分配在栈上，“引用类型”分配在堆上。但是什么是栈什么堆？分配在栈上和堆上的区别是什么？如果说这两个问题太“理论”，那么来个实际的：您在平时什么情况下会使用，或者说，定义一个值类型呢？其实这才是重要的，否则背再多概念也没有用。只可惜从我面试的经验上来看，基本没有多少兄弟能把这些.NET基础完整说清楚。"
    },
    {
        "Title": "求助：如何使用VS的Profiler跟踪框架内部的方法调用？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/05/how-to-track-fx-methods-in-visual-studio-profiler.html",
        "BriefIntro": "摘要: 解决性能问题必须使用Profiler，无论是自己写的实验代码还是一些高级工具，没有数据，而是凭感觉来解决性能问题在绝大部分情况是不靠谱的。VSTS包含了Profiler，也经常见一些博客上用Profiler得到的数据进行性能分析，其中最著名的莫过于Rico Mariani的Performance Quiz系列了。使用VSTS的Profiler可以收集程序运行过程中每个方法的调用次数，所消耗的总时间等等，一目了然，但是我在使用过程中却出现了问题。"
    },
    {
        "Title": "jQuery Validation插件remote验证方式的Bug",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/04/jquery-validate-remote-bug.html",
        "BriefIntro": "摘要: jQuery插件很多，其中一个重要的插件便是jQuery Validation，它的作用是对表单进行验证，还上了jQuery官网。不过奇怪的是，最近用下来感觉有些古怪，因为好像有些死板，已有功能的应变能力还不强，甚至还有个奇怪的Bug。任何项目有Bug其实也正常，但这个Bug其实是一个文档上已经记载了，却没有实现的功能，这就有些说不过去了。这个问题便出在remote验证方式上，还好修改起来非常容易，在此记录一下，也方便以后的参考。"
    },
    {
        "Title": "做个游戏：设计代码生成特定的调用堆栈",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/04/stack-trace-with-StringBuilder-and-String-Concat.html",
        "BriefIntro": "摘要: 前篇文章里我谈了谈String.Concat与StringBuilder的实现，于是后来有个朋友回复到：“我发现StringBuilder里好像也用了String.Concat。在一次异常中，Exception的StackTrace显示是先发生了String.Concat异常，然后再StringBuilder.Append。”不过经过一些简单的分析，我们会发现StringBuilder.Append方法的各个重载都没有依赖（即调用）String.Concat方法，那么这样的调用堆栈又是如何形成的呢？"
    },
    {
        "Title": "重谈字符串连接性能（中）：细节实现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/03/string-concat-perf-2-stringbuilder-implementations.html",
        "BriefIntro": "摘要: 根据上次的评测结果，我们了解了几种字符串拼接方式的性能高低。从中可以看出，广受追捧的StringBuilder性能似乎并不是最好的，String.Concat方法有时候有时候更适合使用。那么为什么String.Concat方法性能那么高，StringBuilder又为什么落败，而我们又有没有什么可以改进的做法呢？为此，我们不妨动用.NET Reflector这一利器，看一下两者是怎么实现的。"
    },
    {
        "Title": "各种数组元素复制方式的性能比较",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/02/array-copy-benchmark.html",
        "BriefIntro": "摘要: 原本这只是“字符串”话题的一个分支，不过后来我发现这个问题单独来看也有一定参考价值，也有一些问题值得讨论的地方，其中也有一些问题希望得到高手指点，最终打算把这个话题独立处理。话不多说，现在就来看看。"
    },
    {
        "Title": "使用WinDBG + SOS谈对象大小及字符串的结构",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/01/windbg-sos-for-string.html",
        "BriefIntro": "摘要: 昨天我们使用了一个最最简单的小实验，来检查相同类型的不同对象大小是否相同。当然，我们很轻易地“验证”得出，不同长度的字符串大小是不一样的。不过这种表面现象其实很难说明问题，因此我现在还是用WinDBG + SOS来进行一些检查，希望可以得到一些表面上看不出来的信息。"
    },
    {
        "Title": "[已过期] 创业小公司招聘网页前端工程师（1名，上海市长宁区）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/12/01/1614483.html",
        "BriefIntro": "摘要: 某创业小公司，其实就是老赵呆的创业小公司，又要招聘网页前端工程师了。对于一个网站来说，什么最重要。至少在前期，可能还是网页前端工程师吧。至少我认为，在前期可以没有老赵，但是不能没有前端工程师，否则用户就根本看不到任何东西，再好的设想也难以实现。因此，我们目前急需您的加盟。\n"
    },
    {
        "Title": "相同类型的每个对象大小都是一样的吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/30/do-all-instances-of-the-same-type-are-equal-in-size.html",
        "BriefIntro": "摘要: 快速回答：“相同（引用）类型的每个对象大小都是一样的吗？”其实个问题对于大多数情况下来说应该正确的，不过的确也有些类型受到CLR的特殊照顾，因而有那么些例外。我现在尝试使用一些简单的小实验来进行验证，当然它是不严谨的，只能算是一个简单尝试而已。"
    },
    {
        "Title": "验证fixed关键字效果的小实验",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/29/lab-fixed-keyword.html",
        "BriefIntro": "摘要: 之前谈到String连接操作的性能，其中会涉及到unsafe操作，而unsafe操作必然会涉及到指针，于是fixed关键字也应运而生。fixed关键字是用来pin住一个引用地址的，因为我们知道CLR的垃圾收集器会改变某些对象的地址，因此在改变地址之后指向那些对象的引用就要随之改变。这种改变是对于程序员来说是无意识的，因此在指针操作中是不允许的。否则，我们之前已经保留下的地址，在GC后就无法找到我们所需要的对象。现在就来我们就来做一个小实验，验证fixed关键字的效果。"
    },
    {
        "Title": "视频：Microsoft PDC 09，算法及数据结构内容及其他",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/27/videos-of-pdc09-algorithms-data-structure-visual-studio-documentary.html",
        "BriefIntro": "摘要: 这里又有一些新整理好的视频。Microsoft PDC 09是最近的重头，只要您是搞微软技术的，无论关注哪个技术方面，都可以找到许多有用的内容。我也经常从此类大会中了解许多平时不太关注的内容，也算是保持知识的新鲜度。此外，还有算法和数据结构相关的内容，以及有趣的Visual Studio纪录片。"
    },
    {
        "Title": "重谈字符串连接性能（上）：性能评测",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/26/string-concat-perf-1-benchmark.html",
        "BriefIntro": "摘要: 看到这个标题是不是觉得很奇怪呢？字符串连接的性能，这个话题已经被谈了一遍又一遍，一次又一次，似乎已成定论，这又有什么好谈的呢？不过说来奇怪，根据我的实验结果在网上进行搜索，却找不到答案。因此，我现在和大家一起重新再作一次实验并观察结果。在文章最后我也会给出完整的代码，您可以自由地运行，修改，尝试，我们再一起进行交流。"
    },
    {
        "Title": "一系列技术视频：MIT 6.00，Channel 9 E2E，FP Foundamentals",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/25/technical-videos-mit600-channel9-e2e-fp.html",
        "BriefIntro": "摘要: 最近看一些技术视频上瘾，每天都要看一两个才满足，有时还会整理整理总结总结。视频的来源主要是Channel 9等外国网站，它们往往必须下载到本地才能观看，代价太高。在线看的也不是没有，不过要么就在Youtube等国内无法访问的站点上，或者就因为国内没有CDN导致播放不畅。因此，我正在把一些视频上传到号称国内第一视频站的优酷上，这样便可以比较方便的播放，甚至可以拖拖看看。目前我准备了三个系列，并且还在不断地进行搬运和整理工作。"
    },
    {
        "Title": "关于浮点数计算时的精度问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/24/precision-of-float-point-calculation.html",
        "BriefIntro": "摘要: 那个有问题的缩略图生成的方法发布之后，短短半天就有很多朋友响应，其中指出了不少方法中的不少问题，有些也是我没有意识到的。果然集体的智慧是无穷的，一段代码在许多人的眼皮底下经过，想留有bug也不容易。不过，我在这里只能谈一下我写那篇文章的本意了，我认为那篇文章中最主要的问题是，在计算图片尺寸时没有处理好浮点数计算的精度问题。"
    },
    {
        "Title": "您能看出这个生成缩略图的方法有什么问题吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/24/problem-of-generating-thumbnail-image.html",
        "BriefIntro": "摘要: 昨天又使用了某个多年以前写的，或者说是“收集”而来的方法。这个方法的作用是根据一幅图片（一般是幅大图）生成它的缩略图。这个方法用了许多年了，一直没有去怀疑过它的正确性，但是昨天忽然发现它一直以来都存在一个问题，虽然可能不是那么明显，而且也不会造成太大问题（否则早就发现了）――但是，这的确是个不妥的地方。这个问题在我看来也有一定借鉴意义，因此我打算把它展示出来。那么，您能否看出它究竟是错在什么地方了呢？"
    },
    {
        "Title": "老赵书托（3）：深入理解计算机系统",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/23/recommended-reading-3-csapp.html",
        "BriefIntro": "摘要: 如果说我上次推荐的SICP强调的是编程能力，抽象能力的话，那么CSAPP这本书强调的便是作为一个程序员的基本知识。SICP来自世界顶级学府MIT，而CSAPP也同样出身名门：CMU（卡耐基梅隆大学）。虽然没有SICP那么历史悠久，但它被世界几百所大学（幸运的是也包括我所就读的复旦大学）用作教材也有好多年了。不过我很不喜欢它的中文译名《深入理解计算机系统》――如果有人说它“底层”，我同意。但如果说它“深入”，至少我不那么赞同。"
    },
    {
        "Title": "再谈Attribute性能优化方式：使用CCI Metadata",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/20/more-on-attribute-cci.html",
        "BriefIntro": "摘要: Attribute使用了反射，密集调用时会带来较大开销，因此我们上次提出了一些优化方式，这样就不会产生性能方面的问题了。这个优化方式的关键，主要是使用直接获得构造Attribute的元数据，然后自定义它们的生成方式并缓存，这样就避免了每次获取元数据及反射构造Attribute的开销。我从一开始就抱有这个优化的“思路”，但是上篇文章中最终的做法是受到了heros同学的提示才得出的，因为我一开始还根本不知道CustomAttributeData这个已然内置的类库。我当时在探索的方向是使用CCI Metadata读取程序集中与Attribute相关的元数据。"
    },
    {
        "Title": "URL生成方式性能优化结果",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/19/url-generation-performance-improvement-result.html",
        "BriefIntro": "摘要: 继上次发现URL生成的性能问题之后，我最近一直在关注一些细节的性能优化。这些优化方式不是宏观的，理论的，而是在实践上对相同问题的不同做法进行探索。我把探索的过程和结论都发布在博客上了，从结果上看性能提高是比较明显的。但是，把它们用于解决实际问题时，效果又会如何呢？我把MvcPatch进行了一些修改，然后再使用UrlGenBenchmark进行了一番比较。"
    },
    {
        "Title": "Attribute操作的性能优化方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/18/attribute-performance-improvement.html",
        "BriefIntro": "摘要: Attribute是.NET平台上提供的一种元编程能力，可以通过标记的方式来修饰各种成员。无论是组件设计，语言之间互通，还是最普通的框架使用，现在已经都离不开Attribute了。迫于Attribute的功能的重要性（Kent Beck认为NUnit比早期JUnit设计的好，一个主要方面便是利用了Attribute），Java语言也在5.0版本中引入了与Attribute类似的Annotation概念。不过Attribute说到底也是一种反射操作，平时正常使用不会带来问题，但是密集的调用还是对性能有一定影响的。这次我们就来总结看看我们究竟可以如何回避Attribute操作的一些性能问题。"
    },
    {
        "Title": "《链接、装载与库》里的一个错误：关于调用栈",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/17/linker-loader-library-correction-about-call-stack.html",
        "BriefIntro": "摘要: 周六老同学聚会，出门前随手从桌上抓起了《程序员的自我修养――链接、装载与库》在路上翻。自从武汉博文出版社的周筠老师送给我这本书后，我基本上还没怎么看过。对这本书第一感觉是“标题党”，主标题起大了，虽然经过解释之后并非无法理解，但还是不太喜欢。但书还是好书，已经看完大半，而且基本上会在近期找个方式推荐一把。不过现在我想细说的并不是推荐相关话题（如适合谁看，该怎么看，结合什么一起看等等），而是想指出书中还未被《勘误》收录的一个错误：P288讲调用栈时，文字描述和配图上的问题。"
    },
    {
        "Title": "并发环境下的缓存容器性能优化（下）：性能测试",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/16/concurrent-cache-performance-improvement-2-benchmark.html",
        "BriefIntro": "摘要: 上一篇文章里，我谈到对于某些场景中的缓存容器，其写操作非常少，到了程序后期甚至为零，而对它的读操作却几乎是密集连续且无穷无尽的。对于这样的容器，如果使用ReaderWriterLockSlim去进行保护每个“读”操作，这开销是在有些多余。因此我提出了“不可变”的哈希表，目的是在保持读操作的时间复杂度为O(1)的情况下，尽可能避免多余的开销。现在我们便将它和其他几种时间进行一个性能的对比。"
    },
    {
        "Title": "“表达式树”配合“泛型参数字典”定义通用操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/13/general-add-operation.html",
        "BriefIntro": "摘要: 上午有朋友提出了这么一个问题：如何定义一个通用的相加操作。其实这可以利用“泛型参数字典”和“表达式树”配合完成，也有着非常优秀的性能。于是，我们便可以定义一个比.NET框架自带的Enumerable.Sum强大许多的扩展方法了。"
    },
    {
        "Title": "F#版本的CodeTimer（已支持CPU时钟周期统计）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/13/fsharp-codetimer.html",
        "BriefIntro": "摘要: CodeTimer很好用，自从在今年三月在.NET技术大会上看到Jeffrey Richter用类似的东西之后，我就自己写了一个。不过，当时是用C#写的，现在我需要在F#里做相同的事情就不那么方便了。当然，F#与.NET本是无缝集成，因此C#写的CodeTimer也应该可以被F#使用。不过，我平时在使用CodeTimer时并不是通过程序集引用，而是使用代码复制的方式，因此如果有个F#版本那么应该使用起来更加方便。"
    },
    {
        "Title": "并发环境下的缓存容器性能优化（上）：不可变的哈希表",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/12/concurrent-cache-performance-improvement-1-immutable-hash-table.html",
        "BriefIntro": "摘要: 我们在项目中经常会遇到这样的场景：一些信息读取开销较大，但只需要生成一次便可反复使用，因此我们会将其永久地缓存起来。例如在ASP.NET MVC中，系统会根据Controller的名称来缓存对应的元数据。这些缓存容器都有一些共同的特点，便是存储的对象数量有限（少则几十，多不过数千），但都需要在并发环境下被大量地读取，因此必须是线程安全的。那么，我们该如何设计这样的容器呢？"
    },
    {
        "Title": "缓存方式与对象创建的性能比较",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/11/cache-and-object-creation-benchmark.html",
        "BriefIntro": "摘要: 由于Lambda表达式构造URL的速度不佳，我最近对于性能上的细节问题进行了一些探索和尝试。对于很多问题，以前由于不会形成性能瓶颈，因此并没有进行太多关注。还有一些问题可以“推断”出大致的结论，也趁这个机会进行更详细的试验，希望可以得到更为确切的结论和理性的认识。这次我打算做的实验，是关于对象的缓存与创建的性能比较。在某些情况下，我们会将创建好的对象缓存起来，以便今后进行复用。但是不同的缓存方式会有不同的性能，因此……我们现在便来试试看。"
    },
    {
        "Title": "一次失败的尝试（下）：无法使用泛型的Attribute",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/11/cannot-use-generic-attribute.html",
        "BriefIntro": "摘要: 原本打算两篇写在一起，但是我认为这两个话题本身并没有太大关联，因此分开，便于查询。其实在构建Attribute的时候，我们经常会从构造函数中传入一个Type类型，然后在Attribute中使用Activator.CreateInstance或其他的“反射”方法来构造对象。那么，我忽然想，为什么不能使用泛型的Attribute呢？有了泛型便可以利用静态检查，也可以获得其他有用的特性。只可惜，C#并不支持在Attribute中使用泛型……而且这点在C# 4中也基本不会有所改变了。"
    },
    {
        "Title": "如何对一个博客系统进行CSS管理？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/10/style-management-for-blog-system.html",
        "BriefIntro": "摘要: 忽然发现，我的博客皮肤又改变了，这次是About栏。我在我的博客版式上投入了很大的精力，动用了大量的JavaScript和自定义CSS，希望可以让浏览效果更加“和谐”。可是，博客园在样式管理上似乎经常会出现一些问题，时不时让一些基础的样式修改破坏了版式。为什么这样的事情总是一而再，再而三地发生呢？这无法不让我多想一些。似乎这次的问题是由两方面原因造成的：1) 博客园修改了过于宽泛的选择器 2) 皮肤的样式直接依赖了最基础的样式"
    },
    {
        "Title": "一次失败的尝试（上）：原来GetCustomAttributes方法每次都返回新的实例",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/10/GetCustomAttribute-always-returns-new-instances.html",
        "BriefIntro": "摘要: 前一段时间我在比较各种URL生成方式性能的时候，其实已经为利用Lambda表达式的做法进行了优化。在优化之前，使用Lambda构建URL的性能比现在的结果还要慢上50%。性能低下的原因，在于每次都使用GetCustomAttributes来获取参数（或其他一些地方）标记的Custom Attribute。这里应该用到了反射，在这种密集调用情形中性能急转直下。"
    },
    {
        "Title": "我在TechEd的演讲：Real World ASP.NET MVC",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/09/dev343-teched-2009-real-world-aspnet-mvc.html",
        "BriefIntro": "摘要: 上周的TechEd 2009比想象中忙，掺和了不少Session。不过一到晚上就开始胡吃海喝，总体来说过得还是挺不错的――只不过博客就落下了。嗯嗯，从现在开始继续。这个是我在这次TechEd上关于ASP.NET MVC的演讲以及演示代码下载，内容比较多，时间有些不够用。大家不妨看看，权当消遣。我去处理别的事情了……太多邮件没有回复，太多RSS没有看了。"
    },
    {
        "Title": "为URL生成设计流畅接口（Fluent Interface）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/03/fluent-interface-for-url-generation.html",
        "BriefIntro": "摘要: 昨天我比较了三种URL生成方式的性能，并对结果进行了分析。从结果中我们得知使用Lambda表达式生成URL的性能最差，而且差到了难以接受的地步。经过分析，我们发现其中光“构造表达式树”这个阶段就占了接近30%的开销。虽然表达式树的节点是有些多，但是.NET中创建对象其实非常快，我实在没想到它会占这么高的比例。因此，我们需要这种做法进行方向性的调整，减少对象创建的数目。"
    },
    {
        "Title": "各种URL生成方式的性能对比（结论及分析）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/11/02/several-ways-of-generating-url-benchmark-result.html",
        "BriefIntro": "摘要: 上次我们设计了一个实验，比较三种不同URL生成方式的性能。您运行了吗？如果运行的话，有没有对结果进行一些的分析呢？现在我们就来详细观察及分析这次试验的结果，并给出我的分析。如果您有一些其他的看法，也请进行一些补充。从结果上看，Lambda表达式生成URL的性能令人难以接受，经过分析之后更发现，这是一个硬伤，必须根本性，方向性地进行改变。您对此有什么看法呢？我们不妨一起讨论一下如何做到“既美观，又高效”。如果您有更理想的做法也请告诉我。"
    },
    {
        "Title": "统计一个表达式树拥有的节点数量",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/31/get-expression-tree-nodes-count.html",
        "BriefIntro": "摘要: 如果要统计表达式树的节点数量，我们可以编写一个Expression Visitor来完成这个任务。值得注意的是，由于ExpressionVisitor只负责“遍历”，因此在进行“统计”、“收集信息”等任务的时候，都需要在子类内部保存临时信息。因此，许多ExpressionVisitor的实现其实都不是线程安全的。一般说来，由于自动生成闭包等机制，一个Lambda表达式实际构造出的节点总比我们“看出”的要多一些。"
    },
    {
        "Title": "各种URL生成方式的性能对比",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/30/several-ways-of-generating-url-benchmark.html",
        "BriefIntro": "摘要: 在上一篇文章中我们列举了各种URL生成的方式，其中大致可以分为三类：1) 直接拼接字符串，2) 使用Route规则生成URL，3) 使用Lambda表达式生成URL。我们可以轻易得知，这3种作法可维护性依次增加，而性能依次减少。不过，我们还是有一个疑问，这个性能究竟相差多少？它是否的确真的可以被忽略？为此，我们还是来进行一次性能对比吧。您可以在这里下载文末的解决方案，亲自试验一下――不过在此之前，您不妨进行一个预测，猜猜看最后的结果究竟如何。"
    },
    {
        "Title": "浅谈URL生成方式的演变",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/29/several-ways-of-generating-url.html",
        "BriefIntro": "摘要: 开发Web应用程序的时候，在页面上总会放置大量的链接，而链接的生成方式看似简单，也有许多不同的变化，且各有利弊。现在我们就来看看，在一个ASP.NET MVC应用程序的视图中如果要生成一个链接地址又有哪些做法，它们之间又是如何演变的。这个演变的过程，其实也是一步步发现缺点，再进行针对性改进的过程。我们虽然使用在ASP.NET MVC的视图作为演示载体，但是它的方式和思路并不仅限于此，它也可以用在ASP.NET MVC的其它方面（如在Controller中生成URL），或是其它模型（如WebForms），甚至与Web开发并无关联的应用程序开发上面。"
    },
    {
        "Title": "您选择简单的组合，还是完整的集成？（补充）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/28/more-on-composition-or-integration.html",
        "BriefIntro": "摘要: 昨晚就写到这里，刚看到有朋友提意见了，说我标题党，标题写着“文化”，里面变成PowerShell介绍了。其实如果我要介绍PowerShell就会更详细一些，而现在即使把所有的PowerShell脚本删了也还是有些内容的吧……不过现在还想多谈一些东西。例如，如果你要完成一件事情，那么会选择什么方式。我这里简单分为两种，一种是集成进常用的工具，如Visual Studio；另一种便是使用额外的工具――可以是Shell，也可以是别的。"
    },
    {
        "Title": "您选择简单的组合，还是完整的集成？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/28/composition-or-integration.html",
        "BriefIntro": "摘要: 其实这是两种文化，很多人说前者属于Unix文化，后者属于Windows文化。前者好比是一系列分散的小工具，它们互相配合完成任务，其典型代表是Unix Shell。而后者好比是一个完整的工具箱，包含了完成某件特定工作所需的几乎全部功能，其典型代表是我们再熟悉不过的Visual Studio。当然，既然是文化，就能够互相借鉴和采纳，因此我们在Unix环境中也可以使用如Eclipse和IntelliJ IDEA，而Windows环境中也有cygwin和Powershell。我今天写这个东西的原因是，我想要做的一件事情正好落入了这样的“俗套”，于是不仅“多想”了一些。这个事情便是所谓的“项目模板”。"
    },
    {
        "Title": "二十行C#代码打造Ruby Markup Builder",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/27/implement-ruby-markup-builder-in-20-lines-of-c-sharp-codes.html",
        "BriefIntro": "摘要: 从.NET诞生之日起就有了XML类库，但是从使用上来说非常不方便，许多行代码只能构造一个简单的XML对象。这个情况在.NET 2.0中也没有得到改变，直到有一天，LINQ to XML随.NET 3.5横空出世，于是乎XML的生活一下子变得美好了很多。与DOM API相比，使用LINQ to XML，无论是XML的构造还是读取都容易了许多。不过俗话说得好：“不怕不识货，就怕货比货”，这样的API与Ruby Markup Builder相比还是有明显差距。但是我们这些可怜的C#程序员难道只有在一边眼馋的份吗？不见得。"
    },
    {
        "Title": "书评：卓有成效的ThoughtWorks程序员的45个习惯",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/26/book-review-Practices-of-an-Agile-Developer-The-Productive-Programmer-The-ThoughtWorks-Anthology.html",
        "BriefIntro": "摘要: 这个书名看起来似乎有些莫名其妙，因为其实它包含了三本书：《高效程序员的45个习惯》、《卓有成效的程序员》和《软件开发沉思录：ThoughtWorks文集》。虽然最后一本书的中文标题里包含“沉思”字样，但总体来说其实这三本都是实践性的很强的书，基本上是会告诉你“怎么做”――当然同样也会告诉你为什么。基本上这三本小于等于200页的小册子陪伴了我半个多月来的上下班，上厕所已经睡觉前的时间，也带给了我不少体会和思考。"
    },
    {
        "Title": "到底博客园首页的标准是什么？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/25/1589474.html",
        "BriefIntro": "摘要: 博客园首页的标准是什么？它是有客观依据的，有案例可查的标准，还是仅仅是靠每个人心里自己的主观感觉来衡量的？现在的主要矛盾似乎就在于首页是个聚集区，大家靠自己的对自己文章的评价标准发上首页，用自己对别人文章的评价作为标准认为某某文章应该撤下首页，博客园管理团队也是使用自己的标准来操作――博客园团队也是人，我不知道有几个人，但肯定不会多，所以窃以为同样不能算是“集体智慧”。"
    },
    {
        "Title": "对Action方法的参数进行双向转化",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/23/bidirectional-conversion-for-action-parameter-with-route-binder.html",
        "BriefIntro": "摘要: 昨天有朋友忽然告诉我，在G点中国上搜索URL Routing时，我的《请别埋没了URL Routing》一文排在首位。这不禁让我汗颜，这是因为从现在的角度看起来，这篇文章的内容虽不能算错，但的确也不算是一种非常合适的做法。那篇文章的目的是展示如何利用URL Routing的扩展能力，将URL和Route Values通过Formatter进行双向的转化。这样便可以在Action方法中使用复杂参数的同时，也可以使用复杂参数得到正确的URL。这个目标是好的，可惜当时的思路有些偏差。现在我总结出了更合适的做法，并已经在项目中大量使用，效果不错。"
    },
    {
        "Title": "趣味编程：从字符串中提取信息（参考答案 - 下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/22/code-for-fun-tokenizer-answer-2-fsharp.html",
        "BriefIntro": "摘要: 昨天我们观察了如何使用基于状态机的顺序解析方式来提取字符串中的信息，不过由于winter-cn的做法和我原始的想法不谋而合，但实现的更为清晰，因此我在不献丑的同时，又设法使用另外一种方式来解决这个问题。后来又看到许多朋友给出了各种各样的做法，有普通拆分的方式，有利用正则表达式的做法。于是最后，我“不得不”使用一种特别的方式：F#来编写这么一段解析逻辑。从中我们也可以看到F#在做一些解析工作时的方便之处，在今后我还会谈一下它对我编写C#代码时的启发。"
    },
    {
        "Title": "趣味编程：从字符串中提取信息（参考答案 - 上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/21/code-for-fun-tokenizer-answer-1.html",
        "BriefIntro": "摘要: 这次“趣味编程”的目的是解析字符串，从一个指定模式的字符串中提取信息。对于目前这个问题，解决方案有很多种，例如直接拆分，使用正则表达式，或是如现在本文这般按照顺序解析。总结果上来说，这些做法都是可取的，不过现在我打算举出的做法是我认为最为“典型”也最有“学习”和“展现”价值的解决方案：基于状态机的顺序字符解析。也欢迎您对此其他的做法进行深入分析。"
    },
    {
        "Title": "浅谈线程池（下）：相关试验及注意事项",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/20/thread-pool-3-lab.html",
        "BriefIntro": "摘要: 三个月，整整三个月了，我忽然发现我还有三个月前的一个小系列的文章没有结束，我还欠一个试验！线程池是.NET中的重要组件，几乎所有的异步功能依赖于线程池。之前我们讨论了线程池的作用、独立线程池的存在意义，以及对CLR线程池和IO线程池进行了一定说明。不过这些说明可能有些“抽象”，于是我们还是要通过试验来“验证”这些说明。此外，我认为针对某个“猜想”来设计一些试验进行验证是非常重要的能力，如果您这方面的能力略有不足的话，还是尽量加以锻炼并提高吧。"
    },
    {
        "Title": "我的TDD实践：可测试性驱动开发（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/19/testability-driven-development-2.html",
        "BriefIntro": "摘要: 在上一篇文章里，我谈到自己在采用传统TDD方式进行开发时感到有些尴尬，最后不得不放弃这种先写测试再写代码最后重构的方式。不过我还是非常注重单元测试的实践，慢慢发现自己的做法开始转向另一种TDD方式，也就是“可测试性驱动开发”。简单的说，我现在采取的做法是，先开发，再测试，一旦发现产品代码不太容易测试，则将其重构为容易测试的代码。我发现，这种时刻注重可测试性的开发方式，其最终也能够得到质量较高的代码。上次谈的比较理论，而这次我便通过一个简单功能的开发过程，来表现我的思维方式及常用做法。"
    },
    {
        "Title": "谈吉日嘎拉的《白话反射技术》及其他（吵架篇）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/16/jiri-reflection-argue-2-non-tech.html",
        "BriefIntro": "摘要: 在技术社区还是以技术为先，在上一片文章里我谈了技术方面内容，那么这次就来谈谈非技术的。我反感这种社区氛围，火药味不是问题，但是谈技术不好好谈技术，总是扯上这人如何那人如何，我实在心烦的慌。您觉得吉日的文章误导初学者吗？写文章反驳吧！您觉得吉日的文章充满铜臭味吗？写文章反驳吧！我已经写了一篇文章，接下来就要靠大家了。挑出你最不满的吉日的文章，逐条反驳吧。\n\n"
    },
    {
        "Title": "谈吉日嘎拉的《白话反射技术》及其他（技术篇）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/16/jiri-reflection-argue-1-tech.html",
        "BriefIntro": "摘要: 社区又掀起了腥风血雨，这次又是吉日嘎拉这一博客园的众矢之的所引发的惨案。他的一篇《白话反射技术》发表之后，被包同学一篇文章狠狠地踩在脚底下，言辞之激烈令人罕见。从两片文章的内容与评论来看，大家的眼光似乎都没有集中在技术本身，而是针对个人在你来我往。有评论称这是“门派之争”，虽然看不出到底哪门哪派，但看上去也还真像那么一回事情。不过这真是技术社区该有的讨论氛围和方式？如果觉得吉日嘎拉在技术上有问题，难道不应该条条指出吗？既然没有人做这件事情，那么就还是我来吧，反正我写博客也成习惯了。"
    },
    {
        "Title": "博客二三事",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/16/talk-about-blogging.html",
        "BriefIntro": "摘要: 其实我一直想写篇文章来谈谈博客这些方面的事情。我虽然在博客上投入了很多，它也是我工作和生活中非常重要的一部分，也自认为写的不少亦不差，但是一直缺少对这方面的总结，以及系统的思考。即便是看着一轮又一轮地“年度总结”过去，我也没有针对我的博客讨论过什么内容。之前也有过朋友问过我博客方面的事情，也有一些讨论引起我的思考，但都没有下决心写点文章。而这次就趁着一些冲动，细细谈一下博客方面的事情吧。"
    },
    {
        "Title": "我的TDD实践：可测试性驱动开发（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/15/testability-driven-development-1.html",
        "BriefIntro": "摘要: TDD（测试驱动开发，Test Driven Development）是重要的敏捷实践之一，它的基本原理是用测试来带动开发，先写测试代码，再写开发代码，最后重构。许多TDD推广和实践者认为，这种方式易于带来高质量的代码。而如今，TDD也慢慢有了Test Driven Design，也就是测试驱动设计的意味。也就是说，它更像是一种设计方式了。这些理论我很愿意相信，也很支持，但是从实际角度来说，我还是较难接受正统的TDD行为。不过，我也在实际开发过程中总结出……怎么说呢，应该说是更适合我自己的实践方式，在此希望能和大家交流一下。"
    },
    {
        "Title": "简化DomainRoute的配置",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/15/simplify-domain-route-configuration.html",
        "BriefIntro": "摘要: 昨天有朋友写邮件告诉我说，他正在项目中尝试着使用我提供的DomainRoute组件。我很高兴，这说明我的努力不是在自娱自乐，是对别人有实际帮助的，也有一些朋友会尝试着自行对项目进行扩展，而不总是靠微软提供的食物来过活。不过他说，他发现DomainRoute的配置非常繁琐，需要为每个Route使用WithDomain，提供了大量重复的信息。他说他也在构建了辅助API，不过似乎效果不够好，问我有没有更好的解决方法。其实是有的，因为我在使用DomainRoute的初期也遇到了这个问题，不过现在已经在MvcPatch中提供了个人认为比较令人满意解决方案。"
    },
    {
        "Title": "关于排错：专注思考，细心观察，步步为营",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/14/about-debugging.html",
        "BriefIntro": "摘要: 时常有朋友发邮件给我，说遇到了一个什么什么奇怪的问题，不知道是怎么回事，希望我帮忙看看。我基本上每天都会抽出或长或短的时间来回复这些邮件，不过也经常发现，其实许许多多的问题都完全是有能力自行解决的。在很多时候，我发现许多朋友还缺乏最基本的解决问题，分析问题的方式。其实我在平时工作中也会遇到各种各样的问题，有时候甚至异常古怪，但是在仔细分析之下，往往都能解决。于是我现在打算谈点解决问题的基本方式，希望可以帮到一些朋友。"
    },
    {
        "Title": "浅谈Route组件的设计思考与模式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/14/aspnet-routing-design-ideas-and-patterns.html",
        "BriefIntro": "摘要: Route组件虽然可以说是ASP.NET的“门户”，不过至今为止似乎都被微软当作是二等公民。可能是由于自带的Route类功能已经太强，微软官方或社区内都不太关注RouteBase的扩展。不过有一点是正确的，那就是在大部分情况下的确没有必要去扩展RouteBase。事实上，我构建过不少RouteBase类，不过除了DomainRoute之外，其余的都被我放弃了，例如在大半年前写的《请别埋没了URL Routing》中所提供的FormatRoute，在MvcPatch中也已经有了更好的替代品（过几天便会谈到这一点）。"
    },
    {
        "Title": "我对NHibernate的感受（4）：令人欣喜的Interceptor机制",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/13/my-view-of-nhibernate-4-interceptor.html",
        "BriefIntro": "摘要: 之前谈了NHibernate的几个方面，似乎抱怨的居多，不过这次我想谈一下我对Interceptor的感受，则基本上都是好话了。这并不一定是说Interceptor设计的又多么好（事实上它使用起来还是挺麻烦的），但是这的确也是我认为NHibernate超越LINQ to SQL，尤其是Entity Framework的又一个重要方面――因为Entity Framework本身也已经不差了。更重要的是，Interceptor机制让我得以实现我“理想中的”数据访问功能。当然现在只是浅尝辄止一番，我打算以后再慢慢地，详细地谈谈我所满意的“数据访问层”设计。"
    },
    {
        "Title": "浅谈Route规则名称的作用，及MvcPatch的处理方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/13/name-of-route-with-MvcPatch.html",
        "BriefIntro": "摘要: 国庆前的最后一天，我写了《关于ASP.NET Routing的几点内容》，其中谈论了ASP.NET Routing作用，设计目的，工作流程等等。不过我还有一个比较重要的东西一笔带过了，不知道您注意到了没有，在向ASP.NET Routing的RouteTable.Routes属性（一个RouteCollection对象）中添加Route规则的时候，我们会同时指定一个“名称”。在微软给出的官方“广告”中，似乎看不出这个名称有什么用。但事实上，它的功能非常关键。"
    },
    {
        "Title": "趣味编程：从字符串中提取信息",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/12/code-for-fun-tokenizer.html",
        "BriefIntro": "摘要: 字符串解析是程序员工作中非常重要的一部分，也是非常考验编程能力的工作。基本上我在面试程序员的时候，一定会出一道编程题目作为考察的一方面，而这道题目有很大的可能性是做字符串的解析。例如，给出一个模式规则，要求写程序判断某个字符串是否符合特定格式。例如，要求将BB Code转化为HTML。而现在这个趣味编程题，来自于我目前正在进行的项目。因此从实用角度来说，也有一定现实意义。"
    },
    {
        "Title": "NHibernate自定义集合类型（下）：自动维护双向关系",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/12/nhibernate-custom-collection-3-bidirectional-relation.html",
        "BriefIntro": "摘要: 如果使用NHibernate自带的集合类型，其中一个问题就在于需要在代码中手动维护双向关系，迫使开发人员编写额外的代码。其实这就是集合自定义逻辑的一个应用方面。现在，既然我们已经得到了一个方便的自定义集合的解决方案，那么现在便把“自动维护双向关系”作为目标来实现一番，也算是一个非常典型的示例了。"
    },
    {
        "Title": "NHibernate自定义集合类型（中）：通用实现方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/11/nhibernate-custom-collection-2-general-implementations.html",
        "BriefIntro": "摘要: 上一片文章中我们观察了在代码中自定义一个基于Set的集合类型该怎么做，以及简单了解了一下NHibernate的这些自定义支持大致是如何工作的。不过文章最后还是留了两个问题，一是认为这种扩展方式不够通用，二是其中会出现的“重复”或是“反向依赖”。现在我们就需要在上文的基础上进行总结，提出一个通用的实现，可以方便我们构建自定义的集合类型。"
    },
    {
        "Title": "NHibernate自定义集合类型（上）：基本实现方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/10/nhibernate-custom-collection-1-basics.html",
        "BriefIntro": "摘要: 前天一篇文章中我说NHibernate的集合类型实现有些“尴尬”，它无法使用自定义集合类型，设计也有些古怪――不过在许多朋友的指点下，我意识到NHibernate是可以使用自定义集合类型的。至于它的设计是否合理（或者说是用是否方便？）……这就是这几篇文章中想要探讨的内容了。不少朋友给出了一些自定义集合类型的示例链接，我参考之余也自己找了一些资料，慢慢尝试，也终于有了一些体会。"
    },
    {
        "Title": "最受欢迎中国技术博客评选（PB50）结果公布",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/09/PoPblogger50.html",
        "BriefIntro": "摘要: 国外有博客评选榜单，记得之前也有人提议国内也做一下类似的评选。这不，ZDNET搞了一个。现在结果终于揭晓了，看看有几位是您已经知道并订阅了呢？不过，我还是感觉大部分的博客更新的实在不够频繁，这和人家世界级的榜单差太远了啊，兄弟们还得努力才是。"
    },
    {
        "Title": "尝试使用IKVM运行Lucene 2.9.0版",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/09/ikvm-simple-lucene-benchmark.html",
        "BriefIntro": "摘要: 上月末Lucene发布了2.9.0版，这个版本的改进比较明显，主要是各方面性能的增强，以及对数字字段范围查询的直接支持。这个版本还有个重要的意义，就是它标记了Lucene 3在API上的改变，及早跟进的话对Lucene 3的未来接受程度会比较好。Lucene的更新很慢，而移植到.NET平台上的Lucene.NET的二进制发布则更是一直停留在07年三月的2.0版本。虽然我们可以通过svn获取到Lucene.Net 2.3.2的源代码自行编译，但这次我还是想直接使用最新的2.9.0版本。最终我决定趁这个机会尝试一下IKVM.NET。"
    },
    {
        "Title": "我对NHibernate的感受（3）：有些尴尬的集合支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/10/08/my-view-of-nhibernate-3-collection-support.html",
        "BriefIntro": "摘要: 既然是一个ORM框架，那么自然是将O这一端映射R上。至于集合，是O这方面最常见，也是R这一边非常容易表示的关系。例如，一个问题（Question）可以包含多个回答（Answer）。不过，NHibernate需要“一锅端”地设置集合属性，它没有保留自定义集合的逻辑。此外，在更新集合数据的时候，它也会出现多余的数据加载。"
    },
    {
        "Title": "关于ASP.NET Routing的几点内容",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/30/things-about-aspnet-routing.html",
        "BriefIntro": "摘要: 在之前的文章中，有一些朋友会问我一些关于ASP.NET Routing的内容。这个组件的重要性越来越大，ASP.NET MVC，ASP.NET Dynamic Data都用到了ASP.NET Routing。事实上，在ASP.NET 4.0中还会出现对ASP.NET WebForms的支持。可惜的是，目前对于ASP.NET Routing的文档和描述内容都很少。因此，有的时候一些朋友可能无法理解我一些扩展的设计思路。现在我打算详细解释一下有关ASP.NET Routing中最常见的几个问题。"
    },
    {
        "Title": "ASP.NET Routing对请求的处理方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/29/aspnet-routing-request-processing.html",
        "BriefIntro": "摘要: 原本这是《关于ASP.NET Routing的几点内容》一文中的一节，不过等写完这节之后发现这块内容已经比较完整了，而且它本身也是独立和最为常见的部分，因此我把它提取出来单独成文。至于那片文章的其他部分我会再修改一下，明天发布。希望这些内容会对您理解ASP.NET Routing工作方式，以及阅读ASP.NET Routing的代码有所帮助。"
    },
    {
        "Title": "趣味编程：C#中Specification模式的实现（参考答案 - 下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/29/specification-pattern-in-csharp-practice-answer-2.html",
        "BriefIntro": "摘要: 上一篇文章中我们利用C#语言的特性实现了一种轻量级的Specification模式，它的关键在于抛弃了具体的Specification类型，而是使用一个委托对象代替唯一关键的IsSatisfiedBy方法逻辑。据我们分析，其优势之一在于使用简单，其劣势之一在于无法静态表示。但是它们还都是在处理“业务逻辑”，如果涉及到一个用于LINQ查询或其他地方的表达式树，则问题就不那么简单了――但也没有我们想象的那么复杂。"
    },
    {
        "Title": "使用Model Binder绑定Action参数字段时的取舍问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/28/exclude-field-when-bind-action-parameters.html",
        "BriefIntro": "摘要: 刚才在看代码的时候忽然发现了一件可能会成为问题的情况，而这个情况还挺隐蔽的。因此，我原本写到一半的东西就暂时停下，顺延至明天，而现在先来谈谈这个问题。这个问题就是在使用DefaultModelBinder在绑定字段时的取舍问题。而您在使用ASP.NET MVC的时候不妨也检查一下，看看有没有这方面的情况。"
    },
    {
        "Title": "趣味编程：C#中Specification模式的实现（参考答案 - 上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/28/specification-pattern-in-csharp-practice-answer-1.html",
        "BriefIntro": "摘要: Specification模式的作用是构建可以自由组装的业务逻辑元素。不过就上篇文章的示例来看，“标准”的Specification模式的实现还是比较麻烦的，简单的功能也需要较复杂的代码。不过，既然说是“标准”的方式，自然就是指可以在任意面向对象语言中使用的实现方式，不过我们使用的是C#，在实际开发过程中，我们可以利用C#如今的强大特性来实现出更容易使用，更轻量级的Specification模式。"
    },
    {
        "Title": "在视图中使用递归生成树状结构",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/27/rendering-tree-like-structure-recursively.html",
        "BriefIntro": "摘要: 在开发过程中往往会有一个需求，就是将一个树状的数据结构在视图中表示出来。例如最传统的多级分类，系统中有一系列根分类，每个分类中又带有一些子分类，而我们的目标便是在页面上生成一个由ul和li嵌套组成的HTML结构。这个问题看似简单，但是如何让实现变的轻松、易于使用也是一个值得讨论的问题。这次就来谈谈这部分的情况。"
    },
    {
        "Title": "使用Lambda表达式编写递归函数（性能测试）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/27/recursive-lambda-expressions-benchmark.html",
        "BriefIntro": "摘要: 为了补充引用资料，现在对之前Lambda表达式编写递归函数进行一番性能测试。测试的对象为辗转相除法求最大公约数，使用以下三种方式计算：普通递归，使用SelfApplicable及Fix进行计算。从执行时间上看，直接递归的性能最好，Self次之，但相差不大，但Fix方式消耗的时间就为前两者的7倍左右了。从GC压力上看，直接递归与Sel对GC都没有丝毫压力，但Fib由于构建了额外的委托对象，其压力也相对较大。\n\n\n"
    },
    {
        "Title": "谈谈我对《ThoughtWorks文集》中多语言开发部分的看法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/26/talk-about-muti-language-programming-in-thoughtworks-anthology.html",
        "BriefIntro": "摘要: 一早看怪怪同学评论《ThoughtWorks文集》公开的样章，一谈多语言开发（第5章），二谈测试（第13章）。怪怪同学的看法是贬前者而捧后者，并提出“同样一个包装下、同一个公司不同的作者，差异如此之大，那么在我们的学习过程中，就要注意去芜存菁了”。说实话，我没有理解他对第5章的评价，如在“抽象方式”方面的说法我没有太深的理解。不过现在我也谈谈我对书中所写多语言开发的看法。用一句话概括的话就是：赞同结论，不赞同论据。的确如怪怪同学所言，即使是有“大师”称号的作者，其内容也该去芜存菁。"
    },
    {
        "Title": "幻灯片：LINQ Inside, Part 1",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/26/slides-linq-inside-part-1.html",
        "BriefIntro": "摘要: 整理电脑时整理发现一个幻灯片，修改日期是去年年底，当时不知道为了什么，对方是谁讲一次LINQ。这次讲座是入门型的，主要讲了讲什么是LINQ，什么是表达式，表达式树等等。不过这第一部分似乎……还没有提到LINQ，更那个什么的是，我已经找不到第二部分了……因此，大家可以随意看看。目前脑袋写了几篇相当不错的，可作为入门的LINQ相关文章。以后我再提到这部分内容时终于也有东西可以引用了……"
    },
    {
        "Title": "语言特性与API设计",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/25/language-and-better-interface-for-decorator.html",
        "BriefIntro": "摘要: 我平时的主要工作之一，便是编写一些基础及通用的类库，能够在项目中大量复用。换句话说，我的工作目的，是让其他开发人员可以更好地完成工作。因此，如何设计更容易使用的API是我经常要考虑的东西，偶尔也会有一些体会。而现在这些内容，是我在为Functional Reactive Programing写“参考答案”的时候忽然“总结”出来的想法。可能比较简单，但我想也是设计API是需要考虑的一些内容。"
    },
    {
        "Title": "我对NHibernate的感受（2）：何必到处都virtual",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/24/my-view-of-nhibernate-2-virtually-everything.html",
        "BriefIntro": "摘要: 上一篇文章主要是在夸NHibernate实现的好，而这篇就完全是来抱怨的了。NHiberante有个毛病，就是如果是和数据库产生映射的类，就要求所有的public成员和protected成员必须是virtual的。这就让我觉得无厘头了，为什么没有任何关系的东西也要受到限制？我知道NHiberante要求将属性标记为virtual是为了延迟加载，但这又关没有映射的属性，甚至方法什么事情呢？虽然我现在明白了原因，但还是不能接受――因为我们在承受Java语言所带来的痛苦。"
    },
    {
        "Title": "我对NHibernate的感受（1）：对延迟加载方式的误解",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/24/my-view-of-nhibernate-1-lazy-loading.html",
        "BriefIntro": "摘要: 我用NHibernate时间不长，而NHibernate的复杂程度也决定了我无法像了解LINQ to SQL那样容易。不过在使用了一段时间过后，还是对它有一定体会。有欣喜，有误解，也有抱怨。总体来说，目前NHibernate是我最满意的ORM框架。之前我一直认为NHibernate使用了一种简单的延迟加载方式。但事实上，它使用了一种维持原有业务逻辑的延迟代理写法。如果您关注我的文章，会发现这就是我之前提出的最为理想的延迟代理实现方式，也是我在Eazy类库中使用的做法。惭愧啊。"
    },
    {
        "Title": "一些技术图书编写、推荐、出版人员需要自重",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/23/1572868.html",
        "BriefIntro": "摘要: 国内图书市场已经很不健康了，虽然现在许多出版社、编辑和作者的努力都看得到，但是总有更多的书冒出来拖他们的后腿。对于普通人来说，有多少人会区分出版社，区分作者呢？因此，我真希望技术图书的编写、推荐和出版人员还是要自重，写不好书就不要写，出不了好书就不要吹，没看过书就不要推。图书产业虽然也早已商业化，但是这毕竟还代表了知识，有其特殊性，经济利益不该是你们唯一考量的东西。"
    },
    {
        "Title": "在ASP.NET MVC中使用IIS级别的URL Rewrite",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/23/aspnet-mvc-iis-level-url-rewrite.html",
        "BriefIntro": "摘要: 大约一年半前，我在博客上写过一系列关于URL Rewrite的文章，把ASP.NET平台上进行URL Rewrit的方式和各自地特点进行了较为详细的描述。应该来说，已经讲的非常具体，可以应对90%的情况。其实IIS Rewrite的原理非常容易理解，进行一些简单的变化和推断之后，便可以得出一些问题的原因和解决方案。现在我们就来看一个真实案例：在ASP.NET MVC中使用IIS级别的URL Rewrite。"
    },
    {
        "Title": "趣味编程：Functional Reactive Programming（参考答案）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/23/functional-reactive-programming-for-csharp-answer.html",
        "BriefIntro": "摘要: 初见Functinal Reactive Programming时，它的编程方式让我大开了眼界，居然可以用这种方式来操作和控制事件。虽然从技术角度来说，要实现这种方式并不是非常困难，甚至颇为有趣。因此我把它当作一次“趣味编程”。不过，这次的结果似乎让我对API设计有了一些新的体会，我打算明天再来总结一下。今天，我们先关注原题的解决方式。"
    },
    {
        "Title": "片段缓存的实际应用、延迟加载及Eazy类库",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/22/how-to-use-fragment-cache-lazy-load-and-library-eazy.html",
        "BriefIntro": "摘要: 片段缓存已经实现完整了，但好像还没有提到如何在项目中进行实际应用，那么现在就来谈一谈这方面。之前也有朋友提出，这个片段缓存难道节省的只是拼接HTML字符串的时间吗？这其实就涉及到片段缓存在实际项目中该如何使用的问题了。我们通过延迟加载来省下数据加载的开支，而且有了Eazy类库之后，定义延迟加载是件非常容易的事情。"
    },
    {
        "Title": "适合ASP.NET MVC的视图片断缓存方式（下）：页面输出原则",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/22/aspnet-mvc-fragment-cache-3-rendering-principle.html",
        "BriefIntro": "摘要: 上一篇文章里已经把Html.Cache打造成了非常具有可用性的API，需要缓存时我们只需在页面上做一个标记即可。标记内部的写法和普通视图的写法相同，RenderPartial等辅助方法输出内容也会被一并缓存下来。只可惜，上次文章末尾我提到有些效果是有前提的。这个前提就是必须修改RenderPartial的实现，让它遵守一个原则：如果您是在向页面输出内容，请务必将所有内容通过页面的Writer输出。"
    },
    {
        "Title": "适合ASP.NET MVC的视图片断缓存方式（中）：更实用的API",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/21/aspnet-mvc-fragment-cache-2-more-friendly-api.html",
        "BriefIntro": "摘要: 上一篇文章中我们提出了了片断缓存的基本方式，也就是构建HtmlHelper的扩展方法Cache，接受一个用于生成字符串的委托对象。但是在实际开发过程中，我们最乐于看到的使用方法，应该只是使用某个标记来“围绕”一段现有的代码。不过这个方法并不实用，如果您要缓存大片的HTML，还需要准备一个Partial View，再用它来生成网页片段。这次我们会构建一个更为良好的API。"
    },
    {
        "Title": "幻灯片：Web开发中的缓存",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/21/slides-web-cache.html",
        "BriefIntro": "摘要: 这是我昨天在博文视点Open Party上海站上关于Web开发中缓存的简单讲座。原本博文视点的朋友们希望我讲一下ASP.NET MVC方面的话题（估计看我最近一直在搞这个），但是我觉得其他平台一直用的是MVC框架，而ASP.NET MVC作为“后来者”也没有什么出彩的地方，所以最终选择这个稍微“通用”些的话题。"
    },
    {
        "Title": "从ASP.NET的PHP执行速度比较谈起",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/18/aspnet-php-benchmark-and-more.html",
        "BriefIntro": "摘要: 上星期我在InfoQ发表了一篇新闻，对Joe Stagner在博客上发表的三篇关于ASP.NET与PHP性能对比的文章进行了总结。写新闻其实挺不爽的，因为不能夹杂个人的看法，只能平铺直叙陈述事实。当然，如果像某些新闻那样“换一种说法”是可以骗过一些“不明真相的群众”，但是这就有违道德了。因此，在客观陈述完新闻内容之后，我只能选择把自己的感想、评论等内容放在自己的博客上。"
    },
    {
        "Title": "适合ASP.NET MVC的视图片断缓存方式（上）：起步",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/17/aspnet-mvc-fragment-cache-1.html",
        "BriefIntro": "摘要: 说到网站性能优化，没有什么比“缓存”更重要了。即便是某些朋友口中念念不忘的“静态页”，说到底也只是缓存了整张页面内容而已。但是，显然这样大粒度的缓存策略，在如今“牵一发而动全身”的Web 2.0站点中几乎是无法使用的。视图片断缓存，缓存的也是页面内容，它比更低级别的缓存更有效率，也比静态页等整页内容缓存的适用面要大得多。在Rails或Django中都有类似的功能，但ASP.NET MVC甚至在2.0的Road Map中还没有包含这一功能，我们只能自己动手丰衣足食了。不过有了ASP.NET WebForm作为强大的视图引擎，加这样的功能简直是举手之劳。"
    },
    {
        "Title": "趣味编程：将事件视为对象（参考答案）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/17/on-event-as-object-practice-answer.html",
        "BriefIntro": "摘要: 这次我们是要编写一个DelegateEvent"
    },
    {
        "Title": "ASP.NET WebForm页面内容输出方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/16/where-does-aspnet-page-render-to.html",
        "BriefIntro": "摘要: 这次我们谈的话题是“Web Form页面上输出内容的方式”。这其实是一个非常旧的话题了，因为本文的内容甚至可以运用于ASP.NET 1.1之上。不过这个话题的适用范围很广，因为即使是目前最新的ASP.NET MVC框架，它的默认视图引擎依旧是基于ASP.NET WebForm的（如Page，Control，MasterPage）。甚至说，由于ASP.NET MVC框架的特性，我们会遇到更多在页面上“直接输出”内容的情况。因此，这个话题在ASP.NET MVC应用中可能由为重要。"
    },
    {
        "Title": "Get Ready for Real World ASP.NET MVC",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/16/get-ready-for-real-world-aspnet-mvc-at-teched-2009.html",
        "BriefIntro": "摘要: 2009年的TechED大会即将在北京举行（11/5 - 11/7），其中有我的一个Session。我将其命名为“Real World ASP.NET MVC”，希望可以分享一下自己在ASP.NET MVC方面的使用体会。现在，希望大家可以给我一点帮助。例如，您在使用ASP.NET MVC开发Web应用程序时有没有遇到什么困难？您认为ASP.NET MVC哪方面还无法让人满意？各个方面都可以。"
    },
    {
        "Title": "趣味编程：C#中Specification模式的实现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/15/specification-pattern-in-csharp-practice.html",
        "BriefIntro": "摘要: Specification模式的作用是构建可以自由组装的业务逻辑元素。多个Specification对象可以组装起来，并生成新Specification对象，这便可以形成高度可定制的业务逻辑。例如，我们可以使用依赖注入（控制反转）的方式来配置这个业务逻辑，以此保证系统的灵活性。但是Wikipedia上提供了非常旧的内容，很可能是在C#只是1.0版本的时候编写的代码（或者说它为了“兼容”Java那种语言的实现方式）。那么在实际开发过程中，我们又该如何利用C#如今的强大特性来实现出更容易使用，甚至是更为“轻量级”的Specification模式呢？"
    },
    {
        "Title": "WebFormView的标准修改办法及MvcPatch项目",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/15/standard-webformview-patch-and-MvcPatch-project.html",
        "BriefIntro": "摘要: 上一篇文章中我提到WebFormView的实现破坏了IView对象设计思路，它会把视图内容直接生成至HttpContext.Current而不是Render方法指定的TextWriter中。之前我提出了一种非常临时，非常山寨，非常简陋，绕弯，但是可行，或者说是可以“表现出解决问题的方法”的代码，而这次我们来做一次“标准”的修改。此外，我还创建了一个MvcPatch项目来保存这些内容。"
    },
    {
        "Title": "应该算是WebFormView的一个Bug",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/14/webviewengine-bug-always-render-to-current-context.html",
        "BriefIntro": "摘要: 最近需要搞一些重要的功能，结果又遇到了意料外的障碍。于是又仔细地看了看ASP.NET和ASP.NET MVC的源代码，又发现了以前不曾知道的一些细节。其实ASP.NET为我们留下了不少切入点，但几乎没什么书会提到这些切入点，我们只能从微软自己的框架中一探究竟。不过这次我想谈的是ASP.NET MVC框架中的一个Bug，这个Bug在一般情况下不会出现问题，但是这的确违反了ASP.NET MVC自身的设计。这个问题就出在WebFormView对象的实现上。"
    },
    {
        "Title": "MIT 6.00 Introduction to Computer Science and Programming, Fall 2008",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/14/mit-open-course-sicp-replacement.html",
        "BriefIntro": "摘要: SICP的替代品，终于有了进一步完整的消息。看着教授用苹果在明亮的教室里讲课的感觉，的确比看之前的视频要舒畅很多。很憧憬MIT的这类顶级学府的学术氛围，虽然这个梦想似乎越来越遥远了。"
    },
    {
        "Title": "检查几个程序集中的internal成员",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/13/detect-internal-members-in-libraries.html",
        "BriefIntro": "摘要: 两个星期前我写了一篇文章谈到一个现象（或是感觉）：我发现“类中的internal成员可能是一种坏味道”，原因在于违反了“单一职责”原则。然后谈了一般情况下遇到这种情况时一种可用的重构方式之一。结果自然是有人同意有人反对。不过刚才我忽然想到，不如检查一下微软的框架中internal成员的情况吧。微软最近几个框架都公开的源代码，社区反响不错，应该较为值得参考。"
    },
    {
        "Title": "基于DelegateEvent创建第一个IEvent对象",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/11/build-the-first-IEvent-by-DelegateEvent.html",
        "BriefIntro": "摘要: 继续和“事件即对象”打交道。我们之前提到过两个“趣味编程”：DelegateEvent与Functional Reactive Programming，现在我们在它们两者之间架起一座桥梁。也就是说，我们要从一个DelegateEvent"
    },
    {
        "Title": "如何创建TextWriter的子类",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/11/how-to-create-your-own-text-writer.html",
        "BriefIntro": "摘要: 如果您需要继承TextWriter实现自己的类型，您会怎么做？继承TextWriter不难，不过接下来，您打算覆盖（override）掉哪些方法？从Reflector的观察结果发现，其中所有的方法最终都会委托给Write(char)方法。但是只覆盖Write(char)方法只能保证最终成果“可以运行”，却无法保证是最优秀的结果。但是又有谁可以告诉我，究竟该怎么做呢？"
    },
    {
        "Title": "趣味编程：Functional Reactive Programming",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/10/functional-reactive-programming-for-csharp.html",
        "BriefIntro": "摘要: 基于事件的编程再常见不过了，尤其是在和UI相关的WinForm，WPF，Silverlight开发方面。把事件作为一等公民看待之后，我们可以实现一些较为“特别”的编程模型，例如Functional Reactive Programming。这是一种较为优雅的基于事件的处理方式，适合一些如交互式动画，自动控制方面的工作。即使平时不太常见，我想作为一个“尝试”或“练习”也是非常合适的。那么我们就学习F#的类库，为C#也设计一套这样的功能吧。"
    },
    {
        "Title": "监视程序中的死锁及其他",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/10/dotnet-deadlock-detect.html",
        "BriefIntro": "摘要: 每天回家路上总有一段比较长的路一片漆黑无法看书。这种时候，如果我有兴致则会用手机上上网，但是大部分情况下还是用来想问题的。今天我回忆起今天园子首页的一篇文章谈到死锁，想到了一种可行的解决方案，只可惜到家一搜索……别人已经实现过了。于是，又没我什么事情了……"
    },
    {
        "Title": "趣味编程：将事件视为对象",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/09/more-on-event-as-object.html",
        "BriefIntro": "摘要: 如果一个语言（平台）把事件视为对象，则表明它把“事件”作为了语言的一等公民来对待。这可以有效地提高语言的抽象能力，由于.NET本身无法将事件作为单个对象处理，因此在某些时候就会束手束脚，也难以引入一些特别的编程模型。前一篇文章中我们提出了一个糊弄人的解决方案。而这次，不妨由您来试试看如何给出一个更好的实现。"
    },
    {
        "Title": "我犯了一个错误，您能指出吗？（结论）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/08/i-made-a-mistake-can-you-figure-it-out-answer.html",
        "BriefIntro": "摘要: 其实许多朋友已经在回复中发现问题所在了。泛型类中的静态变量会因为T的不同而产生不同的值，也就是说每个T所访问的静态变量都是独立的。因此，看似共享的静态ConnectionKey实际上是两个不同的Guid。"
    },
    {
        "Title": "我犯了一个错误，您能指出吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/08/i-made-a-mistake-can-you-figure-it-out.html",
        "BriefIntro": "摘要: 这是我最近在项目中犯的一个错误，您能指出吗？"
    },
    {
        "Title": "把事件当作对象进行传递",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/07/treat-event-as-an-object.html",
        "BriefIntro": "摘要: 最近在琢磨一些事情，和API设计有关。API设计在很多时候是和语言特性有关的，因此如Java这样的语言，在API设计时会处处受到压抑。而C#就能够出现如Moq或Fluent NHIbernate这样的项目。同样，F#能够开发出FsTest，Scala号称Scalable Language，都是依靠着丰富的语言特性。不过，最近在使用C#的时候鼻子上也碰了一点灰，这是因为我发现“事件”这个东西没法作为对象进行传递。"
    },
    {
        "Title": "较为理想的延迟代理的编写方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/07/standard-lazy-proxy.html",
        "BriefIntro": "摘要: 之前我谈到，在普通情况下我们可以很轻松地写出过一个代理类，用来处理延迟加载的情况。当时给出了一个很简单的做法，也就是指创建基类，覆盖它的一些属性实现。不过我当时也提到，这么做可能够用，但是也有一些缺点。例如，它破坏了SomeID属性中包含的业务逻辑。"
    },
    {
        "Title": "如果是能简单解决的问题，就不用想得太复杂了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/05/simple-over-complex.html",
        "BriefIntro": "摘要: 有个朋友在MSN问我说，有没有关于Emit的资料，它想生成一个类的动态代理。他抱怨Emit还是很麻烦，不过交谈过后知道他是想要做什么。他希望为一个对象的某个属性作延迟加载，这样可以避免一些无谓的消耗。不过我提出，这个方法是不是太重了，因为动态代理不是那么孤立存在的，它往往需要考虑很多其他东西。有时候我们可以使用最简单的代码，在一定程度上也可以达到目的。"
    },
    {
        "Title": "一份值得阅读的幻灯片：微软对PHP支持的改进，及其它一些胡言乱语",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/04/php-on-windows-and-more.html",
        "BriefIntro": "摘要: 这里有一份我觉得值得推荐给大家的幻灯片。这个幻灯片是不久前举办的WordCamp China 2009上微软王超群的演讲，演讲主题是《熟悉的陌生人：微软对PHP的新支持使WordPress在IIS7上雄起》。WordCamp是业界著名的PHP大会，不过我这里推荐这个幻灯片不是为了为了推广PHP，而是为了说明一些其他问题――当然也有关于技术的有价值的内容，这些您看了幻灯片和我的文章之后就会明白了。"
    },
    {
        "Title": "通过表达式树构造URL时忽略部分参数",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/03/ignore-some-arguments-when-constructing-url-via-expression-tree.html",
        "BriefIntro": "摘要: 您的使用ASP.NET MVC的时候，一定遇到过使用Post接受数据的Action方法。为了实现这个功能，我们必须在客户端准备一个form，并填写它的Action――也就是Post的目标URL。按照传统的做法，我们会使用表达式树来构造这个URL，但因为ASP.NET Routing在处理配置规则中没有标明的Route Values时，会将它们作为Query String拼接在URL后面。因此，我们需要得到一种“忽略”某个参数的方式。"
    },
    {
        "Title": "您能看出这个Double Check里的问题吗？（解答）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/02/double-check-failure-answer.html",
        "BriefIntro": "摘要: 已经很有很多朋友得到了结果，是由于m_categories过早初始化，而导致double check的验证条件被破坏（或者说，满足）。不过，这里我们可以再谈一些更深入地内容，例如Memory Consistency Model。"
    },
    {
        "Title": "您能看出这个Double Check里的问题吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/02/double-check-failure.html",
        "BriefIntro": "摘要: 昨天在做code review时看到一位同事写了这样的代码。这段代码的目的使用Double Check的做法来保证线程安全的延迟加载。但是我看到这代码之后发现了一个问题，这个问题不是第一次出现。因此，我打算在博客上记录一笔，希望可以给更多人提个醒吧。"
    },
    {
        "Title": "趣味编程：函数式链表的快速排序（参考答案）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/02/functinal-list-quick-sort-answer.html",
        "BriefIntro": "摘要: 之前我提出了一个“趣味编程”，模仿Haskell的方式对一个链表进行快速排序。在那篇文章中我解释了Haskell列表的结构，并给出了ImmutableList的基础实现。快速排序的例子很多，多做也没有意思。这题虽然打着“快速排序”的旗帜，但事实上这里的关键在于实现ImmutableList数据结构的相关操作――否则为什么叫“函数式链表”的快速排序呢？。"
    },
    {
        "Title": "优化通过表达式树构造URL的性能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/01/make-expression-tree-based-url-construction-faster.html",
        "BriefIntro": "摘要: 我们继续改进通过表达式树构造URL的方式。在上一篇文章中，辅助方法可以正确地识别了ActionNameAttribute，而这次改进的则是性能方面的问题。原先的代码使用了传统计算一个表达式树的方式：“使用LambdaExpression对象封装，再编译，最后执行”来获得一个Expression对象的值。但是，Compile方法的性能是比较低下的，如果密集地执行会对性能产生一定影响。我们可以使用FastLambda中的组件来优化这部分操作的性能。"
    },
    {
        "Title": "通过表达式树构建URL时正确识别ActionNameAttribute",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/09/01/get-action-name-from-expression-tree-by-ActionNameAttribute.html",
        "BriefIntro": "摘要: 在MvcFutures项目中提供了一个辅助方法，可以将一个表达式树对象转化成一个RouteValueDictionary集合。只可惜，这个辅助方法的毛病比较多。例如，它直接把方法名作为action的值，而忽略了其上标记的ActionNameAttribute。这导致了某个被“改名”的Action方法一旦用在了表达式树中，最终得到的URL便是错误的。不过只需寥寥数行代码便可改变这个情况。"
    },
    {
        "Title": "使用表达式树构建DomainRoute的URL",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/31/build-url-from-expression-tree-for-DomainRoute.html",
        "BriefIntro": "摘要: 由于DomainRoute支持针对URL域名的捕获和构造，这有些破坏了ASP.NET Routing所制定的“协议”（ASP.NET Routing只支持Path），因此在上一篇文章中，我们需要自己构造一个辅助方法来获得一个“包含域名”的URL。不过根据尽可能强类型的原则，我们应该使用的是类似于MvcFutures中定义的基于表达式树的辅助方法。由于MvcFutures已经提供了非常充足的辅助功能，因此这其实并不需要耗费我们多少代价。"
    },
    {
        "Title": "使用Lambda表达式编写递归函数",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/31/recursive-lambda-expressions.html",
        "BriefIntro": "摘要: 其实这从来不是一个很简单的事情，虽然有些朋友认为这很简单。如果您把委托变量的声明和Lambda表达式分开写为两行，那么其实这已经是一中“伪”递归了。可能已经有朋友知道“标准”的做法是什么样的，不过我这里还想谈一下我当时遇到这个问题时想到的一个做法。比较笨（非常符合我的特点），但是可以解决问题。但是装配脑袋很早给了我们更好的解决方法，希望在以后的某一天，我可以把这部分内容融会贯通地理解下来，并且可以详细地解释给大家听。在这之前，我还是听脑袋的话，把Fix强行记在脑袋里吧。"
    },
    {
        "Title": "与protected成员有关的单元测试方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/28/unit-test-protected-method.html",
        "BriefIntro": "摘要: protected是一个有趣而有用的修饰符，它把方法的访问成员严格限制在自身或自己的子类身上。换句话说，在使用过程中，protected成员对外部是开放的（因为其他类可以通过继承来使用该成员），又是封闭的（不是自身或子类的一切成员都无法访问）。而对于单元测试来说，protected成员又是尴尬的，因为它的“开放”意味着我们必须对它进行单元测试，而“封闭”又阻碍了我们在单元测试中涉及protected成员。"
    },
    {
        "Title": "所有的成员都应该是virtual的吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/28/virtually-necessary-members.html",
        "BriefIntro": "摘要: 这是一个由来已久的讨论，由于Java默认所有的方法都是可以被override的（除非手动写成final），因此从C#语言设计起初就有此番争论，甚至让Anders都出来解释了一下。最近又有人在讨论这方面话题了，虽然我的看法并没有超出这些人所涉及的范畴，但是我还是打算谈一下我的理解。退几步说，就当补充一些“实例”吧。"
    },
    {
        "Title": "趣味编程：函数式链表的快速排序",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/27/functinal-list-quick-sort.html",
        "BriefIntro": "摘要: 前一段时间有朋友问我，Haskell快速排序的代码，是否可以转化成C#中等价的Lambda表达式实现。我当时回答，C#中缺少一些基础的数据结构，因此不行。经过补充之后，就没有任何问题了。后来，我觉得这个问题挺有意思，难度适中，也挺考察“基础编程”能力的，于是就自己写了一个。如果您感兴趣的话，也不妨一试。"
    },
    {
        "Title": "再谈public类型中internal成员的坏味道",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/27/more-on-bad-smell-of-internal-members-in-public-classes.html",
        "BriefIntro": "摘要: 上一篇文章里我讨论了一个类中internal成员可能会造成的坏味道，并且认为如果您的类型中出现了这个情况，可能就值得检查一下设计上是不是有问题了。文章中我提出了三种可能出现internal的情况，其中两种争议不大，不过对于“public类中是否应该出现internal成员”这一点似乎引起了一些争议。从评论中发现，讨论的一部分焦点并不是我的本意，这可能是我前文描述地较为简单而造成的，因此我现在对于这个方面再进行略为详细的探讨。"
    },
    {
        "Title": "类中的internal成员可能是一种坏味道",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/26/internal-member-is-bad-smell.html",
        "BriefIntro": "摘要: 最近除了搞ASP.NET MVC之外，也在思考一些编程实践方面的问题。昨天在回家路上，忽然对一个问题产生了较为清晰的认识。或者说，原先只是有一丝细微的感觉，而现在将它和一些其他的方面进行了联系，也显得颇为“完备”。这就是问题便是：如何对待类中internal成员。我现在认为“类中的internal成员可能是一个坏味道”，换句话说，如果您的类中出现了internal的成员，就可能是设计上的问题了。"
    },
    {
        "Title": "支持DomainRoute的URL构造辅助方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/26/url-building-method-for-DomainRoute.html",
        "BriefIntro": "摘要: 上一篇文章中我们构造了DomainRoute类，这是一个将URL Routing扩展至域名的Route组件，于是现在我们便可以轻易地从一个URL的Domain部分中捕获数据并在程序中使用。不过作为URL Routing的另一个重要部分，在URL构建方面，我们还需给DomainRoute补充额外的支持。"
    },
    {
        "Title": "配合域名作URL Routing",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/25/url-routing-with-domain.html",
        "BriefIntro": "摘要: 经常有朋友问我，如何对域名作URL Routing，他们可能希望根据域名（或自域名）来获得一些值，最终影响Controller，Action或某些参数的选择。之前我只是简单地说“扩展一下ASP.NET Routing吧”，而现在由于自己也正好需要使用这个功能，便实现了一个扩展。使用下来，效果不错。"
    },
    {
        "Title": "常用辅助方法收集",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/25/common-extensions.html",
        "BriefIntro": "摘要: 在项目里经常会出现一些常用的，好用的扩展方法，因此也想到把它收集起来。如果您有什么好的辅助方法，也可以告诉我，希望可以成为一套丰富的辅助方法，简化我们的开发生活。"
    },
    {
        "Title": "基于ParsedRoute的Domain Parser",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/24/domain-parser-based-on-parsedroute.html",
        "BriefIntro": "摘要: 之前谈了不少关于ASP.NET Routing中ParsedRoute的内容，例如它的设计以及如何调用它的功能，其目的便是为了如今的使用作准备。现在我们就基于它构建一个Domain Parser，而这个Parser也是为今后的功能打基础的。"
    },
    {
        "Title": "再谈ASP.NET Routing中的ParsedRoute",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/24/more-on-ParsedRoute.html",
        "BriefIntro": "摘要: ParsedRoute是ASP.NET Routing中的内部类，作用是根据既定模式将一段URL解析为一个RouteValueDictionary。上次的文章中我主要谈了如何利用反射使用类库的内部成员，而这次则想分享一些使用ParsedRoute时产生的一些想法。"
    },
    {
        "Title": "Kent Beck确认参加敏捷中国大会2009，讲述其35年架构设计心得",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/23/kent-beck-is-coming-agile-china-2009.html",
        "BriefIntro": "摘要: 尘埃落定，Kent Beck终于确定他的行程，将于敏捷中国大会（9月11日~12日）前两天来京参会，并以大讲堂的形式分享其在架构设计方面的心得，在大会当天会做\"实效的理想主义\"的演讲，和另一位敏捷宣传创始人Dave Thomas一同为大会开幕。另外，这也是KB首次来中国，欢迎一起观瞻这个有点传奇色彩的极限编程创始人、敏捷宣言创始人。"
    },
    {
        "Title": "书籍推荐：国内第一本ASP.NET 3.5 MVC技术专著",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/23/1552389.html",
        "BriefIntro": "摘要: 周五的时候我知道了国内第一本ASP.NET 3.5 MVC技术专著问世了。当时忙着搬家理东西，写代码，写博客，就没有仔细搭理。现在瞅瞅，不得了，了不得，至少有四大亮点值得推荐。"
    },
    {
        "Title": "为什么是HttpContextBase而不是IHttpContext",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/21/why-httpcontextbase-instead-of-ihttpcontext.html",
        "BriefIntro": "摘要: 由于HttpContext很难进行Mock，因此为了提高可测试性，微软随ASP.NET MVC发布了一个“抽象包”，专门用于对HttpContext及其相关组件进行抽象。不过在Preview 1版本中，这些抽象都是一个个接口，如IHttpContext，IHttpRequest等等。而在下一个版本中，立即就成为了一个个抽象类，如HttpContextBase，HttpRequestBase。现在我打算从“使用”角度来谈一下，为什么这里的确应该用抽象类而不是接口。"
    },
    {
        "Title": "在单元测试时指定HttpContext的各种Path",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/21/set-the-path-in-http-context.html",
        "BriefIntro": "摘要: 设置HttpContext中各种Path一直是个问题，因为被测试的方法可能用到各种Path中的任何一个，而各种Path之间有一定关联，如果我们完全手动设置Mock对象的话会是一个浩大的工程。还好，这个问题还算容易解决。"
    },
    {
        "Title": "C#编译器对泛型方法调用作类型推断的奇怪问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/20/type-inference-bug-in-csharp.html",
        "BriefIntro": "摘要: 范型是.NET平台上重要的功能，范型即为一个“不确定”的类型。C# 3.0中加强了对于类型推断的力度。但是C#的代码推断作的相当不完整，刚才我又遇上了一个奇怪的问题。"
    },
    {
        "Title": "支持Area的ControllerFactory",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/20/controller-factory-with-area-supporting.html",
        "BriefIntro": "摘要: 由于项目需要，把ASP.NET MVC 2中的Area功能搬到1.0上来吧……其实只是借用个Area名头而已，根本不是那么一回事。有时候，我们就为自己的项目做一点简单的扩展，不是很合适吗？"
    },
    {
        "Title": "复用类库内部已有功能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/19/use-the-internal-feature.html",
        "BriefIntro": "摘要: 经常看我博客的人可能会知道，我是一个喜欢搞点小技巧来实现某个功能的人。例如博客的皮肤，自己花了不少时间定义，也是为了效果丰富一些。当然，搞得最多的是从框架或类库内部取出一点小功能来用用，节省自己开发的时间。"
    },
    {
        "Title": "再谈抽象类和接口",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/19/more-on-class-and-interface.html",
        "BriefIntro": "摘要: 昨天我质疑了为什么定义RouteBase抽象类，而不是IRoute接口，我谈到对于一个“没有任何实现”的抽象类来说，开发人员应该使用接口。不过在后面的评论中，有朋友给了我启发，让我忽然想到更多的事情。晚上又再次翻了翻《Framework Design Guidelines》之后，打算再谈一些东西，把这个问题讨论地更加清楚一些。"
    },
    {
        "Title": "ASP.NET Routing中最令人摸不着头脑的设计",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/18/awful-design-in-asp-net-routing.html",
        "BriefIntro": "摘要: 您觉得ASP.NET Routing中最令人摸不着头脑的设计是什么？"
    },
    {
        "Title": "DefaultControllerFactory不是线程安全的",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/18/asp-net-mvc-defaultcontrollerfactory-thread-unsafe.html",
        "BriefIntro": "摘要: 由于项目需要，刚才打算为ASP.NET MVC应用程序增强ControllerFactory的功能，因此翻出了ASP.NET MVC的源代码开始阅读其DefaultControllerFactory。代码不多，很容易理解，不过读着读着便发现了问题，因为我发现DefaultControllerFactory不是线程安全的。"
    },
    {
        "Title": "将Windows Live Writer打造为“所见即所得”编辑器",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/18/windows-live-writer-wysiwyg.html",
        "BriefIntro": "摘要: Windows Live Writer的最大优势之一，便是可以自动获取目标博客的样式，然后让用户在特定的样式环境下编写文章。我们可以利用它在特定样式环境下编写HTML内容，这篇文章将会提供一个指南，希望可以帮助您打造一个合适的编辑环境。"
    },
    {
        "Title": "NHibernate中一对一关联的延迟加载",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/17/lazy-load-of-one-to-one-association-in-nhibernate.html",
        "BriefIntro": "摘要: 这篇文章谈论的其实只是一个小技巧，而且甚至于这个是由于我对NHibernate不够了解而造成的。因此，如果您有更好的做法也请不吝指出。这个问题也就是“如何实现NHibernate中一对一映射的延迟加载”。"
    },
    {
        "Title": "从.NET中委托写法的演变谈开去（下）：性能相关",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/10/from-delegate-to-others-3.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们详细讲述了C# 3.0中Lambda表达式（构造委托）的使用方式，它在语义上的优势及对编程的简化――这些内容已经属于委托的“扩展内容”。不如这次谈得更远一些，就来讨论一下上文中“编程方式”的性能相关话题。"
    },
    {
        "Title": "从.NET中委托写法的演变谈开去（中）：Lambda表达式及其优势",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/07/from-delegate-to-others-2.html",
        "BriefIntro": "摘要: 在上一篇文章中我们简单探讨了.NET 1.x和.NET 2.0中委托表现形式的变化，以及.NET 2.0中匿名方法的优势、目的及注意事项。那么现在我们来谈一下.NET 3.5（C# 3.0）中，委托的表现形式又演变成了什么样子，还有什么特点和作用。"
    },
    {
        "Title": "从.NET中委托写法的演变谈开去（上）：委托与匿名方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/05/from-delegate-to-others.html",
        "BriefIntro": "摘要: 在《关于最近面试的一点感想》一文中，Michael同学谈到他在面试时询问对方“delegate在.net framework1.1,2.0,3.5各可以怎么写”这个问题。我也问过，那么我就先单独针对这个问题进行解释，然后谈谈自己为什么会提出这个问题吧。"
    },
    {
        "Title": "适合C# Actor的消息执行方式（6）：协变与逆变",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/03/message-execution-model-for-c-sharp-actor-6-covariance-and-contravariance.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们实现了一个简单的爬虫，并指出了这种方式的缺陷。现在，我们就来看一下，如何使用C# 4.0中所引入的“协变和逆变”特性来改进这种消息执行方式，这也是我认为在“普适Actor模型”中最合适的做法。这次，我们动真格的了，我们会一条一条地改进前文提出的缺陷。"
    },
    {
        "Title": "Agile China 2009大会报名信息",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/01/agile-china-2009.html",
        "BriefIntro": "摘要: 在敏捷领域最具有影响力的技术社区InfoQ中文站、敏捷方法论的领导厂商ThoughtWorks共同主办的敏捷中国技术大会（Agile China 2009），将于9月11日~12日（周五、周六）在北京举行。届时将有超过400位来自电信、金融、互联网、教育等行业在内的高级软件开发人员、项目管理人员等参加。"
    },
    {
        "Title": "ASP.NET MVC 2 Preview 1 发布",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/08/01/asp-net-mvc-2-preview-1-released.html",
        "BriefIntro": "摘要: 微软发布了ASP.NET MVC 2的Preview 1版本，并在论坛中向社区征求反馈意见和建议。ASP.NET MVC 2的“主题”是“提高生产力”，提供多个有用的功能。令人放心的是，ASP.NET MVC 2 Preview 1能够与ASP.NET MVC 1.0 RTM共存，不会影响后者的正常使用。"
    },
    {
        "Title": "收到了《博客园精华集Web分册》",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/31/1535646.html",
        "BriefIntro": "摘要: 我对《精华集》这种形式的书籍也没什么好感（这是实话），认为这代表不了博客园的水平，里面选择的文章也难有太高价值――最多也就值的放在互联网上作为资源“库”的填充吧。不过翻看过后，不觉对我的想法感到羞耻。我太小看这些文章了，这些文章的确是精华――不论其他分册，目前我单指《Web分册》，甚至单指第一第二部分：HTML、CSS与标准。"
    },
    {
        "Title": "快速计算表达式树",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/29/expression-tree-fast-evaluation.html",
        "BriefIntro": "摘要: .NET 3.5中新增的表达式树（Expression Tree）特性，第一次在.NET平台中引入了“逻辑即数据”的概念，它是LINQ to Everything在技术实现上的重要基石之一。对表达式树进行计算，是处理表达式树时中最常见的工作了。根据我的本地测试结果，在一台P4 2.0 GHz的服务器上，单线程连续计算一万个简单的四则运算表达式便要花费超过1秒钟时间。这并非是一个可以忽略的性能开销，引入一种性能更好的表达式树计算方法势在必行。"
    },
    {
        "Title": "适合C# Actor的消息执行方式（5）：一个简单的网络爬虫",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/27/message-execution-model-for-c-sharp-actor-5-a-simple-web-crawler.html",
        "BriefIntro": "摘要: 之前的几篇文章大都在摆一些“小道理”，有经验的朋友容易想象出来其中的含义，不过对于那些还不了解Actor模型的朋友来说，这些内容似乎有些太过了。此外，乒乓测试虽然经典，但是不太容易说明问题。因此，今天我们就来看一个简单的有些简陋的网络爬虫，对于Actor模型的使用来说，它至少比乒乓测试能够说明问题。对了，我们先来使用那“中看不中用”的消息执行方式。"
    },
    {
        "Title": "IT168转载问题解决情况，以及本人博客转载方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/25/it168-thief.html",
        "BriefIntro": "摘要: 与IT168编辑联系之后，他们已经在文章最后添加原文链接，并且答应以后的各类转载都会符合协议。这个结局比较令人满意。此外，我在这里详细谈一下这方面的一些做法。"
    },
    {
        "Title": "浅谈线程池（中）：独立线程池的作用及IO线程池",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/24/thread-pool-2-dedicate-pool-and-io-pool.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们简单讨论了线程池的作用，以及CLR线程池的一些特性。不过关于线程池的基本概念还没有结束，这次我们再来补充一些必要的信息，这样有助于我们在程序中选择合适的使用方式。例如，为什么要有独立的线程池，CLR线程池到底有什么不足，IO线程池又是什么呢？有了这些准备之后，最后的试验也就非常自然了。"
    },
    {
        "Title": "浅谈线程池（上）：线程池的作用及CLR线程池",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/22/thread-pool-1-the-goal-and-the-clr-thread-pool.html",
        "BriefIntro": "摘要: 线程池是一个重要的概念。不过我发现，关于这个话题的讨论似乎还缺少了点什么。作为资料的补充，以及今后文章所需要的引用，我在这里再完整而又简单地谈一下有关线程池，还有.NET中各种线程池的基础。更详细的内容就不多作展开了，有机会我们再详细讨论这方面的细节。这次，还是一个“概述”性质的，希望可以说明白这方面问题的一些概念。文章分两段，我们先来谈谈线程池的作用，及CLR自带的线程池。"
    },
    {
        "Title": "适合C# Actor的消息执行方式（4）：阶段性总结",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/20/message-execution-model-for-c-sharp-actor-4-mid-stage-conclusion.html",
        "BriefIntro": "摘要: 阶段性总结本不在计划之内，不过似乎Actor模型这方面内容还不太受人关注，因此有的朋友也误解这系列文章想要解决的问题是什么。除了这方面的解释之外，我还会对之前提出的几种做法进行综合的对比，可以进一步了解整个演变过程的思路，为接下去的改变做铺垫――因为下次改变就涉及到多个方向，每个方向都是在一定程度上真正可用的方式。"
    },
    {
        "Title": "适合C# Actor的消息执行方式（3）：中看不中用的解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/17/message-execution-model-for-c-sharp-actor-3-nice-solution-with-little-use.html",
        "BriefIntro": "摘要: 在前两篇文章中，我们了解到Erlang中灵活的模式匹配，以及在C#甚至F#中会都遭遇的尴尬局面。那么现在就应该来设计一个解决方案了，我们如何才能在C#这样的语言里顺畅地使用Actor模型呢？不仅如此，最好我们还能获得其它一些优势。但事情总是很难一帆风顺的，最终我们这篇文章只得出一个中看不中用的解决方案。不过……至少方向是正确的吧。"
    },
    {
        "Title": "老赵书托（2）：计算机程序的构造与解释",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/15/recommended-reading-2-sicp.html",
        "BriefIntro": "摘要: 老赵要推荐的第一本书便是大名鼎鼎的《Structure and Interpretation of Computer Programs》，在国内可以买到中译版，即机械工业出版社的《计算机程序的构造与解释》。豪不夸张地说，这是一本影响了好几代程序员的书。自从上世纪80年代MIT开始使用这本书作为教材开始，它使用Lisp语言――直到前两年才被Python取代，但是使用哪本教材不得而知，由这个侧面也可见SICP这本书的影响力有多么深远。在技术日新月异的计算机行业，有多少教材可以经得起20年的考验？"
    },
    {
        "Title": "适合C# Actor的消息执行方式（2）：C# Actor的尴尬",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/13/message-execution-model-for-c-sharp-actor-2-embarrassing-c-sharp-actor.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们简单解读了Erlang在执行消息时候的方式。而现在，我们就一起来看看，C# Actor究竟出现了什么样的尴尬。此外，我还打算用F#进行补充说明，最终我们会发现，虽然F#看上去很美，但是在实际使用过程中依旧有些遗憾。"
    },
    {
        "Title": "适合C# Actor的消息执行方式（1）：Erlang中的模式匹配",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/09/message-execution-model-for-c-sharp-actor-1-pattern-matching-in-erlang.html",
        "BriefIntro": "摘要: Actor模型为并行而生。由于现在单台机器中独立的计算单元也越来越多，Actor模型的重要性也越来越大。Actor模型的理念是：天下万物皆为Actor，Actor之间通过发送消息进行通信。不同的Actor可以同时处理各自的消息，从而获得了大规模的并发能力。对于.NET平台下的开发人员来说，最常用的语言是C#。不过，无论您使用哪个Actor框架，在消息的执行阶段总是略显尴尬。本文的目的便是提出一种适合C# Actor的消息执行方式，而这种执行方式还会成为我以后公开的C#中“模式匹配”的基础。本文将分为三个部分，您目前正在阅读的第一部分，将会观察Erlang是如何执行消息的。有对比才会有差距，也正是由于Erlang在Actor模型上的示范作用，我们才会意识到C# Actor在使用上有多么的不方便。"
    },
    {
        "Title": "关于网页*静态化*及SEO问题的一些补充",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/06/more-on-page-statilization-and-seo.html",
        "BriefIntro": "摘要: 前一篇讨论“静态页”的文章反响不错，不少朋友发表了自己的看法，也给老赵更多的想法。虽然也在前一篇文章后面回复了不少内容，但是就以往经验来看，总结为一篇新的文章会让我想表达的内容更为明确。对于“静态化”这一原本就非常容易让人混淆的概念来说更是如此。在这篇文章里，老赵也会谈谈自己对于SEO这个工作的看法――以及以前遇到过的一个SEO“专家”。欢迎围观。"
    },
    {
        "Title": "谈*静态页*（或网页*静态化*）的时候，请区分一些概念",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/05/talk-about-page-statilization.html",
        "BriefIntro": "摘要: “静态页”，在Web应用程序开发中是很常见的概念。只是我发现目前还是有相当部分的朋友，在这方面的存在一定的误区。不久前有朋友写了一篇题为《提供生成静态页核心代码》的文章，介绍了一种“向硬盘写入页面文件”的方式。这篇文章的内容在此并不多作讨论，只是它的摘要存在一个严重的问题，因为它混淆了两个概念。现在独立写一篇文章，也想把一些问题讲讲清楚，以后在讨论的时候也好有个准。"
    },
    {
        "Title": "是什么造成了MVP的尴尬现状？我们该怎么办？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/07/02/embarrassed-mvp.html",
        "BriefIntro": "摘要: MVP项目其实微软的“专家认证”活动之一，不过它并非根据培训或考试而来，而是根据个人在社区表现评选出来的内容。从这一方面来说，MVP应该是广受社区群众爱戴的群体。但是后来等我也评上MVP的时候，发现事实似乎并非如此。微软眼中的“社区英雄”，反而在社区中的评价越来越差。就2009年7月新当选的MVP来看，似乎绝大部分的声音都是“质疑”。我也在想，是什么造成了MVP的尴尬现状？我们又该怎么办？如果您有什么建议，能否说出来一起讨论一下？"
    },
    {
        "Title": "龙芯一二事（转载）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/29/1513077.html",
        "BriefIntro": "摘要: 我不知道龙芯是否真是一个笑话。不过我也从一些在中科院计算所搞龙芯相关的朋友那里获得了一些信息（不是耳闻，而是一手信息）。这年头真假太难辨别，由于大伙儿对于例如gov或某些机构的某些做法的不满，导致即使是真的事情也变假了。龙芯从一开始其实就伴随着负面评价，从一开始的技术上的质疑，在技术上不知如何下手后，到政治方向上的反对等等。有时候我也不明白，对于一个错误的东西，使用错误的方式去反对它，这种做法是否正确。还是回到龙芯上吧，这次我转载的一些东西很显然是在做“解释”。可能某些朋友会说我五毛，但五毛就五毛吧。就当我只是把东西列举出来，大家一起判断。说实话，我也不知道究竟是正确不正确。在一个信息不对称的环境中，作为一个旁观者，我们究竟可以做出什么样的评价？说它好，理由何在？说它坏，难道也只是随口说说就可以了吗？"
    },
    {
        "Title": "拯救C# 2.0，但是我们真做的到吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/27/try-to-make-a-better-csharp-2.html",
        "BriefIntro": "摘要: 似乎还有不少项目在用C# 2.0（本文最后我们来做一个调查），但是C# 2.0的生产力实在不如C# 3.0――如果您不信，那么一会儿就会意识到这一点。有朋友认为语言能力不重要，有了好用的框架/类库也可以有很高的生产力。所以这篇文章，我们就设法使用“类库”来弥补C# 2.0的缺陷。但是，我们真做的到吗？"
    },
    {
        "Title": "天下无处不乒乓",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/24/everything-ping-pong.html",
        "BriefIntro": "摘要: 在消息传递（Message Passing）领域，PingPong是最常见的测试之一。它的功能简单的有些无聊，一个Ping Actor和一个Pong Actor之间互相传递消息，你Ping过来我Pong过去。也正因为如此简单，PingPong的目标仅仅是测试纯粹的消息传递机制的效率。也正因为如此，各Actor模型往往都将其作为展示自己功能的第一个示例。老赵从互联网上收集了一些最为常见的，不同语言/平台下Actor模型实现PingPong的示例，可作“观赏”之用。"
    },
    {
        "Title": "编程小练习：拆分自然数",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/21/1507847.html",
        "BriefIntro": "摘要: 上次的小练习的反响很不错，于是今天我们再来做一道小题目。上次有朋友指出，“反转数组”这种题目非常无聊，“写的再好，又会比框架自带的实现好吗？”。其实做这些小题目的作用是锻炼“编程解决问题”的能力，并非是为了替换框架的实现等等。咱们小学初中高中，不都会做数学题目，几何代数的吗？目的都是为了建立基本解题能力。现在的题目也是这样，请不要误会这些习题的目的。"
    },
    {
        "Title": "贺计算机成*就业最困难专业*（转载）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/12/1501834.html",
        "BriefIntro": "摘要: 从99年开始的扩招，计算机专业是重灾区，全国各大高校，不管是工科的还是文科的，不管自身有没有足够的基础，只要买一批电脑，招几个老师就能开个计算机专业，没用几年，计算机专业成了规模最大的工科专业之一，可谓“计算机教育大跃进”，事实上，这些年来IT业在迅速扩张，对人才的需求一直是很旺盛的，在现在这个计算机无孔不入的信息时代，计算机专业本不应该成“最难就业专业”。 然而，这一现象居然在中国出现，说明了什么？ \n"
    },
    {
        "Title": ".NET中*延迟*特性的几个陷阱",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/08/laziness-traps.html",
        "BriefIntro": "摘要: .NET发展至今，其实各处都有“延迟（Lazy）”的痕迹，一个小小的“Laziness”给我们带来了不少灵活性。“延迟”的关键就在于“只在需要的时候处理数据”，老赵曾经在多篇文章中提到了类似的概念，如《高阶函数、委托与匿名方法》及《您善于使用匿名函数吗？》。不过“延迟”本身也会给您带来一些陷阱，某些陷阱您很有可能也曾经遇到过。这篇文章便是总结了延迟特性的集中常见陷阱，并给出应对方案。"
    },
    {
        "Title": "老赵谈IL（3）：IL可以看到的东西，其实大都也可以用C#来发现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/06/my-view-of-il-3-use-c-sharp-instead-of-il.html",
        "BriefIntro": "摘要: IL的确比C#等高级语言来的所谓“底层”，但是很明显，IL本身也是一种高级抽象。而即使是机器码，它也可以说是基于CPU的抽象，CPU上如流水线，并行，内存模型，Cache Lock等东西对于汇编/机器码来说也可以说是一种“封装”。从不同层次可以获得不同信息，我们追求“底层”的目的肯定也不是“底层”这两个字，而是一种收获。了解自身需要什么，然后能够选择一个合理的层次进入，并得到更好的收益，这本身也是一种能力。追求IL的做法，本身并没有错，只是追求IL一定是当前情况下的最优选择吗？这是一个值得不断讨论的问题，我的这篇文章也只是表达了我个人对某些问题的看法。"
    },
    {
        "Title": "自己动手生成评论RSS",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/04/build-your-own-comment-rss.html",
        "BriefIntro": "摘要: 最近博客园讨论气氛热烈，有价值的评论也层出不穷。有时候我们会很希望订阅某篇文章的评论RSS，只可惜博客园目前没有这个功能。对于注册用户来说，我们可以通过点击评论框下方的“订阅回复”链接，这样就会在出现新评论的时候收到邮件。可惜匿名用户，只得不断刷新才能关注最近讨论到什么地方了。不过我们是什么人？我们是程序员，这点障碍对我们来说应该是在简单不过的小事了。自己搭一个站点，获取页面数据，分析HTML，输出为RSS，就这么简单。"
    },
    {
        "Title": "老赵谈IL（2）：CLR内部有太多太多IL看不到的东西，包括您平时必须了解的那些",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/03/my-view-of-il-2-il-shows-little-about-clr.html",
        "BriefIntro": "摘要: CLR作为承载IL的平台，就像一个溺爱孩子的父母，操办了孩子生活所需要的一切。这个孩子一嚷嚷“我要吃苹果”，则父母就会拿过来一个苹果。您咋看这个孩子，都还是无法了解父母是如何获得苹果的（new一个Apple对象），怎么为孩子收拾残局的（GC）。虽然这些经常是所谓的“成年人（.NET程序员）必知必会”。而您如果盯着孩子看了半天，耐心分析他吃苹果的过程（使用IL编写的逻辑），最后终于看懂了，可惜发现――tmd老子自己也会吃苹果啊（从C#等高级语言中也能看出端倪来）！"
    },
    {
        "Title": "驳文不看文，实在可怕",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/02/1494216.html",
        "BriefIntro": "摘要: 一早看到包同学的驳文《批驳小赵之IL无用论（1）》，甚是期待，但看了第一个回复，却让我大失所望。包同学能否看清了老赵以前说过的，自己以前说过的，以及老赵昨天说的东西以后再进行反驳呢？我们很多明明是同样的观点，为什么变成相互驳斥了呢？"
    },
    {
        "Title": "老赵谈IL（1）：IL是什么，它又不是什么？那么汇编呢？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/06/01/my-view-of-il-1-il-and-asm.html",
        "BriefIntro": "摘要: 我们.NET开发人员必定离不开IL，就算您没有学习，也一定可以在各处看到它的身影。最近在博客园上活跃的IL文章译者包建强同学的一些看法让老赵大为震惊，决定独立开篇，希望可以让大家看到不同的声音。真理越辩越明，也欢迎大家来一起讨论，发表自己意见。老赵也会尽量把朋友们留在老赵博客上的看法汇总起来，并加以回应。《老赵谈IL》也是系列文章，目前的计划有4篇，您现在看到的便是本系列的第1篇：IL是什么，它又不是什么。"
    },
    {
        "Title": "谈表达式树的缓存（7）：五种缓存方式的总体分析及改进方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/31/expression-cache-7-optimization.html",
        "BriefIntro": "摘要: 终于到了这个系列的最后一篇文章了，这个系列的文章本是许多话题的基础，却拖了那么长时间还没有完结。这篇文章主要讨论五种缓存方式各自的优劣，以及他们的性能关键在什么地方，如果要进行改进又有什么可选方案。在这个问题上，老赵的思考可能会有遗漏，如果您有任何补充，也请不吝指出。"
    },
    {
        "Title": "从汇编入手，探究泛型的性能问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/30/generics-performance-via-asm.html",
        "BriefIntro": "摘要: 经过了《泛型真的会降低性能吗？》一文中的性能测试，已经从实际入手，从测试数据上证明了泛型不会降低程序效率。只是还是有几位朋友谈到，“普遍认为”泛型的代码性能会略差一些，也有朋友正在进一步寻找泛型性能略差的证据。老赵认为这种探究问题的方式非常值得提倡。不过，老赵忽然想到，如果从能从汇编入手，证明非泛型和泛型的代码之间没有性能差距――好吧，或者说，存在性能差距，那么事情不就到此为止了吗？任何理论说明，都抵不过观察计算机是如何处理这个问题来的“直接”。因此，老赵最终决定通过这种极端的方式来一探究竟，把这个问题彻底解决。"
    },
    {
        "Title": "泛型真的会降低性能吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/29/generic-performance-test.html",
        "BriefIntro": "摘要: 在《.NET,你忘记了么？（八）―― 从dynamic到特性误用》一文中，飞林沙同学提到，使用范型会略微降低程序性能，因此在程序中使用List<Ojbect>是不合理的行为，应该使用ArrayList。这一点和老赵平时的观点相悖，老赵一直提倡，在.NET 2.0之后，要尽可能使用List<T>，情愿是List<Object>也不要使用ArrayList。不过个中原因与性能无关，我们稍候再叙述。飞同学的文章让我有了将范型与非范型进行性能比较的想法。这个比较非常容易，不过也得出了一些非常有意思的结论。"
    },
    {
        "Title": "写程序时该追求什么，什么是次要的？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/29/1491692.html",
        "BriefIntro": "摘要: 就我看来，一段程序，最该关注的是“逻辑表现”，不该追求的是“性能”。当然，肯定也会有需要追求性能的场景，不过这并不是“追求”出来的，而是在大量经验累计情况下做出的正确决策。就算在那种情况下，“逻辑表现”还是非常重要的。"
    },
    {
        "Title": "一道简单的编程题，不过您做对了吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/27/1491052.html",
        "BriefIntro": "摘要: CSDN学生中心是个好地方，如果善于利用，应该能够对大众产生正面影响。老赵也去那里安了家，并给出了一个编程问题。题目如下：Reverse方法的作用是将array数组中，从begin下标到end下标之间的元素反序一下，如一个数组初始值是[1, 2, 3, 4, 5, 6]，begin为1，end为4，那么当调用了Reverse之后，array数组中的元素便依次成为[1, 5, 4, 3, 2, 6]，其中从array[1]到array[4]之前的元素被反序了。此外补充一点……其实本不用补充：这个方法需要对传入参数的正确性进行校验，如果用户调用该方法时传入了非法的参数，那么则需要抛出异常，并写清原因。简单，不是吗？只可惜截止到目前，也只有1人给出了正确答案。"
    },
    {
        "Title": "谈表达式树的缓存（6）：五种缓存方式的性能比较",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/26/expression-cache-6-perf-test.html",
        "BriefIntro": "摘要: 目前我们已经涉及了五种不同的缓存实现（SimpleKeyCache、PrefixTreeCache、SortedListCache、HashedListCache和DictionaryCache），如果要从一个已经包含n个表达式树的存储中，查找一个有m个节点的表达式树，根据几篇文章的分析，从理论上说除了HashedListCache的时间复杂度是O(m * log(n))之外，其它几种实现的时间复杂度都是O(m)。不过，理论上的结果和实际使用中的效果完全符合吗？那么我们就写一个程序，让数据说话。这是一个控制台应用程序，接受用户参数，并由此生成试验数据，或进行性能比较。"
    },
    {
        "Title": "在简单控制台程序中获取并使用参数",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/24/simple-arguments-handling-for-console-app.html",
        "BriefIntro": "摘要: 一个简单的处理控制台参数输入的代码片断，没有技术含量，只是在博客上做一个“备份”，方便以后查询。"
    },
    {
        "Title": "正在构建一个新的版式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/20/new-template-Minyx2-Lite.html",
        "BriefIntro": "摘要: 老赵对目前博客园中的模板都不太满意：样式单调，元素不够丰富，不容易Hack，不够“标准”，不够充分利用屏幕横向距离等等。因此和dudu商量后，准备为博客园新增一个模板。"
    },
    {
        "Title": "ActorLite：一个轻量级Actor模型实现（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/16/a-simple-actor-model-implementation-3.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们实现了一个简单的Actor模型。如果要构建一个Actor，便只是简单地继承Actor"
    },
    {
        "Title": "ActorLite：一个轻量级Actor模型实现（中）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/14/a-simple-actor-model-implementation-2.html",
        "BriefIntro": "摘要: 从上一篇文章的反响来看，似乎大家对于这一话题并没有太大兴趣。而这篇文章将会为大家带来一个简单但完整的Actor模型实现。此外，在下一篇文章中……可能会出现一些让您觉得有趣的东西。:)"
    },
    {
        "Title": "ActorLite：一个轻量级Actor模型实现（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/11/a-simple-actor-model-implementation.html",
        "BriefIntro": "摘要: Actor模型为并行而生，具Wikipedia中的描述，它原本是为大量独立的微型处理器所构建的高性能网络而设计的模型。而目前，单台机器也有了多个独立的计算单元，这就是为什么在并行程序愈演愈烈的今天，Actor模型又重新回到了人们的视线之中了。在这篇文章中，我们会先对Actor Model的相关知识进行简单的介绍。"
    },
    {
        "Title": "老赵书托（1）：写在前面",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/06/recommended-reading-1.html",
        "BriefIntro": "摘要: 从现在开始，老赵将推荐一些自认为非常优秀且重要的书籍，并和大家一起交流自己的读书体会。这些书都是老赵认为的“.NET开发人员必读书籍”，但是您会发现，它们不一定是和.NET有关的书籍。基于老赵一贯的风格，我会尽可能地认真对待每一本书，甚至会把它们重新浏览一番，因此无法保证“书托”行动的周期长度，请大家谅解。"
    },
    {
        "Title": "语言真是不重要的吗？谈语言的*层次*与技术的三六九等",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/03/talk-about-language-arguing.html",
        "BriefIntro": "摘要: 关注――或“专注”于多语言编程之后，老赵对于语言的关注也越来越多，对于语言在编程中所带来的“美感”也有了越来越深的体会，还在博客的标题中加上“追求编程之美”。关注语言多了，关注纯粹的编程实践多了，自会有所比较，然后写出了引人注目的《为啥老赵不喜欢Java*语言*》。这篇文章所得到的负面评论的确也和想象中差不多，大部分朋友的观点是“语言不是关键”或类似说法，似乎对语言的讨论和比较非常没有必要。有个朋友说的更是直接：“在看到这些文章之前，我还是比较敬重老赵的，不过现在发现你也就这点高度”。老赵认为，这是对这方面的误解，而有这种误解无论是对于社区还是个人的发展都是没有益处的，因此单独开篇，讨论一下这个问题。"
    },
    {
        "Title": "令人失望的智器Smart Q5",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/05/02/1447656.html",
        "BriefIntro": "摘要: 前一段时间看到有人提到了“智器Smart Q5（以下简称Q5）”这个手持上网设备，从网上的介绍来看，几乎可以用“划时代”来形容了：4.3寸屏幕，1600万色，800*480分辨率，内置MS Office兼容的编辑器、电子书阅读器（支持pdf，chm等常用格式）和媒体播放器（支持rmvb，mp3，mp4，ape，flac等各种媒体格式），并且可以使用wifi，兰牙，并可外接edge网卡――而且只要9..."
    },
    {
        "Title": "关于争论中的*专业*，老赵谈一下自己的看法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/30/be-a-professional-arguer.html",
        "BriefIntro": "摘要: 又到了一周一次的总结时间，经历了两周前的“Java语言风波”和“图书通病”，可以发现最容易引起大家关注的还是这样的讨论――嗯嗯，或者说是吵架。吵着吵着就会有各种“典型”的声音冒出来，使用各种形式从不同人口中反复出现，每次都看得老赵“心花怒放”，“欲仙欲死”。老赵觉得“争论”是有价值的，但是“我们的争论”至少有一半是没有太多营养价值的。实事求是地说，那篇Java文贴了4个地方，声音最大，但是收获最少的便是博客园（当然，如果贴去CSDN和cnbeta的话，情况自然就可能不一样了）。为什么会产生这个原因呢？老赵认为，关键还是在于“不专业”。"
    },
    {
        "Title": "为视图自定义辅助方法（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/29/custom-view-helpers-2.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们把繁冗的客户端脚本变成了可以由Visual Studio提示并轻易输出的服务器端辅助方法。但是，目前的做法还有不少可以改进的地方。我们编写辅助方法的目的便是为了简化开发，因此我们还可以在这条路上走的更远，让开发人员可以在使用我们的API时觉得更流畅，更有快感。"
    },
    {
        "Title": "为视图自定义辅助方法（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/29/custom-view-helpers-1.html",
        "BriefIntro": "摘要: 在编写ASP.NET MVC应用程序时，只依赖内置的视图辅助方法很难达到很高的生产力，即使是定义在MvcFutures中的补充类库，也很难满足项目的具体需求。此外，不同的项目有不同的特点，在很多时候也需要定义较为特殊的辅助方法，使开发人员能够更快，更方便地写出更容易维护的代码。这也是自定义视图辅助方法最主要的目的（没有之一）。而这次的文章，便是给出一个这方面的示例，可作为此类问题的一个参考。"
    },
    {
        "Title": "关于基础与能力，谈一点我的看法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/25/1443234.html",
        "BriefIntro": "摘要: 时不时会有朋友写信问老赵学习上的一些迷茫，其中都有一些共性。例如说不知道该如何学习，说不知道朝哪个方向前进。也例如大家虽然基本上都知道“算法”的重要性，但是却总觉平时用不到。说它锻炼能力，但“能力”是看不见摸不着的，学着学着就会“麻木”，感觉就“学不进去”了。当然这方面有几个原因，有主观也有客观的，有需要周围环境的改变，也有需要自己精神上“强壮度”的提高。这里呢，我们有时就不提“算法”这个太具体的..."
    },
    {
        "Title": "使用ASP.NET Abstractions增强ASP.NET应用程序的可测试性",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/23/improve-asp-net-testability-via-abstractions.html",
        "BriefIntro": "摘要: 关于可测试性的重要性，老赵觉得已经不需要再过多强调了。如果您想要获得高生产力，为代码编写单元测试似乎已经是必经之路了。不过可惜的是，ASP.NET应用程序给人的感觉，始终是对可测试性不太友好，其最重要的原因之一在于对HttpContext对象的高度依赖，而我们很难对HttpContext编写Mock或Stub。而现在，我们可以基于ASP.NET Abstraction来辅助ASP.NET开发，改进代码的可测试性。"
    },
    {
        "Title": "事理越辩越明，那么就来详细说说为什么我不喜欢Java*语言*",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/19/why-i-do-not-like-java.html",
        "BriefIntro": "摘要: 最近我对Java语言唱衰似乎凶狠了一点，让有些朋友不是很爽，认为我不负责任凭个人感觉乱说话，影响不好。这讨论事情事小，否认我做事方式就不好了。因此我这里也继续整理一下我对Java语言的观点，这样大家不必四处查看我的说辞，再者也可以控制一下讨论事情的方式，以免大家舞蹈半天尘土飞扬最后停下一看――得，双方在自说自话，这怎能辩明事理，您说呢？"
    },
    {
        "Title": "高阶函数、委托与匿名方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/18/csharp-higher-order-function.html",
        "BriefIntro": "摘要: 这是几个月前就写的文章，只是一直忙于QCon的各项事宜，最近才发表出来。这篇是对.NET中委托，匿名方法和高阶函数使用的一个介绍，非常简单，目的是强调一下C#中对于高阶函数的使用，体现一下现在C#的高度生产力。"
    },
    {
        "Title": ".NET平台下Web测试工具横向比较",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/13/1435140.html",
        "BriefIntro": "摘要: 为InfoQ写的一篇新闻。由于我有三不写原则（不翻译、不介绍、不重复），觉得有些值得介绍并推广的东西，还是放在InfoQ上吧。"
    },
    {
        "Title": "辅助方法不嫌多",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/12/cannot-have-too-many-helper-methods.html",
        "BriefIntro": "摘要: 在开发项目过程中，总是会出现大量的辅助方法，例如字符串处理，代码检验，格式输出等等。如果您发现自己在多次编写类似的代码，可能就要想着如何把这些代码进行提取，变成辅助方法（亦或是类库甚至框架，关于这方面粒度问题在此不作讨论）。辅助方法的作用除了遵循DRY原则之外，也能让代码更容易编写，更为清晰，可读性也能更好――而且只要您“去做”，就会发现要得到这些好处并不困难。"
    },
    {
        "Title": "使用WinDbg获得托管方法的汇编代码",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/01/get-asm-of-managed-method-by-windbg.html",
        "BriefIntro": "摘要: 有时候，我们需要查看一个.NET方法的汇编指令是怎么样的。记得在大学的时候，我们使用gcc -s和objdump来获得一个c程序代码的汇编指令。但是对于.NET程序来说，我们肯定无法轻松地获得这些内容。因为所有的.NET程序都是编译成IL代码的，而只有在运行时才会被JIT编译成本机代码。老赵这里演示一下如何使用WinDbg来做到这一点。"
    },
    {
        "Title": "浅谈尾递归的优化方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/04/01/tail-recursion-explanation.html",
        "BriefIntro": "摘要: 在上文《尾递归与Continuation》里，我们谈到了尾递归的概念和示例，不过有些朋友对于尾递归的功效依然有所怀疑。因此现在，老赵再简单讲解一下尾递归的优化原理，希望能给大家以一定理性认识。"
    },
    {
        "Title": "尾递归与Continuation",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/26/tail-recursion-and-continuation.html",
        "BriefIntro": "摘要: 这几天恰好和朋友谈起了递归，忽然发现不少朋友对于“尾递归”的概念比较模糊，网上搜索一番也没有发现讲解地完整详细的资料，于是写了这么一篇文章，权当一次互联网资料的补充。"
    },
    {
        "Title": "使用IronPython检测ASP.NET程序状况（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/25/IronPython-AspNet-Request-Sampling.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们在一个请求中执行了IronPython代码，通过这个方法我们可以轻松地的检查系统运行的状态，或对系统进行一些简单修改。但是这种做法只能检查系统在当前时刻的状态，在很多情况下，我们需要对系统的请求进行一段时间的采样。对于简单的数据（例如每秒执行的请求数量，请求时间），我们可以通过查看Performance Monitor中相关的计数器来获得一些概要的数据。但是，如果我们需要获取一些系统的详细状态，甚至是需要根据需要进行动态改变的自定义需求，则势必要深入到系统内部进行数据采集。那么，我们该怎么做呢？"
    },
    {
        "Title": "使用IronPython检测ASP.NET程序状况（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/23/IronPython-AspNet-Diagnostics.html",
        "BriefIntro": "摘要: 在维护一些生产环境中的ASP.NET应用程序时，老赵经常会感到“力不从心”。虽然我们可以建立丰富有效的监控或日志等维护机制，但是调试和分析一次程序经常需要耗费大量的脑细胞。因为我们可以使用的工具大都非常抽象，即使是一个非常微小的问题，也要用较多的时间才能发现“哦，原来是这个变量的值进入了一种奇怪的状态”。如果我们有一种机制，可以直观地检查生产环境中正在运行的程序的状态，那么一定可以大大方便我们的工作。"
    },
    {
        "Title": "老赵看博客园首页",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/21/1418621.html",
        "BriefIntro": "摘要: 不知道从什么时候开始，争论一篇文章是不是应该上首页成为博客园的一种流行。无论从任何角度出发，一旦谈起“文章质量”必然会有朋友会牵扯到“首页”（见《和谐社区，和谐技术》），然后动辄又抡起一句“你没有资格评论文章能不能上首页”。关于一些吵架的方式，逻辑方面的问题，有机会老赵再慢慢讨论，现在先来谈谈“首页”方面的问题，让老赵也掺和一下。"
    },
    {
        "Title": "重大利好消息：微软原版技术图书大幅降价",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/21/1418146.html",
        "BriefIntro": "摘要: 虽说放首页不太妥当，不过趁着周末“萧条期”老赵还是破例一把吧。:)"
    },
    {
        "Title": "谈表达式树的缓存（5）：引入散列值",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/20/expression-cache-5-hash-based-cache.html",
        "BriefIntro": "摘要: 到目前为止，我们已经实现了三种缓存方式：首先我们设法构建唯一字符串，但是由于它的代价较高，于是我们使用了前缀树进行存储；又由于前缀树在实际操作中所花的时间和空间都有不令人满意之处，我们又引入了二叉搜索树。那么二叉搜索树又有什么缺点呢？"
    },
    {
        "Title": "谈表达式树的缓存（4）：使用二叉搜索树（AVL树）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/19/expression-cache-4-binary-search-tree-cache.html",
        "BriefIntro": "摘要: 上一篇文章中谈到的前缀树实现方式，时间复杂度从理论上来讲已经达到了最优，而空间复杂度理论上也可以做到较优。但是理论和实际是有差别的，而对于上文前缀树的实现来说，这两方面并不是非常理想。因此，虽然事实上前缀树是老赵第一个真正实现的缓存方法，但是对此并不满意，也想着有什么办法可以进行优化。不如尝试一下使用二叉搜索树？\n"
    },
    {
        "Title": "谈表达式树的缓存（3）：使用前缀树",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/18/expression-cache-3-prefix-tree-cache.html",
        "BriefIntro": "摘要: 在上一篇文章里我们设法将前缀树构造为一个唯一的字符串，然后使用字符串作为key缓存在字典中。这个想法非常直接，做法也不困难（在遍历时记录详细信息便可）。不过事实上，老赵在思考表达式树的缓存问题时，这种字符串拼接的方式只存在于脑海当中，而上文的实现是为了这一系列文章的完整性而特地编写的。这是因为它的缺点较为明显，正如上文所述，字符串拼接操作较为耗时耗资源，且很容易生成一个长度可观的字符串（并非不能优化，不过实现就复杂了）。于是我们现在设法选择另一个解决方案来处理这个问题。"
    },
    {
        "Title": "谈表达式树的缓存（2）：由表达式树生成字符串",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/17/expression-cache-2-simple-key-cache.html",
        "BriefIntro": "摘要: 谈到使用表达式树作为key进行缓存，您脑海中最早浮现出来的解决方案是什么？老赵看来，大部分朋友的第一反应自然就是将作为key的表达式树，使用一定规则生成一个字符串。那么我们就先使用这个办法来解决问题。"
    },
    {
        "Title": "谈表达式树的缓存（1）：引言",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/16/expression-cache-1.html",
        "BriefIntro": "摘要: 表达式树（Expression Tree）是.NET 3.5中引入的一种表达方式。表达式树的运用十分广泛，可以直观地表现出各种“数据”，甚至“逻辑”和“行为”。老赵现在希望可以找到一种较为通用的，能够根据表达式树进行缓存的解决方案。在这一系列文章中，老赵希望可以重现自己在思考这个问题的时候所形成的完整思考路径。相比最终解决方案，这可能才是更有价值的东西。至少我觉得讨论一下这个问题也是非常有意思的事情。而且从一定程度上说，这些思考能够在一定程度上体现出算法设计与数据结构的美妙之处。"
    },
    {
        "Title": "大家在开发ASP.NET应用程序时感觉有哪些值得讨论的话题呢？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/13/1410845.html",
        "BriefIntro": "摘要: 不知道大家在开发ASP.NET过程中时，会产生哪些思考呢？这些思考可以是开发方式上的，可以是部署运营上的，可以是测试实践上的――只要不是某某具体问题该怎么解决，某段代码里是否有某个Bug，只要是值得议论的话题，都可以提出。最好是具体某个问题，例如XX和XX的优劣或选择，而不是简单的说“XX方面的问题” 我想调查一下，希望可以多做一些思考和总结。 谢谢大家。"
    },
    {
        "Title": "招聘中高级.NET开发人员（上海柏盛网络技术有限公司）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/13/1410836.html",
        "BriefIntro": "摘要: 工作职责  开发产品功能，包括架构、设计、开发以及单元测试；保证按时交付高质量的软件服务/组件；  在开发以及产品环境下进行调试排错，快速解决客户问题；  配合项目管理和测试团队，满足项目进度计划；  为开发团队提供技术领导与支持，对初级开发人员进行辅助和指导；  应聘要求 扎实的计算机科学基础；  超过两年的ASP.NET Web应用程序开发经验，对ASP.NET框架以及C#或VB.NET语言有..."
    },
    {
        "Title": "警惕匿名方法造成的变量共享",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/13/anonymous-method-false-sharing.html",
        "BriefIntro": "摘要: 匿名方法是强大的，但是也会造成一些令人难以察觉的陷阱。"
    },
    {
        "Title": "一个简单的性能计数器：CodeTimer",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/10/CodeTimer.html",
        "BriefIntro": "摘要: 有数据，有真相，相信大家在平时的工作或学习过程中，都需要比较几种不同方法或实现之间的性能差距。在这些时候，往往就需要我们不断地创建Stopwatch，打开，关闭，然后打印时间。这种一遍又一遍的重复终有一天会让人忍无可忍，因此如果能有一个“标准”的性能计数器，那应该可以让生活轻松许多。这个性能计数器不用复杂，够用就好；也不需要考虑扩展性，要扩展时直接修改代码就够了；同样不需要考虑输出格式，直接打印在Console就行。"
    },
    {
        "Title": "iReaper：WebCast视频下载辅助工具",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/09/1407389.html",
        "BriefIntro": "摘要: MSDN WebCast中心设计的愈发有些奇怪了，下载视频也变得越来越复杂，已经有不少朋友向老赵询问视频该如何下载。虽然我觉得……找视频嘛……仔细点，总归找得到……不过有个辅助工具帮助大家偷这么个懒还是有些好处的。最近忙着工作、学习和研究，一直没有时间去写这篇“推广”。不过一直拖下去也不是办法啊，试用一下似乎倒也不错，就让更多朋友知道一下吧。 iReaper可以帮助大家下载MSDN WebCast..."
    },
    {
        "Title": "尽可能摆脱对HttpContext的依赖",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/09/no-dependency-to-httpcontext.html",
        "BriefIntro": "摘要: 我们继续《ASP.NET MVC单元测试最佳实践》，今天主要谈论HttpContext的依赖问题。简单说来：虽然已经可以对HttpContext进行Mock（这点增强了可测试性），但是过度依赖HttpContext对于单元测试来说也是一个伤害。这是HttpContext对象的天性所致：它实在太复杂了。因此，我们的代码要尽可能减少对HttpContext的依赖。"
    },
    {
        "Title": "请别埋没了URL Routing",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/05/fully-leverage-url-routing.html",
        "BriefIntro": "摘要: 我们现在把数据转化的工作交给URL Routing，它的职责原本就是从URL中提取数据――任意类型的数据，以及把数据转化为URL，我们现在只是充分利用了URL Routing的功能而已。事实上，我建议任何使用URL表示的数据，都把转化的职责转移到URL Routing这一层，因为这是我们基本上无可避免地需要根据数据来生成URL。那么Model Binder难道就没有用了吗？当然不是。URL Routing负责从URL中提取数据，而Model Binder则用于从其他方面来获取参数。\n打开视野，发挥程序员的敏捷思路，生活就会变得更加美好。"
    },
    {
        "Title": "名家语录（持续更新）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/03/1402250.html",
        "BriefIntro": "摘要: "
    },
    {
        "Title": "老赵减肥记：减肥？跟玩儿似的。",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/03/lose-weight.html",
        "BriefIntro": "摘要: 老赵成功减肥，各中冷暖自知，与大家共勉。有志者事竟成，不是骗小孩的。"
    },
    {
        "Title": "所有程序员都应该至少读上两遍的十篇论文",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/02/1401259.html",
        "BriefIntro": "摘要: 转载自刘江老师的博文《所有程序员都应该至少读上两遍的十篇论文》。关于读论文的重要性我不多作解释，事实上我也解释不清，但是可以确定的是，论文让我感受到技术之美，是一件很惬意的事情。当然，我们不一定要读“前沿”的内容，但是一些经典的论文是不能错过的。"
    },
    {
        "Title": "Model Binder机制的缺陷",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/03/02/limitation-of-model-binder.html",
        "BriefIntro": "摘要: Model Binder提供了一种机制，将请求中的数据转化成Action方法的参数。但是它是唯一的做法吗？它真是合适的做法吗？本文提出了Model Binder机制的一个缺陷，并且在下一篇文章中提出解决方案。"
    },
    {
        "Title": "尽可能地使用强类型数据",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/27/mvc-use-strong-type-everywhere.html",
        "BriefIntro": "摘要: 我们继续来谈《最佳实践》，这次的主题便是“强类型”。强类型的好处有很多，张嘴便可随意举上几例：能够享受代码提示功能、能够获得重构工具的支持、能够在编译期发现更多错误……"
    },
    {
        "Title": "对ASP.NET MVC项目中的视图做单元测试",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/25/unit-test-views.html",
        "BriefIntro": "摘要: 说到ASP.NET MVC，我们似乎始终都在关注对于Controller的测试，那么我们该如何对视图进行独立的单元测试呢？"
    },
    {
        "Title": "简化异步操作（下）：构建AsyncTaskDispatcher简化多个异步操作之间的协作调用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/24/simplify-async-programming-2-asynctaskdispatcher.html",
        "BriefIntro": "摘要: 由于CCR和AsyncEnumerator难以“并行”地执行异步代码，因此我们需要提出新的解决方案来满足这方面的需求。本文将构建一个AsyncTaskDispatcher组件，使多个异步操作之间的协作调用得以大大简化。\n"
    },
    {
        "Title": "由衷感谢希赛网和CSDN采用老赵的文章",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/23/1396560.html",
        "BriefIntro": "摘要: 由衷感谢希赛网和CSDN采用老赵的文章。有图为证。"
    },
    {
        "Title": "ASP.NET MVC单元测试最佳实践",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/23/mvc-unit-test-best-practices.html",
        "BriefIntro": "摘要: 我对于微软的一个特点时常呈一种否定态度，那就是因为它往往为了“显摆”自己的技术而向外界展现出一种“飘渺的美好”愿景。例如WebForm推出时铺天盖地的“拖拽”风潮，看似精彩却迷人双眼。这是我在上周“.NET技术大会”上的主题Session。先提供这次Session内容的PPT和演示吧，在接下来的一段时间内，我会陆续分析这次课程的内容。希望大家能够尽可能地把东西给“用好”，而不仅仅是得到表面上的正确结果。"
    },
    {
        "Title": "简化异步操作（上）：使用CCR和AsyncEnumerator简化异步操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/20/simplify-async-programming-1.html",
        "BriefIntro": "摘要: 在以前的文章中，我曾多次强调应用程序中异步化的重要性。尤其对于IO密集型操作来说，异步执行对于应用程序的响应能力和伸缩性有非常关键的影响。正确使用异步编程能够使用尽可能少的线程来执行大量的IO密集型操作。可惜的是，即使异步编程有避免线程阻塞等诸多好处，但是这种编程方式至今没有被大量采用。其原因有很多，其中最主要的一点可能就是异步模型在编程上较为困难，导致许多开发人员不愿意去做。因此，无论是微软官方还是社区中都出现了一些简化异步编程方式的组件，例如微软的CCR和Wintellect's .NET Power Threading Library中的AsyncEnumerator。但是它们都有同样的局限性，例如操作之间存在依赖，则很难让它们并行执行。对于这样的场景，我们还需要构建额外的解决方案，使多个有依赖关系的异步操作之间的协作调用得以尽可能的简化。"
    },
    {
        "Title": "QCon北京大会，3月15日前购票享受7.5折优惠",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/19/1393836.html",
        "BriefIntro": "摘要: 如果有朋友个人或团体需要的话可以联系我。距离QCon全球企业开发大会北京站（4月7~9日）还有2个月的时间，这次的会议包括6大主题和30多位知名讲师，为你提供一场丰富的培训和绝佳的学习机会。现在报名即可享受7.5折优惠，节省700元。 QCon大会的目标是为企业软件开发领域提供技术架构、团队领导和项目管理等深入技术内容的会议。这也意味着会议的内容并不局限在商业和流行技术上，同时它会提供最佳实践和相..."
    },
    {
        "Title": "程序员兄弟们，我们的基本素质怎么样？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/17/1392664.html",
        "BriefIntro": "摘要: 我之前没有好好想过一个人的基本素质究竟应该是什么，只能在接触中觉得某个人“这里做的不错”或者“那里有所欠缺”。但是现在我仔细想了想，可能我们都需要扪心自问一下，我们需要具备哪些基本素质――是“人”的基本素质，可能具备这些基本素质之后，成为一个优秀的程序员只是时间问题吧。很不中听，兄弟们姑妄听之吧。\n"
    },
    {
        "Title": "老赵很喜欢博士后和小工的故事，于是就编下去了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/15/1390923.html",
        "BriefIntro": "摘要: 嗯嗯，朋友们大都很喜欢小工，简单就是美嘛，成本多省，联合利华多笨。不过这个估计应该是编（理由可见各评论）出来的，那么老赵也继续编下去……"
    },
    {
        "Title": "为ASP.NET MVC扩展异步Action功能（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/04/extend-asp-net-mvc-for-asynchronous-action-2.html",
        "BriefIntro": "摘要: 续上篇：异步请求处理是ASP.NET 2.0中引入的高级特性，它依托IO Complete Port，对于提高IO密集型应用程序的吞吐量非常重要（详见原理描述和性能测试）。但是目前ASP.NET MVC框架缺少异步Action功能，这也就是老赵经常挂在嘴边的那个“目前ASP.NET MVC所缺少的非常重要的功能”。我在春节休假期间仔细思考了一下这方面的问题，得出了一个相对不错的扩展：完整，方便，并且非常轻巧――核心逻辑代码只有200行左右，这意味着绝大部分功能将会委托给框架中现成的内容，确保了扩展的稳定，高效并且拥有较好的向后兼容性。"
    },
    {
        "Title": "为ASP.NET MVC扩展异步Action功能（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/02/extend-asp-net-mvc-for-asynchronous-action.html",
        "BriefIntro": "摘要: 异步请求处理是ASP.NET 2.0中引入的高级特性，它依托IO Complete Port，对于提高IO密集型应用程序的吞吐量非常重要（详见原理描述和性能测试）。但是目前ASP.NET MVC框架缺少异步Action功能，这也就是老赵经常挂在嘴边的那个“目前ASP.NET MVC所缺少的非常重要的功能”。我在春节休假期间仔细思考了一下这方面的问题，得出了一个相对不错的扩展：完整，方便，并且非常轻巧――核心逻辑代码只有200行左右，这意味着绝大部分功能将会委托给框架中现成的内容，确保了扩展的稳定，高效并且拥有较好的向后兼容性。"
    },
    {
        "Title": "从CSDN的趣味题学C# 3.0",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/01/1381867.html",
        "BriefIntro": "摘要: 引文参见：从CSDN的趣味题学Python。引文用了Python来解这种趣味题，很有意思，Python也很适合。不过我看了看似乎这篇文章没有真正理解如今的C#可以怎么用，老赵一时兴起，也来设法做了一下。\n"
    },
    {
        "Title": "Fast Reflection Library",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/02/01/Fast-Reflection-Library.html",
        "BriefIntro": "摘要: 这是我在CodePlex上创建的一个项目，它的网址是http://www.codeplex.com/FastReflectionLib，使用Microsoft Public License (Ms-PL)，您可以随意在自己的产品中使用它的全部或部分代码。这个项目用到了我在《方法的直接调用，反射调用与Lambda表达式调用》和《这下没理由嫌Eval的性能差了吧？》两篇文章里用到的做法，并加以提炼和扩展发布的项目――随便搞搞，留个印记，也供以后参考。"
    },
    {
        "Title": "节日里研究了点东西，写了两篇文章――附送一个中文编程",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/30/1381486.html",
        "BriefIntro": "摘要: 发表在英文blog上了，感兴趣的朋友们可以先看看，节后我慢慢翻译过来帖到这里。  Extend ASP.NET MVC for Asynchronous Action  Fast Reflection Library 最后附送一个中文编程，转载的：#define 趁还 while#define 那个啥 int#define 总的来说 main#define 买 cin#define 卖 cout#..."
    },
    {
        "Title": "《花开在眼前》听得泪流满面",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/25/1380855.html",
        "BriefIntro": "摘要: http://you.video.sina.com.cn/b/17560381-1550934241.html"
    },
    {
        "Title": "媒体的春秋笔法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/23/1380542.html",
        "BriefIntro": "摘要: 刚才看了博客园的新闻，发现了一点非常有趣的东西。两篇新闻分别描述分析了微软和谷歌两个公司去年第四季度的财报。老赵仔细对比了两者的内容，稍微做了一点归纳：  微软：季营收166.3亿美元，同比增长2%；净利润41.7亿美元，同比下滑11%。 谷歌：季营收57亿美元，同比增长18%，远不及以往50%的增长率；净利润为3.82亿，净利润同比下降。 从这些数字上看，谁的“效益”比较好？我是看不出来，评价为..."
    },
    {
        "Title": "计算机体系结构与程序性能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/22/system-architecture-and-program-performance.html",
        "BriefIntro": "摘要: 老赵现在不谈“数据结构与算法如何有助于改善编程思维有什么改善”，或是“操作系统中线程调度、内存分页机制对于开发大型应用程序的参考价值”等“虚无缥缈”之物。在这篇文章里，我想通过两个直接的例子，来说明了解计算机体系结构对于提高程序性能有什么样的作用。"
    },
    {
        "Title": "Lab：体会ASP.NET异步处理请求的效果",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/19/lab-async-request.html",
        "BriefIntro": "摘要: 关注老赵的朋友们一定记得，我不止一次强调过在ASP.NET应用程序中使用异步方式处理请求对于提高吞吐量的作用。不过似乎很多朋友们一直没有理解这样做的原因，亦或是对这样做的效果没有一个实际的“体会”，甚至在质疑这么做的功效。现在老赵将向大家进行一个演示，我们一起来看一下这么做的实际效果如何。"
    },
    {
        "Title": "这下没理由嫌Eval的性能差了吧？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/09/DynamicPropertyAccessor-and-FastEval.html",
        "BriefIntro": "摘要: 写ASP.NET中使用Eval是再常见不过的手段了，好像任何一本ASP.NET书里都会描述如何把一个DataTable绑定到一个控件里去，并且通过Eval来取值的用法。什么，您觉得Eval性能差不堪大用？那么就来看看这篇文章吧。（Updated：提供思考题解答）"
    },
    {
        "Title": "对aspx等页面进行预编译以进行编译期检查",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/08/compile-aspx-file.html",
        "BriefIntro": "摘要: 话说在开发Web应用程序时能够很轻易地对后台代码进行编译，并获得编译时的错误。可惜有时候我们对后台代码进行重构或Find all references的时候都会忽略aspx，ascx和master等文件里的代码，因为它们只有在打开时（执行期）才能发现错误。这是一个非常惹人厌的问题，但是事实上，我们只需要对一个asp.net目录下的文件进行预编译即可发现哪里出现问题。在项目中我经常会准备一个bat脚..."
    },
    {
        "Title": "一个利用扩展方法的实例：AttachDataExtensions",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/07/AttachDataExtensions.html",
        "BriefIntro": "摘要: 扩展方法是C# 3.0（老赵对VB不熟）中最简单，也是最常用的语言特性之一。这是老赵自以为的一个简单却不失经典的实例。"
    },
    {
        "Title": "一个较完整的关键字过滤解决方案（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2009/01/05/filter-forbidden-word-solution-3.html",
        "BriefIntro": "摘要: 陷阱何在？适用场合是什么？如何控制输入过滤和输出过滤？我们真的需要HttpModule吗？性能如何？在这篇文章里，我们来针对一些问题进行讨论。如果您觉得有哪些您感兴趣但是没有涉及到的问题则请在评论中补充，我会修改文章添加一下内容。"
    },
    {
        "Title": "受经济危机影响，老赵开始变卖家产了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/12/31/1365561.html",
        "BriefIntro": "摘要: 卖书了卖书了……"
    },
    {
        "Title": "一个较完整的关键字过滤解决方案（中）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/12/24/filter-forbidden-word-solution-2.html",
        "BriefIntro": "摘要: 上篇文章提出的问题解决了没有？哦哦，我是指采取命名约定的方式来改变过滤行为。当然有问题，不过我这里提一下比较重要的两个：1. 首先，就是“改名”这种行为――究竟是否方便？2. 再者，命名真是我们可以控制的吗？路漫漫而修远兮……"
    },
    {
        "Title": "一个较完整的关键字过滤解决方案（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/12/22/filter-forbidden-word-solution.html",
        "BriefIntro": "摘要: 关键字过滤功能自然无比重要，但是如果要在代码中对每个输入进行检查和替换则会是一件非常费神费事的事情。尤其是如果网站已经有了一定规模，用户输入功能已经遍及各处，而急需对所有输入进行关键字过滤时，上述做法更可谓“远水解不了近渴”。这时候，如果有一个通用的办法，呼得一下为整站的输入加上了一道屏障，那该是一件多么惬意的事情。这就是本文希望解决的问题。是不是很简单？我一开始也这么认为，不过事实上并非那么一帆风顺，而且在某些特定条件下似乎更是没有太好的解决方法……"
    },
    {
        "Title": "和谐社区，和谐技术：微软的宠儿们，为什么富人的孩子就不能早当家？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/12/11/i-cannot-bear-any-more.html",
        "BriefIntro": "摘要: 我爱微软。从刚接触计算机开始我就是沉浸在微软的技术中，DOS下开发，VB5/6，Delphi直到现在的.NET，微软让我的技术生涯充满了乐趣。我爱博客园。我是从博客园成长起来的，博客园给了我多于真实能力虚名，让我突然就变成了“赵老师”，“XXX专家”。博客园给了我很多机会，让我的工作路途变得更为通畅。但是，现在却很有唱衰的欲望。"
    },
    {
        "Title": "方法的直接调用，反射调用与……Lambda表达式调用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/11/24/invoke-method-by-lambda-expression.html",
        "BriefIntro": "摘要: 想调用一个方法很容易，直接代码调用就行，这人人都会。其次呢，还可以使用反射。不过通过反射调用的性能会远远低于直接调用――至少从绝对时间上来看的确是这样。因此，很多框架在必须利用到反射的场景中，都会设法使用一些较高级的替代方案来改善性能。例如，使用CodeDom生成代码并动态编译，或者使用Emit来直接编写IL。不过自从.NET 3.5发布了Expression相关的新特性，我们在以上的情况下又有了更方便并直观的解决方案。"
    },
    {
        "Title": "在Web应用程序开发过程中利用ASP.NET MVC框架的实战技巧",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/11/07/TechED-2008-CS276.html",
        "BriefIntro": "摘要: 这是我在TechED 2008北京站讲的一个Community Session，主要内容是在传统的ASP.NET（Web Forms）应用程序中运用ASP.NET MVC中一些优秀特性的方式。这里是PPT和Demo下载，以后我再慢慢细说。"
    },
    {
        "Title": "概念，依旧是概念……csproj文件是做什么用的？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/08/04/the-csproj-file.html",
        "BriefIntro": "摘要: 本来今天是在写一篇关于LINQ的文章，不过写着写着忽然觉得有些找不着北的感觉，似乎有点过于发散了？于是来博客园逛了一下，正好发现有朋友发了一篇文章《.NET面试题，看看你的水平》，于是就在这篇文章里和目前正红火的小包子同学为某个问题进行了一番争论。而在吵吵闹闹的过程中看到这么一句话“pdb文件需要放在Debug目录下才有效果”，忽然觉得有个话题值得一说：“开发环境与运行环境”。回想起平时被问到的问题，发现有不少朋友对于开发环境和运行环境并不是分的非常清楚。那么就让我们从标题中的问题开始：“csproj文件究竟是做什么用的”。"
    },
    {
        "Title": "输出缓存与CachePanel",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/07/28/CachePanel.html",
        "BriefIntro": "摘要: 缓存的作用自不必说，提高系统性能最重要的手段之一。ASP.NET作为一个成熟、强大的应用程序框架，缓存相关的设计自然是它不可或缺的一部份。ASP.NET中的输出缓存即为所谓的“OutputCache”。不过我们有时候需要更灵活和强大的缓存方式，这就CachePanel诞生的原因。本文将分为以下三个部分："
    },
    {
        "Title": "上海柏盛技术有限公司招聘技术人员",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/07/17/1032799.html",
        "BriefIntro": "摘要: 顶贴！继续招聘！“我的衣橱”正在飞速发展阶段！不要怀疑，这个面向女性的时尚网站，就是老赵这个粗人目前正在创业的项目。我们还有许多计划，而现在最希望就是能够有时间，以及有能力的人将它们实现。项目的发展非常迅速，因此我们也需要人才来加入我们：招聘职位1：前台开发人员 工作职责： 用户行为分析及界面开发。 网站前台页面功能开发，包括前台的架构、设计、开发以及单元测试。 在各种环境中（包括产品环境）对前台..."
    },
    {
        "Title": "方案改进：直接通过User Control生成HTML",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/07/14/User_Control_Rendering.html",
        "BriefIntro": "摘要: 对于使用User Control生成HTML的方式，大家应该已经比较熟悉了，老赵也曾经写过一篇文章（《"
    },
    {
        "Title": "精化集ASP.NET AJAX与ASP.NET MVC分类第二轮筛选结果",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/06/14/1221920.html",
        "BriefIntro": "摘要: 以下是包同学导给我的清单。老赵的第二轮把关很严，杀了几乎99%的文章。不过似乎有少部分并没有经过我的手，可能是其他同学转过来的吧。第三轮老赵依旧会严格把关，肯定也会杀更多（包括通过其他同学第二轮的）文章。请大家监督，有疑问请及时告诉老赵。"
    },
    {
        "Title": "觉得有必要来澄清几组重要概念",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/06/04/ajax-linq-lambda-expression.html",
        "BriefIntro": "摘要: 在阅读很多朋友问题的过程中，以及平时和别人讨论中，亦或是园子里的文章中经常发现一些误用概念的情况。如果在概念上没有形成共识，那么在工作和交流上就会造成许多问题。因此，老赵已觉得有必要特地来澄清一些概念，解释一下这些概念之间的区别和联系。希望在明确这些概念之后，大家能够把注意力集中在对于具体问题的分析解决上，而不要让沟通成为瓶颈。\n在这篇文章中，我希望澄清三组概念，它们是：\nAJAX / AJAX框架 / AJAX.NET (Professional) / ASP.NET AJAX\nLINQ / LINQ to SQL / LINQ to XXX\nLambda Expression / Expression Tree / 匿名方法"
    },
    {
        "Title": "我们到底该怎么做精华集",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/05/22/1204424.html",
        "BriefIntro": "摘要: 博客园要做精华集，老赵觉得很有意思。老赵被分配到的工作是ASP.NET AJAX和ASP.NET MVC。不过事实上老赵想搞得东西很多，还有ASP.NET、.NET 3.5也想参一腿等等。不过这篇文章想和大家讨论的并不是计划，因为有些东西老赵还没有确定，所以现在只是来谈谈一些想法。"
    },
    {
        "Title": "雅虎CEO杨致远:愿意与微软重启谈判",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/05/10/1191437.html",
        "BriefIntro": "摘要: 路透社消息，雅虎CEO杨致远周一表示，是微软主动离开谈判桌，他个人依然愿意与微软商谈协议。“我们当时在协商找到共识的方法，然後就是周六他们拂袖而去，”杨致远接受路透采访时表示。“他们开启了谈判，然後是他们选择了退出。”当被问到雅虎是否对谈判继续开启大门时，杨致远说：“如果他们有什么新的想法，我们会开放谈判大门……我非常愿意倾听。”在微软撤回475亿美元的收购要约后，雅虎股价周一下挫15%。尽管三个..."
    },
    {
        "Title": "更新：让UpdatePanel支持上传文件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/05/04/build-component-to-upload-file-in-updatepanel.html",
        "BriefIntro": "摘要: 在一年多前我发布了一系列文章（"
    },
    {
        "Title": "不妨来做个尝试：UpdatePanel for ASP.NET MVC",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/04/27/try-to-build-an-updatepanel-for-asp-dot-net-mvc.html",
        "BriefIntro": "摘要: 前一段时间尝试为ASP.NET MVC构建了一个类似于UpdatePanel的AJAX解决方案，本文叙述了这个组件的设计思路以及使用方式，并提供了源代码以及示例程序。"
    },
    {
        "Title": "ScottGu的Blog真是受欢迎，又多了一种语言",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/04/27/scott-blog-in-arabic.html",
        "BriefIntro": "摘要: 阿拉伯语：Scott Guthrie's Blog in Arabic"
    },
    {
        "Title": "强烈推荐一个有关前台开发技术的Blog",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/04/21/1163878.html",
        "BriefIntro": "摘要: http://www.cnblogs.com/ruxpinsp1 这是我的一个同事，我们一般叫他“大胡仔”（原因可见其自画像http://www.cnblogs.com/ruxpinsp1/archive/2008/04/20/1162878.html）。此人精通（绝不是各招聘启事或简历上的“精通”）前台开发，对于CSS样式在各种浏览器的各种版本下之间的差别了如指掌。此外又精通JavaScript..."
    },
    {
        "Title": "您善于使用匿名函数吗？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/04/04/can-you-use-anonymous-method-properly.html",
        "BriefIntro": "摘要: 合理使用匿名方法能够大大简化开发，提高代码质量。您善于使用匿名方法吗？"
    },
    {
        "Title": "Windows Live Translator",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/03/24/1118943.html",
        "BriefIntro": "摘要: 微软推出的Translator服务，目前还处于试用阶段。对于此类服务打假应该已经不陌生了，不过比较有意思的是Windows Live Translator还提供了一个内嵌在网页里的小部件，您可以将其放在页面的边栏中，读者就可以获得一个翻译功能了，如下： 至于翻译的质量，肯定是不敢恭维的，毕竟是机器嘛……例如我们来试试看中译英： http://www.windowslivetranslator.co..."
    },
    {
        "Title": "推荐一篇文章：火星人的耳机",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/03/23/martian-headsets.html",
        "BriefIntro": "摘要: 大名鼎鼎的Joel Spolsky最近写了一篇很有趣的文章《Martian Headsets》。写这篇文章的起因是IE8的推出，这让Joel忽然有兴趣从各个角度讨论Web标准之争的各个方面，比如缘由，现状，以及用户的反应等等。非常值得一看。原文链接：http://www.joelonsoftware.com/items/2008/03/17.html翻译链接：http://luoshengblog..."
    },
    {
        "Title": "扩展LINQ to SQL：使用Lambda Expression批量删除数据",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/03/05/LINQ-to-SQL-Batch-Delete-Extension.html",
        "BriefIntro": "摘要: ORM框架在删除数据方面一直有个尴尬，那就是无法通过指定条件批量删除数据。于是对于一些删除操作，我们不得不写SQL语句或者执行存储过程。幸运的是C# 3.0所拥有的强大特性足以让我们对LINQ to SQL的功能进行扩展。为了更好地进行项目开发，以及周五的一次技术交流，我为LINQ to SQL扩展了批量删除功能。"
    },
    {
        "Title": "LINQ to SQL异步查询",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/03/01/async-query-with-linq-to-sql.html",
        "BriefIntro": "摘要: 异步操作是提高Web应用程序吞吐量的重要手段，关于这方面的话题已经在前文《正确使用异步操作》中解释过了。对于大多数互联网应用来说，性能瓶颈数据库访问。换句话说，一个请求在数据库操作上所花的时间往往是最多的――并且占总时间的90%以上。因此，当Web应用程序的吞吐量因为数据库操作的阻塞而受到影响的话，我们可是尝试使用异步数据库操作来进行优化。那么我们又该如何使用LINQ to SQL进行异步查询呢？"
    },
    {
        "Title": "最近真是又懒又累",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/27/1084289.html",
        "BriefIntro": "摘要: 其实工作也不像想象中那么忙，但是下班后就是想看看书然后睡觉。想写的东西其实有很多，但就是懒于动笔。不行了太放松了，要努力了。"
    },
    {
        "Title": "正确使用异步操作",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/24/use-async-operation-properly.html",
        "BriefIntro": "摘要: 本想写一点有关LINQ to SQL异步调用的话题，但是在这之前我想还是先写一篇文章来阐述一下使用异步操作的一些原则，避免有些朋友误用导致程序性能反而降低。这篇文章会讨论一下在.NET中有关异步操作话题，从理论出发结合实际，以澄清概念及避免误用为目标，并且最后提出常见的异步操作场景和使用案例。这样我们就可以知道什么时候该使用异步操作，什么时候会得不偿失。"
    },
    {
        "Title": "在LINQ to SQL中使用Translate方法以及修改查询用SQL",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/19/using-translate-method-and-modify-command-text-before-query-in-linq-to-sql.html",
        "BriefIntro": "摘要: 目前LINQ to SQL的资料不多――老赵的意思是，目前能找到的资料都难以摆脱“官方用法”的“阴影”。LINQ to SQL最权威的资料自然是MSDN，但是MSDN中的文档说明和实例总是显得“大开大阖”，依旧有清晰的“官方”烙印――这简直是一定的。不过从按照过往的经验，在某些时候如果不按照微软划定的道道来走，可能就会发现别样的风景。老赵在最近的项目中使用了LINQ to SQL作为数据层的基础，在LINQ to SQL开发方面积累了一定经验，也总结出了一些官方文档上并未提及的有用做法，特此和大家分享。"
    },
    {
        "Title": "MIX 2008与ASP.NET MVC框架的Road-Map",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/13/mix08-asp-net-mvc-framework-road-map-update.html",
        "BriefIntro": "摘要: ScottGu同学最近在Blog上发布了一些有关MIX 2008和ASP.NET MVC框架的消息。"
    },
    {
        "Title": "随便说说：在ASP.NET应用程序中上传文件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/12/aspnet_upload.html",
        "BriefIntro": "摘要: 在Web程序中上传文件是很常见的需求，最近忽然想到了点这方面的内容，就随便谈谈吧，希望对大家有帮助。"
    },
    {
        "Title": "老赵被刷票了，但这不是老赵做的",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/02/01/1061830.html",
        "BriefIntro": "摘要: http://www.51cto.com/exp/hhhchina/heroes/index.html老赵今天早上大约9点开始被人刷票，当时票数为8700多，但是不久后就发现票数就到达了近万。在发现刷票情况后（当时大约9点半）老赵立即联系了51cto的编辑和主办方（微软）的人，他们均表示会立即汇报，可惜已经无法制止票数上涨。票数依旧以每秒2-3票的速度持续增长，直至中午时到达票数上限32768。已..."
    },
    {
        "Title": "微软发布了MSDN Code Gallery站点",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/31/1059359.html",
        "BriefIntro": "摘要: 微软近期发布了一个MSDN Code Gallery站点，从名字上就可以看出，这是一个用于存放代码的“展馆”。MSDN Code Gallery和CodePlex的区别在于，前者用于存放各种大大小小的资源，而后者则是一个项目管理平台。不过虽然MSDN Code Gallery的内容比较“零碎”，但是功能似乎还是不少的，甚至可能上传视频说明。希望这个能够成为GotDotNet后新一代微软源码资源库。..."
    },
    {
        "Title": "明日讲座主题：ASP.NET WebForms、MVC与MVP的演变与结合",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/26/1054332.html",
        "BriefIntro": "摘要: 明日博客园上海俱乐部活动，老赵有幸受邀与大家一起讨论一下ASP.NET方面的问题。经过了一段时间的思考，我准备这次的主题定为“ASP.NET WebForms、MVC与MVP的演变与结合”。"
    },
    {
        "Title": "微软十大软件开发英雄评选",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/25/1052295.html",
        "BriefIntro": "摘要: 微软这次搞出来个“英雄来自这里（Heros Happen Here）”活动（好像还是全球范围内的），要评选出十大IT英雄和十大软件开发英雄。老赵有幸和杜杜以及特瑞李同学入围了十大软件开发英雄的25人候选人名单，等待网友投票结果。这次入选让我觉得……很古怪，主要是我也不清楚是怎么回事，怎么运作的等等。不过既然入选了就是好事，希望大家能够支持。:)投票方式是：http://www.51cto.com/..."
    },
    {
        "Title": "WCF的Web编程模型资源",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/24/1050831.html",
        "BriefIntro": "摘要: .NET 3.5中增强了WCF的功能，为它提供了发布RESTful服务和Syndication（即常见的RSS或Atom）的能力。现在我们开发RESTful的服务或API就非常简单了。同样，无论是分析还是发布RSS也都有了现成的类库（开源产品中原本也有RSS.NET和Atom.NET，不过好像现在都商业化了？）。 MSDN上这方面资源很多，看完类库参考和示例代码（其实并不很多）一般已经足够了。不过..."
    },
    {
        "Title": "重提URL Rewrite（4）：不同级别URL Rewrite的一些细节与特点",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/13/Url-Rewrite-4.html",
        "BriefIntro": "摘要: 在之前的文章里我们已经谈论了有关URL Rewrite的几个主要的方面。在本系列的最后一篇文章中，我们就来讨论一下有关不同级别URL Rewrite的一些细节与特点。"
    },
    {
        "Title": "重提URL Rewrite（3）：在URL Rewrite后保持PostBack地址",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/13/Url-Rewrite-3.html",
        "BriefIntro": "摘要: 在进行了URL Rewrite之后，经常会遇到的问题就是页面中PostBack的目标地址并非客户端请求的地址，而是URL Rewrite之后的地址，这就将我们服务器端的URL映射规则暴露给了客户端，甚至会引起应用程序错误。这无疑不是我们所希望的，那么我们该如何避免这个情况发生呢？本文就不同层面的URL Rewrite方式分别讨论了这个问题。"
    },
    {
        "Title": "重提URL Rewrite（2）：使用已有组件进行URL Rewrite",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/13/Url-Rewrite-2.html",
        "BriefIntro": "摘要: 可能已经没有人会使用上一篇文章中的方法进行URL Rewrite了，因为提供URL Rewrite的组件早已铺天盖地了。如果要我推荐，我指挥推荐两款组件，那就是Intelligencia的开源组件UrlRewriter.NET和IIRF，它们分别在ASP.NET层面和IIS层面上进行URL重写。"
    },
    {
        "Title": "重提URL Rewrite（1）：IIS与ASP.NET",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2008/01/12/Url-Rewrite-1.html",
        "BriefIntro": "摘要: 之前觉得这个话题已经被谈滥了。URL Rewrite早已经被广大开发人员所接受，网上关于URL Rewrite的组件和文章也层出不穷，但是总是让我感觉意犹未尽，于是最终还是忍不住提笔写了这系列文章。这些文章不会谈论URL Rewrite的价值与意义，而只会谈论纯技术的内容。文章中也不会有详尽地实现分析，而是结合了我的经验，从应用角度来讲解这个话题。您已经知道的，您还不知道的，别处已经讲过的，或者还没有讲过的，希望这系列文章的“旧事重提”不会让您觉得沉闷，并且能让您了解ASP.NET中URL Rewrite的方方面面。如果您以后再遇到URL Rewrite方面的问题是能够想到这几篇文章，估计我做梦也会笑出声来。"
    },
    {
        "Title": "技巧：使用User Control做HTML生成",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/30/usercontrol_as_an_template.html",
        "BriefIntro": "摘要: User Control大家肯定不会陌生，在使用ASP.NET的过程中，除了aspx页面，最常见的就莫过于ascx了。ascx是一个有独立逻辑的组件，提供了强大的复用特性，合理使用，能够大大提高开发效率。通过User Control直接生成HTML内容其实已经是一个比较常用的技巧了（尤其在AJAX时代），不过网络上这方面的内容比较少，很多人还是在苦苦地拼接字符串，因此在这里我通过一个实例简单介绍一下这个技巧。"
    },
    {
        "Title": "想要找工作，那么还得先解迷",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/24/1011915.html",
        "BriefIntro": "摘要: 这两天写了不少，可惜下一片就不容易了，要想办法怎么写的……写的……让人信服，呵呵。老赵在创业期间所以工作很忙，能够有时间写东西实在不容易。还有就是，1月份老赵这边就要进行扩张了，可能会找两至三个初级开发人员，一至二个测试人员，以及一个前台开发人员。不过不要误会，文章标题写的不是老赵的招聘，而是这个：http://www.networkmirror.com/hUmsXHsC3yihic9B/denv..."
    },
    {
        "Title": "为WebForms说几句话，以及一些ASP.NET开发上的经验（3）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/23/experience-for-asp-dot-net-and-webforms-3.html",
        "BriefIntro": "摘要: 有人说，客户端ID污染问题使脚本代码很难做到“内聚”。可能他的意思是将脚本代码提取到js文件中吧。但是我认为，这种污染“迫使”我们必须使用内聚性高的方式进行客户端开发。\n这也算是一种因祸得福吧。"
    },
    {
        "Title": "为WebForms说几句话，以及一些ASP.NET开发上的经验（2）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/22/Experience-for-Asp-dot-net-and-WebForms-2.html",
        "BriefIntro": "摘要: 在ASP.NET的WebForms刚出现时，各种“演示”看上去真的很美。这个特点微软至今还保留着，各微软技术大会上的演示真的让人感到心潮澎湃。在我看来，那些“激素大会”更是一种推广策略，而并没有将目光集中在技术细节的本身。所以微软的东西似乎总是有入门容易提高难的“毛病”。开发人员被“宠坏”了，上一篇文章中有位朋友说这就是“穷人的孩子早当家”，还是有一定道理的。在.NET环境下我们就像是官宦子弟，不过这并不能成为我们习惯于“吃喝嫖赌”的理由。我们要合理利用富裕的环境带给我们的资源，但是要适当地抛弃一些不好的东西。"
    },
    {
        "Title": "为WebForms说几句话，以及一些ASP.NET开发上的经验（1）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/22/Experience-for-Asp-dot-net-and-WebForms.html",
        "BriefIntro": "摘要: 我还是想写这篇文章，我只会WebForms平反，而不会“贬低”MVC框架；我只是想证明WebForms的那些缺点到底真的是缺点，还是开发人员自身没有好好利用起这把利器。因此我将会根据我的经验，一一回应对WebForms比较常见的指责。如果措辞上有任何的不妥，也请大家多多包涵。"
    },
    {
        "Title": "有些话不知道怎么说才好",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/12/07/986062.html",
        "BriefIntro": "摘要: 有些话不知道怎么说才好。在blog上，msn上，或者Email，老赵一直在回答大家提出的各种问题。虽然自知遗漏不少，但是相信其中的大部分我都是给与回复的――可能质量有高有低，投入有多有少，但是相信老赵每次回答都是负责任的。但是老赵目前发现的问题是，我被问到的大部分问题都非常简单，如果之前搜索过，那么相信都能够找到答案。某些初学者朋友对老赵特别关照，经常在msn上问我这个那个，但是总是希望能够直接得..."
    },
    {
        "Title": "[EBook]OReilly - High Performance Web Sites",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/26/OReilly-High-Performance-Web-Sites.html",
        "BriefIntro": "摘要: 就是那本书，提出了14条开发高性能Web应用准则的书。"
    },
    {
        "Title": "创业公司招聘前台开发人员（Front-end Web Developer）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/23/hiring-front-end-web-developer.html",
        "BriefIntro": "摘要: 大家好，老赵开始创业了。老赵目前在的一家“公司”正在起步，自觉机会不错，我们有着大多数其他创业公司无法比拟的优势（但是限于某些原因我无法再这里详细地透露给您）。正因如此，我们需要“少”而“精”的成员来成为技术团队的骨干。目前我们已经有了两个开发人员和一个测试人员，也有了非常专业的设计师，似乎目前唯一欠缺的技术力量就是前台开发人员了。招聘职位：前台开发人员（Front-end Web Develop..."
    },
    {
        "Title": "在Linq to Sql中管理并发更新时的冲突（3）：使用记录的时间戳进行检测",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/23/Solving-Concurrent-Conflict-Problem-in-Linq-to-Sql-3-using-timestamp.html",
        "BriefIntro": "摘要: 在《"
    },
    {
        "Title": "是否会成为问题――Linq to Sql的执行可能无法复用查询计划",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/21/linq-to-sql-cannot-cache-compiled-plan.html",
        "BriefIntro": "摘要: 复用查询计划是Sql Server降低CPU开销，提高性能的一个重要手段。但是Linq to Sql可能无法复用查询计划，这是怎么回事儿呢？"
    },
    {
        "Title": "Writing Secure Code Third Edition",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/20/966088.html",
        "BriefIntro": "摘要: 《Writing Secure Code》，无比经典的著作。现在David也已经有写第三册的打算了，那么期待一下。http://blogs.msdn.com/david_leblanc/archive/2007/10/17/writing-secure-code-3.aspx"
    },
    {
        "Title": "在Linq to Sql中管理并发更新时的冲突（2）：引发更新冲突",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/20/Solving-Concurrent-Conflict-Problem-in-Linq-to-Sql-2.html",
        "BriefIntro": "摘要: 在上一讲中，我们提到了一些诸如“乐观并发控制”、“悲观并发控制”的概念，以及察看Linq to Sql自动生成sql语句的方法。从这篇文章起我们将继续来查看Linq to Sql在管理并发更新时是如何发现冲突问题的。"
    },
    {
        "Title": "接下来写点什么好呢？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/12/957319.html",
        "BriefIntro": "摘要: 前一段时间基本上不写什么东西了，一半原因是没有时间，一半原因是不知道有什么东西可写――现在的资料都愈发齐全了，总觉得看了文档什么都有了。不知道接下来写点什么东西好呢？首先总是把我的Linq To Sql解决更新冲突的那一系列文章写好吧。不过接着呢？可能会写一点关于AJAX安全性方面的问题吧，这方面的内容其实感觉还是很多的――不过东西一多下手就困难了，要整理清楚不容易。还有就是把ASP.NET AJ..."
    },
    {
        "Title": "在网页里添加Web Live Messenger对话框",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/10/Add-Web-Live-Messenger-to-your-page.html",
        "BriefIntro": "摘要: 为您的页面也添加一个Web Live Messenger吧！"
    },
    {
        "Title": "微软推出Sync Framework，意欲与Google Gears竞争",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/05/949643.html",
        "BriefIntro": "摘要: Microsoft Sync Framework是微软推出的完整同步平台，通过它可以完成应用程序、服务及设备的在线协作及离线操作。开发人员也可以建立同步子系统，以整合到自己的程序及任何类型的数据中。Microsoft Sync Framework不仅利用Web服务和离线数据库，它还提供经过优化的P2P同步，支持任何类型的文件，如联系人、视频、图像和设置等。可扩展的框架包 括支持同步相关数据库、NT..."
    },
    {
        "Title": "编写兼容多浏览器的JavaScript代码――微软JScript团队JScript Deviations from ES3草案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/02/947511.html",
        "BriefIntro": "摘要: 实话说，常见的JavaScript在不同浏览器的区别并非那么难以处理，只要有一定JavaScript开发经验就会大体知道该如何“回避”某些问题。不过这份文档还是仔细比对了ECMAScript 3标准以及JavaScript在IE、FireFox、Safari、Opera四款浏览器中的实现，希望能够对JavaScript开发人员有帮助――区别的确很大，之前还真的没有想到这些。http://blogs..."
    },
    {
        "Title": "中央政治局常委的职业生涯对大家的启迪（转载）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/11/01/946273.html",
        "BriefIntro": "摘要: 第一，不要怕起点低。吴邦国毕业于清华大学电子系，可谓名校好专业。毕业后在电子管三厂当工人，慢慢地从技术员，副科长，一直到九年后，才升到厂技术科科长。工人有什么不能当的？第二，不要怕地方偏。温家宝地质大学研究生毕业后，到甘肃某地质队当技术员、政治干事，一直到十年后，才升到该地质队副队长。天津人，在甘肃干到四十岁。哪里不一样？第三，不要怕学校不理想。贾庆林毕业于石家庄工业管理学校，毕业后当普通技术员十..."
    },
    {
        "Title": "微软的网络分析服务 - Gatineau Web Analytics Begins Beta Today!",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/10/31/944851.html",
        "BriefIntro": "摘要: http://blogs.msdn.com/adcenter/archive/2007/10/29/project-gatineau-web-analytics-begins-beta-today.aspxWe are happy to announce that Project Gatineau, Microsoft’s new, free web analytics service, is r..."
    },
    {
        "Title": "在Linq to Sql中管理并发更新时的冲突（1）：预备知识",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/10/30/Solving-Concurrent-Conflict-Problem-in-Linq-to-Sql.html",
        "BriefIntro": "摘要: 无论与目前的ORM框架相比有没有优势，Linq to Sql在语言和平台的级别上为我们提供了一种新的操作对象和数据的方式，在一定程度上为我们解决了Object != Data的问题。在实际应用中，对于数据库的操作往往有着天生的并发性，因此在更新数据时可能会产生冲突。有些时候，如果没有合理的解决冲突问题，轻则让用户摸不着头脑，重则让系统数据处于一种不一致的状态。Linq to Sql自然考虑到了这一点，本系列讨论的内容，就是在使用Linq to Sql时，如何管理并发更新时产生的冲突。\n\n　　本文为这个系列的第一篇，将讨论一些预备知识，它们是进行后续研究的基础。"
    },
    {
        "Title": "我们到底该怎么学技术？如何成为一个优秀的技术人员？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/10/29/how-to-learn.html",
        "BriefIntro": "摘要: 看了不要迷失在技术的海洋中，深表同意。在后来的评论中大家也表达了自己的看法。让我觉得很有意思的是，大家的观点惊人地一致――几乎没有反对的声音。不过从经验上来看，意见太统一也不一定是一件好事。我有时也会小人之心地想，表示赞同的朋友们是真与LoveCherry的想法一致，还是仅仅因为自己以前对待技术随波逐流不堪所累，现在把这篇文章作为救命稻草看待，追求自身的心理平衡呢？LoveCherry写这篇文章，是基于他对于技术和思想的深度。如果我们没有达到这样的程度，是否会误解他的意思，得到的仅仅是一种心理安慰，却失去了更多东西呢？"
    },
    {
        "Title": "上海激动集团有限公司诚聘优秀技术人员（已停止，谢谢大家支持）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/10/11/920277.html",
        "BriefIntro": "摘要: 招聘职位：\n"
    },
    {
        "Title": "WCF在安全性方面的支持（1）：一些概念",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/25/WCF_Security_1.html",
        "BriefIntro": "摘要: 对于一个应用程序来说，最重要的特性之一就是安全性。安全性是如此的重要，自然WCF也会为它提供了良好的支持，否则也无法称之为一个成熟的模型了。"
    },
    {
        "Title": "客户端访问Web Service方法的一个细节",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/23/something_about_calling_web_service_method.html",
        "BriefIntro": "摘要: 之前遇到一个要求，需要能够取消一个正在进行中的Web Service。这也是我第一次遇到这个功能，不过不难，我想。既然ASP.NET AJAX的客户端与服务器端通信完全通过Microsoft AJAX Library的异步通信层进行，那么我们只要得到正在请求Web Service的Sys.Net.WebRequest对象，调用其abort方法就可以了。但是究竟应该如何得到这个对象呢？其中似乎还有这么一些问题……"
    },
    {
        "Title": "toString方法无法被继承？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/17/Why_cant_toString_method_be_inherited.html",
        "BriefIntro": "摘要: 在我看来，toString方法是一个类最重要的方法之一。在JavaScript中，将一个对象转化为字符串形式的默认方法就是调用其toString方法。因此，为类型实现一个合理的toString方法对于开发和调试都有一定的好处。在面向对象编程中，在父类中定义toString方法，以此为它的各个子类提供相似的字符串表现形式是常用的做法之一，但是如果您使用Microsoft AJAX Library的面向对象机制进行开发时就会遇到一个问题。那就是toString方法无法被继承。说的更明白一些，就是子类无法获得父类的toString方法的实现。除非在子类中直接定义一个toString方法，否则它只能含有JavaScript中默认的toString方法。很显然，这没有任何意义，也失去了面向对象的重要特性。这是为什么？又该如何解决呢？"
    },
    {
        "Title": "意外得到了一个免费的HttpWatch Professional的License",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/12/815964.html",
        "BriefIntro": "摘要: 不久前在Code Project上写了一篇文章《Client-side caching for script methods access in ASP.NET AJAX》，提到了HttpWatch Basic Edition的使用。没想到今天HttpWatch开发公司的一个员工写了封邮件给我，说对于我在文章里提到HttpWatch表示感谢，并且如果愿意给我一个免费的HttpWatch Profe..."
    },
    {
        "Title": "Tip：在使用AjaxControlTookit的控件时响应事件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/11/Attach_Events_to_Behaviors.html",
        "BriefIntro": "摘要: AjaxControlTookit中控件的关键在于客户端的Behavior对象，Behavior对象大都有丰富的属性，方法和事件。在目前的版本中，为某些Behavior添加Event Handler并非一件很容易的事情。相信今后的AjaxControlToolkit版本中将会为一些较早的Extender补充对于客户端事件的支持，让我们拭目以待吧，只是眼下我们还需要使用一些较为有技巧的方式来实现功能了。"
    },
    {
        "Title": "使用ASP.NET AJAX访问Script Method时启用客户端缓存",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/02/Client_Side_Caching_for_Script_Method_Access.html",
        "BriefIntro": "摘要: 缓存是开发高性能和高可用性Web应用的重要手段之一。作为ASP.NET AJAX的关键功能，从客户端访问Script Method会被大量用于使用ASP.NET开发的AJAX应用。这个功能有一个内置的服务器端缓存机制，不过如果我们能在客户端进行缓存则会得到更好的效果。"
    },
    {
        "Title": "评上了7月份的Microsoft MVP",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/07/02/802496.html",
        "BriefIntro": "摘要: 昨天晚上觉得困，于是躺到床上去休息了一会儿，没想到醒来以后就发现了一封信，告诉我当选了7月份的MVP（我们的Cat Chen也同样当选了，园子里肯定还有其它朋友）。自从去年9月份登陆博客园以来，写技术博客已经成了我工作和生活中不可缺少的一部分了，它让我认识了不少志同道合的朋友，也给我带来了不少的机会。不得不说，在这一年里我提高了很多。交流，比一味地吸收让我得到了更多。 MVP不是目标，它只是过程中..."
    },
    {
        "Title": "偷得浮生半日闲",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/28/798949.html",
        "BriefIntro": "摘要: 感觉时间越来越不够用了，上午看到了李锟老师在CSDN的AJAX技术讨论聊天室，本想去看看，却发现只能看到别人和李锟老师的话，我却无法说一个字。有话不能讲的感觉真郁闷，我还是自己写文章去了……不过为什么会发生这个情况呢？有没有哪位朋友可以把我的问题反馈给CSDN一下呢？"
    },
    {
        "Title": "Mono开发者在21天内实现Linux Silverlight",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/26/796809.html",
        "BriefIntro": "摘要: 微软在维加斯的会议上向外界隆重介绍Silverlight之后，Novell的Miguel de Icaza就召集了Mono小组的一群开发者，创造了一个Linux下的类似执行工具Moonligh。难以置信的是，他们只用了21天（据说微软用了两年来开发Silverlight）。在参加Las Vegas Mix大会之前，de Icaza接受了一位微软法国代表的邀请在巴黎观看了10分钟的预先展示，除此之外..."
    },
    {
        "Title": "ScriptPath属性的拙劣设计",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/25/The_awkward_design_of_the_ScriptPath_property.html",
        "BriefIntro": "摘要: 您在为AjaxControlTookit开发Extender控件时使用ScriptPath属性吗？ScriptPath属性的拙劣设计几乎使它成为了ExtenderControlBase类中最没有用的属性了。"
    },
    {
        "Title": "Scaling a Rails Application from the Bottom Up",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/23/793756.html",
        "BriefIntro": "摘要: http://media.joyent.com/JHoffmanRailsConf-May2007.pdf 这是今年Rails大会上的一个报告。虽然讲的是RoR应用程序，但实际该报告里包括了许多其他方面要素的阐述，例如操作系统，硬件配置等等。对于要构造大型网络应用的人来说是一个不可不读的文档。"
    },
    {
        "Title": "80+ AJAX-Solutions For Professional Coding",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/22/793036.html",
        "BriefIntro": "摘要: http://www.smashingmagazine.com/2007/06/20/ajax-javascript-solutions-for-professional-coding 非常好的AJAX资源，喜欢看示例的朋友有福了。如果能够没有障碍地完成这些内容，其AJAX能力基本上可以算是一流了。"
    },
    {
        "Title": "上海激动通信有限公司招聘优秀.NET开发人员",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/18/787530.html",
        "BriefIntro": "摘要: 上海激动通信有限公司（以下简称“激动通信”）是激动集团股份有限公司（以下简称“激动集团”）的全资子公司，公司注册资金1000万元。激动通信是一家主要从事无线增值服务的高新技术企业，公司建立激动网www.megajoy.com，作为无线增值服务的支持平台，激动通信的目标是充分整合各种优势资源，打造全国性休闲、时尚大型娱乐服务平台，为媒体及各行业提供全面互动解决方案，在互联网和无线增值服务领域展现卓越..."
    },
    {
        "Title": "StyledAutoComplete - 支持丰富样式的自动补全",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/12/StyleAutoComplete.html",
        "BriefIntro": "摘要: 几个月前，我扩展了Atlas CTP时期的的AutoCompleteBehavior，到了ASP.NET AJAX正式版之后这个扩展自然就不能用了。其实这段时间内有不少朋友问我该如何做到像Google Suggest那样带丰富样式的自动补全功能，但是由于各种原因，我没有深入地研究它，更别提对它的扩展了。最近手头正好有些时间，也就逼迫自己耐着性子读了读AutoCompleteBehavior的代码，并作了这个扩展。"
    },
    {
        "Title": "BlogEngine 1.0中的编码问题及解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/06/BlogEngine_Encoding_Problem_in_Source_Code.html",
        "BriefIntro": "摘要: 似乎有不少朋友在下在BlogEngine 1.0的源代码之后会发现居然无法正确编译，因为{SiteRoot}\\User Controls\\CommentView.cs里的代码遇到了错误。为什么引号没有封闭？作者怎么会把一个无法编译的版本发布出去呢？其实问题并非那么简单……"
    },
    {
        "Title": "深入JavaScript与.NET Framework中的日期时间（3）：JavaScript中的Date类型（中）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/06/Inside_Date_and_Time_in_JavaScript_and_DotNet_Framework_3.html",
        "BriefIntro": "摘要: 本文详细讲解了JavaScript中Date对象的以下几个方面：\n"
    },
    {
        "Title": "深入JavaScript与.NET Framework中的日期时间（2）：JavaScript中的Date类型（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/06/Inside_Date_and_Time_in_JavaScript_and_DotNet_Framework_2.html",
        "BriefIntro": "摘要: 在JavaScript中处理时间使用的就是Date原生类型了，这也是在使用JavaScript进行开发时最常用的对象之一。本文讲述了关于JavaScript中Date类型的以下部分内容：\n"
    },
    {
        "Title": "分清ASP.NET AJAX中的Extender和Behavior模型",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/04/Extender_model_and_Behavior_model.html",
        "BriefIntro": "摘要: ASP.NET AJAX提出了多种模型，在客户端有Component、Control和Behavior模型，在服务器端有ScirptControl和Extender模型。这些模型各有各的用途，但是请注意非常重要的一点：客户端模型和服务器端模型是相互独立的。我们必须意识到以下三点，才能灵活地使用Extender和Behavior。\n"
    },
    {
        "Title": "离开了博客园一个半月，终于可以回来了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/03/769180.html",
        "BriefIntro": "摘要: 这一个半月中，因为毕业设计和工作方面的原因，我没有办法照顾到自己的技术博客，每天只能简单回答一些问题等等，都没有仔细去看大家发来的示例，也没有自己研究一些问题，在这里先向大家致歉。不过现在差不多结束了，又有时间更新博客了，希望自己能够写出更多更好的东西和大家一起分享。"
    },
    {
        "Title": "深入JavaScript与.NET Framework中的日期时间（1）：基本概念与概述",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/06/03/Inside_Date_and_Time_in_JavaScript_and_DotNet_Framework_1.html",
        "BriefIntro": "摘要: 日期时间是开发过程中最尝使用的数据类型之一，但是很多开发人员在使用过程中忽视了时间日期的一些特性。现在的应用越来越讲究“国际化”和“本地化”，它们的重要特征之一就是一些数据类型的格式或换算，日期时间是其中之一（其余还有货币，数字等等）。在进一步讨论开发中的日期时间问题之前，我们需要先理清有关时间的一些基础概念。对于时间日期来说，最重要的可能就是“时差”问题，主流编程语言中表示日期时间对象都对于这个问题有着足够的支持，不过许多开发人员都会忽视这一点。这就是这片文章中最主要会谈论的问题。虽然大部分的应用可能都不涉及到“全球化”，但是我们还是有充分的理由来搞清楚时间方面的问题。"
    },
    {
        "Title": "有关注册DataItem的一些可能被忽视的事情",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/18/Something_you_probably_missed_about_registering_data_items.html",
        "BriefIntro": "摘要: 在UpdatePanel对页面进行部分刷新时注册一些Data Item是ASP.NET AJAX的特点之一。我们可以在服务器端为某个控件注册一个字符串甚至是一个对象，然后在客户端将将其取回。但是现在我希望向您展示一些您可能会忽视的事情。"
    },
    {
        "Title": "Nikhil更新了UpdateControls组件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/14/713368.html",
        "BriefIntro": "摘要: Nikhil更新了他的UpdateControl包，改进了bug，也添加了一些功能。这部分组件是了解如何基于ASP.NET和ASP.NET AJAX进行开发的不错的例子。在这里推荐一下。:) http://www.nikhilk.net/Entry.aspx?id=155"
    },
    {
        "Title": "Suggest Reading: An Introduction to Reflection-Oriented Programming",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/12/711155.html",
        "BriefIntro": "摘要: http://www.cs.indiana.edu/~jsobel/rop.html"
    },
    {
        "Title": "让UpdatePanel支持文件上传（5）：支持页面重定向的HttpModule",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/12/Let_UpdatePanel_support_file_uploading_The_Module_that_Support_Page_Redirection.html",
        "BriefIntro": "摘要: 在最后，我们还必须编写一个HttpModule来支持异步刷新时页面的重定向。"
    },
    {
        "Title": "让UpdatePanel支持文件上传（4）：数据传输与解析机制",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/11/Let_UpdatePanel_support_file_uploading_The_Mechanism_of_Sending_and_Parsing_Data.html",
        "BriefIntro": "摘要: 现在就要开始整个项目中最有技巧的部分了。如果我们的组件需要在多种浏览器中正常的运行，我们必须好好考虑一下发送和解析数据的方式。如果我们把这部分的机制完全交给ASP.NET AJAX原有的行为来执行，则会遇到问题。"
    },
    {
        "Title": "国外网友对Google抄袭事件的看法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/10/707776.html",
        "BriefIntro": "摘要: 新闻采自国外著名IT社区slashdot 日前，Google拼音输入法涉嫌抄袭搜狗输入法的消息在业内引起了轩然大波。4月9日，Google中国正式就抄袭事件向用户、搜狐公司道歉。国外著名IT社区slashdot发布该消息之后，不少国外网友纷纷发表评论，以下是一些颇具代表性的阵营和不同的观点。  Google违背承诺，输入法没创新  Google这么做非常可悲，此次的抄袭行为违背了自己“不做恶”的承..."
    },
    {
        "Title": "搜狗输入法关于Google侵权的再次声明",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/10/707759.html",
        "BriefIntro": "摘要: 【搜狐IT消息】Google自推出中文输入法一来，引起了业界的一片讨伐之声，网民直指Google盗用搜狗输入法词库。为此，搜狗输入法在4月8日发表声明指责Google盗用词库，随后Google正式发表声明，承认词库包含了非自有数据，并于4月9日在其官方博客正式声明向搜狐道歉。 4月10日，搜狗输入法发表了再次声明，表示欢迎Google的道歉态度，但对Google的严重侵犯知识产权的行为表示不能接受..."
    },
    {
        "Title": "当心异步刷新后的脚本文件加载",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/09/Be_careful_with_loading_script_files_after_an_async_postback.html",
        "BriefIntro": "摘要: 如果第一次异步刷新在加载脚本时发起了另一个异步刷新，第二次异步刷新可能就会不受我们控制地被中断了。"
    },
    {
        "Title": "让UpdatePanel支持文件上传（3）：客户端组件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/06/Let_UpdatePanel_support_file_uploading_Client_Side_Component.html",
        "BriefIntro": "摘要: 我们的UpdatePanelIFrameExecutor继承了WebRequestExecutor，因此需要实现许多方法和属性。但是我们事实上不用完整地实现所有的成员，因为客户端的异步刷信机制只会访问其中的一部分。"
    },
    {
        "Title": "让UpdatePanel支持文件上传（2）：服务器端组件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/05/Let_UpdatePanel_support_file_uploading_Server_Side_Component.html",
        "BriefIntro": "摘要: 我们现在来关注服务器端的组件。目前的主要问题是，我们如何让页面（事实上是ScriptManager控件）认为它接收到的是一个异步的回送？ScriptManager控件会在HTTP请求的Header中查找特定的项，但是我们在向IFrame中POST数据时无法修改Header。所以我们必须使用一个方法来“欺骗”ScriptManager。"
    },
    {
        "Title": "让UpdatePanel支持文件上传（1）：开始",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/04/Let_UpdatePanel_support_file_uploading_Lets_Get_Started.html",
        "BriefIntro": "摘要: UpdatePanel从一开始就无法支持AJAX的文件上传方式。Eilon Lipton写了一篇文章解释了这个问题的原因。文章中提供了两个绕开此问题的方法。不过，我们为什么不使UpdatePanel兼容FileUpload控件（<input type=\"file\" />）呢？如果可以这样，一定能够受需要使用UpdatePanel上传文件的用户欢迎。"
    },
    {
        "Title": "比尔・盖茨下周访华",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/03/698983.html",
        "BriefIntro": "摘要: ChinaByte消息： 此消息已得到微软方面的确认，该公司发言人，目前微软正在为比尔・盖茨的到来做着积极的准备，但目前他在中国的行程还没有最后确定，一些活动正在与各部门进行沟通，下周将最后敲定日程并对外公布。可以肯定的是,比尔・盖茨此行目的之一是为参加4月20日举行的博鳌论坛。 按照常规，比尔・盖茨中国行一般会在“政府公关、推行正版软件、参观研发中心、宣布一些合作或投资项目”等领域有所作为。  ..."
    },
    {
        "Title": "新建了一个英文Blog",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/04/03/698945.html",
        "BriefIntro": "摘要: http://blog.jeffzon.net or http://www.jeffzon.net/blog。 开始blogging in English了，刚写了让UpdatePanel支持文件上传的几篇，以后会两边同时更新，不过我在想，这样会不会有些浪费时间呢？ E文到写时方恨少，写英文每重新看一遍都会找到语法或拼写的错误，但愿以后会好起来。"
    },
    {
        "Title": "大家帮忙推荐一个blog系统吧",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/29/693405.html",
        "BriefIntro": "摘要: 基于ASP.NET 2.0的blog系统，一个人用就够了。"
    },
    {
        "Title": "UpdatePanel的妙用：Incremental Content",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/29/Incremental_Content.html",
        "BriefIntro": "摘要: Incremental Content是我随意取的名字，我有时候会希望，把一些常见的场景，总结出ASP.NET AJAX一些比较固定的使用模式。Incremental Content是我为现在这个“模式”取的名字。这个模式的作用，就是使用UpdatePanel来不断地在页面上增加内容。想到这个使用方式的原因，是因为在中午与Bing对UpdatePanel的一些问题进行了讨论。他谈到，使用UpdatePanel，会造成过多的数据传输上的浪费。例如博客园的回复，事实上要更新的只是新增的内容，而并不需要整个评论区进行刷新。这篇文章谈到的Incremental Content就是为了解决这类问题而产生的。建议dudu在合适的时候修改一下添加评论的代码。:)\n"
    },
    {
        "Title": "SwitchPartManager：在UpdatePanel中灵活地切换不同用户控件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/29/SwitchPartManager.html",
        "BriefIntro": "摘要: 这是一个很常见的使用场景，尤其是出现了UpdatePanel之后：页面中有一排菜单，点击菜单中的每一项，都会使某个UpdatePanel中出现不同的控制面板。在开发时，往往会将每个的控制面板写成不同的用户控件，点击菜单时事实上就是在UpdatePanel中放入不同的用户控件。如果要开发这样的功能，从理论上来说并不困难，但是如果要能够在控件之间灵活切换，甚至要从控件A的某个操作中切换到控件B，可能就需要增加控件之间的耦合度了。因此，如何控制这样的切换似乎需要细细考虑一下。"
    },
    {
        "Title": "UpdatePanel终于可以上传文件了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/26/AjaxUploadHelper_Prototype.html",
        "BriefIntro": "摘要: UpdatePanel终于可以上传文件了！我们要做的，只是在页面上添加一个控件而已。"
    },
    {
        "Title": "走可爱路线的FireFox……",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/26/688886.html",
        "BriefIntro": ""
    },
    {
        "Title": "ModalUpdateProgress控件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/26/ModalUpdatePanel_Control.html",
        "BriefIntro": "摘要: 在之前的一篇文章中，我谈了如何在页面中“轻量级地”实现了模态的UpdateProgress。这次，我带来了一个“重量级”的实现：ModalUpdateProgress控件。"
    },
    {
        "Title": "ASP.NET AJAX官方资源大量更新",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/23/685352.html",
        "BriefIntro": "摘要: 这次更新最主要的可能就是"
    },
    {
        "Title": "第17届Jolt Award终于出炉了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/23/Jolt_2007.html",
        "BriefIntro": "摘要: 第17届Jolt Award终于"
    },
    {
        "Title": "Tip：Modal UpdateProgress的轻量级解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/22/LightWeight_ModalUpdateProgress_Solution.html",
        "BriefIntro": "摘要: 又被问了这样一个问题：UpdateProgress如何像ModalPopupExtender那样的效果呢？类似的问题有：如何在UpdatePanel里使用ModalPopupExtender呢？我这次仔细想了想，感觉问题并不那么简单。"
    },
    {
        "Title": "微软公司高调宣布加入AJAX联盟",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/21/683158.html",
        "BriefIntro": "摘要: 微软公司已经宣布加入OpenAjax联盟，一个专注于XML和JavaScript技术开发的团体，微软称将努力帮助团体成员改进和发展AJAX这一具有前景的互联网技术，为Web开发者提供更好的技术支持以及为各个平台的用户提供更好的统一浏览特性。联盟同时公布了30个新的合作伙伴，这样一来AJAX联盟的成员数量达到了72个，同时提出了新的目标--加快AJAX的运行效率，并减少Web2。0应用的时间和成本。..."
    },
    {
        "Title": "著名编程语言Fortran创始人巴库斯辞世",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/21/682102.html",
        "BriefIntro": "摘要: 新浪科技讯 北京时间3月20日消息，据《纽约时报》报道，Fortran创始人约翰・巴库斯(John W. Backus)上周六在美国俄勒冈州的家中去世，享年82岁。Fortran由巴库斯领导的IBM团队开发完成，是第一门广泛应用的程序语言。从某种意义上讲，Fortran的出现打开了现代计算的大门。  巴库斯的女儿卡伦・巴库斯(Karen Backus)公布了父亲去世的消息。著名计算机历史学家简・李..."
    },
    {
        "Title": "Apollo 1.0 预览版闪亮登场",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/20/680509.html",
        "BriefIntro": "摘要: 我的一个朋友William Cui的一直在关注RIA方面的技术发展，这是他刚写的一篇文章。 Apollo 1.0 预览版闪亮登场"
    },
    {
        "Title": "Tip：自定义UpdatePanelTrigger",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/19/Customize_UpdatePanel_Trigger.html",
        "BriefIntro": "摘要: 如果需要的话，您不妨在开发过程中自定义一个UpdatePanel触发器吧。"
    },
    {
        "Title": "重新定义了左侧边栏",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/18/678696.html",
        "BriefIntro": "摘要: 其实还是在“公告”里写script的方法。然后向id为leftmenu的div里添加dom元素，一开始总是出现以后立马消失，百思不得其解。后来分析了源代码才发现，这个版式很特别，左侧边栏的内容原本都添加在页面下方一个id为lefttemp的div中（display自然为none），最后再动用js将其添加到leftmenu里。于是我也向lefttemp中添加dom元素，就没有问题了。这也是为什么左侧..."
    },
    {
        "Title": "Animation全接触（2）：ParentAnimation模型",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/16/Animation_Complete_2.html",
        "BriefIntro": "摘要: ParentAnimation，顾名思义，是一组Animation的父亲，是所有需要包含其它Animation的父类，我们熟悉的ParallelAnimation（并行动画）和SequenceAnimation（顺序动画）都是它的子类。从这个概念上来说，这也是个非常经典的Composit模式应用。"
    },
    {
        "Title": "昨晚（北京时间）和一个参加MVP峰会的朋友聊天后整理的信息",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/15/676282.html",
        "BriefIntro": "摘要: 大家可以看着玩玩，呵呵。"
    },
    {
        "Title": "Animation全接触（1）：Animation模型初步",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/14/Animation_Complete_1.html",
        "BriefIntro": "摘要: 初步了解Animation模型。"
    },
    {
        "Title": "Animation全接触（前言）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/14/Animation_Complete_Preface.html",
        "BriefIntro": "摘要: 关于AjaxControlToolkit中的Animation的话题，一直留在我的“写作队列”中。但是由于最近事情较多，一直没有开始写这个系列的文章。现在忽然意识到，如果不趁这方面的文章还没有大量出现之前推出的话，我们又要落后于那些外国人了（其实外国人也不可能知道我写了什么，可惜我会知道外国人写的东西，所以我是在“自爽”）。在这个系列中，我将对AjaxControlToolkit中的Animati..."
    },
    {
        "Title": "第一次MSDN Webcast自我总结",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/13/673552.html",
        "BriefIntro": "摘要: 今天下午进行了第一次的MSDN Webcast讲座，自我评价并不理想。看了一些朋友的建议，我临时决定将示例的形式改变了一下，从“阅读代码”，变成的“实现功能”，也就是说把所有的示例代码手动输入，而不是复制代码片断或者是直接把实现好的示例进行代码展示和分析。这种方式给我的讲座带来了问题。由于写了不少JavaScript代码，因此出现了数个拼写错误，再加上JavaScript的错误提示是出了名的不清晰..."
    },
    {
        "Title": "MSDN Webcast“深入浅出ASP.NET AJAX系列”预告及反馈",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/12/ASP_NET_AJAX_MSDN_Webcast_Feedback.html",
        "BriefIntro": "摘要: 我为MSDN Webcast准备了一个《深入浅出ASP.NET AJAX系列》，共有十多次课程，希望能够为大家系统的讲解一下如何使用ASP.NET AJAX框架进行开发。在这个系列中，我会尽可能的从“使用”入手，然后对于ASP.NET AJAX框架进行一定程度的深入讲解，使大家能够更自由地使用ASP.NET AJAX框架，并且能够自己着手解决一些使用中的问题。简单地说，这个系列中最着重的就是尽可能的“授人以渔”。希望大家对我的这个系列多提意见和建议，并回复在这篇文章中，我需要您的反馈来改进我的表现。"
    },
    {
        "Title": "Tip：“Form_Load时添加的AsyncPostBackTrigger失效”问题分析及解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/08/Dynamic_Trigger_Problem.html",
        "BriefIntro": "摘要: 　　最近时间很少，而且总觉得没有什么题材可写。今天无意中看到了Aldebaran's Home提出的一个疑问，为什么在Form_Load方法中动态添加的AsyncPostBackTrigger会在经过一次异步刷新后就失效，导致第二次提交变成了普通的提交。我尝试了一下，果不其然。对ASP.NET AJAX程序集源码的分析之后，我得出了问题原因和解决方案，在这里和大家共享一下。"
    },
    {
        "Title": "ASP.NET AJAX Control Toolkit Release 10301",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/03/03/662394.html",
        "BriefIntro": "摘要: 与前几次相比，这次发布属于一个大的调整。"
    },
    {
        "Title": "谈我的“先做人，再做技术人员，最后做程序员”",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/26/657307.html",
        "BriefIntro": "摘要: 谭大哥的一片文章中谈到了我的这句话，不过他认为，做人的难度实在比做程序员高很多。其实我说的这句话，原出自傅雷先生至傅聪《家书》中云：“先做艺术家，再作音乐家，最后才是钢琴家”。历来有大成就的艺术家，其高风亮节也为人所称颂，其传世之作也正所谓“书如其人”。我使用把“程序员”作为一种真正的职业来看待，一个只受过半年一年培训的人，在我看来根本不能称之为程序员，我对于这种泛滥的程序员状态深恶痛绝……真正的..."
    },
    {
        "Title": "图灵奖40年来首次授予女性",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/24/655082.html",
        "BriefIntro": "摘要: 本年度的图灵奖（Turing Award）授予了75岁的Frances E. Allen，以对其在编译器优化理论和实践方面做出的开创性贡献予以充分肯定。Allen是该奖项创立40年来的第一位女性得主。她在密歇根大学获得数学硕士学位后，于1957年加盟了IBM公司。她之前的工作还包括为美国国家安全局编写智能分析软件，以及为IBM的蓝色基因（Blue Gene）超级计算机设计软件等。2002年退休后，..."
    },
    {
        "Title": "Sys.StringBuilder里的Bug",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/13/Bug_of_Sys_StringBuilder.html",
        "BriefIntro": "摘要: Sys.StringBuilder出现了这样的Bug，他们一定没有做好Code Review。"
    },
    {
        "Title": "Enterprise Library 2.0 Test Guide下载",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/12/647792.html",
        "BriefIntro": "摘要: 在PnP小组推出Enterprise Library 3.0之前，他们又发布了一个“Enterprise Library Test Guide”。这是PnP小组测试Enterprise Library的构思过程和实际使用方法的整理，应该是份相当重要的参考。http://www.microsoft.com/downloads/details.aspx?familyid=9ad254e9-e1f8-4..."
    },
    {
        "Title": "似乎离新的.NET Framework还很远",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/09/645452.html",
        "BriefIntro": "摘要: http://blogs.msdn.com/ericnel/archive/2007/02/08/visual-studio-orcas-will-work-with-net-framework-2-0.aspxJust come off the phone chatting to Richard Costall, who besides his real job, runs the rather..."
    },
    {
        "Title": "迅雷推出“迅雷找到”服务",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/08/644895.html",
        "BriefIntro": "摘要: 迅雷推出“迅雷找到”服务，该服务：一、迅雷找到是迅雷资源搜索的一部分，一个以财富积分进行悬赏的社区平台；二、在这里您可以通过发起悬赏，让大家帮助寻找获得你想要的资源.访问：迅雷找到http://zd.xunlei.com/"
    },
    {
        "Title": "过生日了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/08/644175.html",
        "BriefIntro": "摘要: 2007年2月8日是个值得纪念的日子，嗯。"
    },
    {
        "Title": "鸡肋烹制出的美味――真正可调试的ASP.NET AJAX",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/06/ASP_NET_AJAX_Debugging_Project.html",
        "BriefIntro": "摘要: ASP.NET AJAX的源代码的确发布了，并且提供了pdb文件，也就是说，我们现在可以用它来调试了。不知道各位朋友们有没有真的用它跟踪到代码中去，至少我用下来之后非常的不满意。官方给出了源代码，我们为什么不设法把它恢复成C#工程呢？于是我新建了一个C# Class Library，把源代码复制到工程中去。然后通过比较编译错误、运行错误以及使用.NET Reflector查看ASP.NET AJAX程序集，一点点补充丢失的资源和代码，费了九牛二虎之力总算比较完美地恢复了ASP.NET AJAX的程序集。"
    },
    {
        "Title": "微软对联",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/05/640951.html",
        "BriefIntro": "摘要: 微软对联是由微软亚洲研究院自然语言组研究开发的计算机自动对联系统。首先用户给定上联，然后系统自动提供若干下联供用户选择，用户可以通过交互手段优选字词来生成满意的下联；当确定一副对联后还可以生成若干四字横批供用户参考。目前本系统可处理八字以下的对联，但是不支持嵌字联、拆字联、音韵联。http://couplet.msra.cn/newcoupletDemo_web_high.swf"
    },
    {
        "Title": "挣脱浏览器的束缚（7） - CrossSubDomainExecutor",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/05/Break_the_Browsers_Restrictions_7.html",
        "BriefIntro": "摘要: 在上次的文章中，我们已经提到了一种能够跨子域名进行AJAX请求的方法。我们现在就来实现一个对开发人员透明的实现，它会自动判断这个请求是否是跨子域名，如果不是，则使用传统的方法发出AJAX请求，反之则使用我们的方式。"
    },
    {
        "Title": "阳奉阴违（转载）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/04/639779.html",
        "BriefIntro": "摘要: 这个词不是好词，大家都这么看，但现在生活里却经常要照它做，表面上应付一下，表示一下，然后再怎么做就随便；如果你不表示这一下，那就怎么也不行。　　MSN和Yahoo就已经理解了这个问题，并且早就照此实行了。MSN在2005年成立了合资公司，合资对象还很有背景，这就不但是表示，而且表示得很到位。Yahoo怎么注册的不知道，但从它在邮箱事件上的作法就知道，它肯定比MSN做得还好。百度其实也是外企，在国内..."
    },
    {
        "Title": "UpdatePanel与ASP.NET Page的缓存",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/04/UpdatePanel_and_ASP_NET_Cache.html",
        "BriefIntro": "摘要: UpdatePanel的功能大家一定都非常熟悉了。无论是官方还是社区里热心推广ASP.NET AJAX的朋友，都会对于UpdatePanel的使用进行大量说明与展示。但是在这些简单的的示例似乎都遗漏了一个非常重要的问题，这个问题会直接导致UpdatePanel无法正确使用。\n\n　　这个问题就是ASP.NET Page的缓存。"
    },
    {
        "Title": "Jim Gray is lost at sea",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/02/638445.html",
        "BriefIntro": "摘要: http://blogs.ittoolbox.com/database/talk/archives/jim-gray-is-lost-at-sea-14227According to an article in the San Francisco Chronicle, Jim Gray sailed out on a day trip on his 40' sailboat and failed ..."
    },
    {
        "Title": "ASP.NET AJAX正式版的文档发布了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/02/637882.html",
        "BriefIntro": "摘要: ASP.NET AJAX 1.0的官方文档在不久之前发布了，它包括了Sample，Tutorial，并且为API补充了示例（其实没有多少更新）。关键的是，现在的官方文档已经提供打包下载了，不少朋友（也包括我）就可以收起WebZip，光明正大地在本地使用这份文档了。相信官方会对ASP.NET AJAX会有更多的支持。另外再记录一条信息，这算是ASP.NET AJAX正式版遗漏的Bug之一吧，Sys...."
    },
    {
        "Title": "挣脱浏览器的束缚（6） - AJAX也跨域名",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/02/Break_the_Browsers_Restrictions_6.html",
        "BriefIntro": "摘要: 事情的经过是这样的，还是那个个人门户网站。其中有个功能就是RSS订阅，每个订阅作为一个模块出现在页面上。如果一个用户订阅了比较多的RSS，则在打开页面时所有的RSS模块就会开始加载，这时候可能就会需要十几秒甚至更长的时间才能加载完毕。这时，如果用户需要作别的AJAX操作――比如保存页面设置――那么长时间的等待就不可避免了，谁让浏览器对于相同域名只能同时存在两个连接呢？不过这可不是一个好的用户体验，那么我们需要怎么做呢？"
    },
    {
        "Title": "信息安全被2006闪了一下腰",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/01/637593.html",
        "BriefIntro": "摘要: 这一年，距离中国网络安全开山已有十多年的光景。这一年，看似波澜不惊，除去厂商的起承转合、产品的发布更新、算不上标志性的若干安全事件外，很难有一些被人记住的片断。然而，历史总是喜欢在不经意间埋下伏笔。当2006年成为历史的那一刹那，中国网络安全界的未来就似乎已注定，带着有点宿命的无奈。2006年，中国网络安全企业加大了发展力度，整个网络安全产品市场因而得到了快速的发展。因此，有人说2006年是中国信..."
    },
    {
        "Title": "WPF/E 2007年2月CTP发布了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/02/01/636957.html",
        "BriefIntro": "摘要: WPF/E的06年12月CTP已经过期了，如果使用旧的Runtime打开新的WPF/E应用程序则会弹出如下的对话框。 如果没有将WPF/E Runtime更新到07年2月CTP，可以在这里下载到Windows下的Runtime，这里可以下载Mac下的Runtime。Channel 9上的示例也已经更新为07年2月CTP，似乎这次升级最大的改变就是host.js文件变了，可以在这里下载到这个文件的最..."
    },
    {
        "Title": "编写组件，使用JavaScript更新UpdatePanel",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/31/Update_the_UpdatePanels_by_JS.html",
        "BriefIntro": "摘要: 如果需要使用JavaScript更新UpdatePanel，以前往往会使用JavaScript来模拟Trigger的触发。我们往往会将一个按钮设为某个UpdatePanel的Trigger，然后在客户端模拟它的点击，使UpdatePanel进行更新。但是这样的做法实在太麻烦了些，也相当的不优雅。现在我们就来编写一个组件解决这个问题。"
    },
    {
        "Title": "微软：两大法宝让HD Photo取代JPEG",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/30/634078.html",
        "BriefIntro": "摘要: 虽然Windows Vista的很多功能都在开发过程中被精简掉了，但她带来的革新委实不少。在JPEG已经“横行天下”的今天，微软则在Vista中提出了一种新的图片格式“HD Photo”(原Windows Media Photo)，试图利用Vista建立自己的标准。2006年上半年，微软提出了Windows Media Photo图形格式，并在11月..."
    },
    {
        "Title": "Paint.NET 3.0正式版发布了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/28/632297.html",
        "BriefIntro": "摘要: Paint.NET是一个图像和照片处理软件，它由华盛顿州立大学的学生开发和维护并由微软公司提供项目指导，早期定位于MS Paint的免费替代软件，现在逐渐发展为一个功能强大且易用的的图像和照片处理软件，支持图层，无限制的历史记录，特效，和许多实用工具，并且开放源代码和完全免费，界面看起来有点像Photoshop。该软件的开发语言是C#。现在这个软件的3.0版本已经发布了，并且支持包括简体中文内的多..."
    },
    {
        "Title": "城市吧全面升级，首个覆盖上海北京全市范围的实景地图",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/27/631995.html",
        "BriefIntro": "摘要: http://www.city8.com/二维地图操作：解决地图中眼睛不能双击的问题，双击要查看的位置即可显示该处实景增加全屏窗口查看二维地图的功能记忆用户操作地图的比例尺实景浏览和操作：搜索结果自动对准到目标建筑，搜索准确率大大提高解决了TT和Maxthon浏览器中全景视角不对的问题实景分享：解决无法生成缩略图问题，用户可通过qq/msn/blog/bbs随时分享实景支持键盘快捷键, 键盘上下箭..."
    },
    {
        "Title": "挣脱浏览器的束缚（5） - 哭笑不得的IE Bug",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/27/Break_the_Browsers_Restrictions_5.html",
        "BriefIntro": "摘要: 还记得《ASP.NET AJAX Under the Hood Secrets》吗？这是我在自己的Blog上推荐过的唯一一篇文章（不过更可能是一时兴起）。在这片文章里，Omar Al Zabir提出了他在使用ASP.NET AJAX中的一些经验。其中提到的一点就是：Browsers do not respond when more than two calls are in queue。简单的说，就是在IE中，如果同时建立了超过2两个连接在“连接状态”中，但是没有连接成功（连接成功之后就没有问题了，即使在传输数据），浏览器会停止对其他操作的响应，例如点击超级链接进行页面跳转，直到除了正在尝试的两个连接就没有其他连接时，浏览器才会重新响应用户操作。出现这个问题一般需要3个条件：\n"
    },
    {
        "Title": "挣脱浏览器的束缚（4） - 王道！动态添加script元素",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/25/Break_the_Browsers_Restrictions_4.html",
        "BriefIntro": "摘要: 我们已经知道，脚本文件的并行下载能够提高页面的加载速度。但是目前还有一个急需解决的问题，那就是对于FireFox浏览器的优化。在我们之前使用的优化方法，无论是简单实用的document.write还是食之无味的defer属性，FireFox浏览器都对此置若罔闻。不过FireFox也不是绝对地“冥顽不灵”，开发人员还是有方法对它进行优化的。"
    },
    {
        "Title": "ASP.NET AJAX正式版带来的Validator问题及解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/24/Validators_in_ASP_NET_AJAX_Finals.html",
        "BriefIntro": "摘要: 升级到ASP.NET AJAX正式版之后，一般来说重新编译不会有什么问题，不用做什么修改，这是个好消息。不过在执行时就会出现问题了。因为在正式版的程序集中，删除了兼容UpdatePanel的Validator那些类，因此TagMapping时就无法找到需要的类了。"
    },
    {
        "Title": "我是个缺少市场头脑的技术人员",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/23/628077.html",
        "BriefIntro": "摘要: 需要想想自己该如何做，如何做一个有市场头脑的技术人员。"
    },
    {
        "Title": "ScriptManager的ResolveScriptReference事件的重要作用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/23/The_Importance_of_ResolveScriptReference.html",
        "BriefIntro": "摘要: 合理使用，支撑一个专业的详细的脚本库也不是件困难的事情。"
    },
    {
        "Title": "Jolt Awards提名已经出来了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/23/627575.html",
        "BriefIntro": "摘要: 其实按照Schedule已经出来一周了吧：SCHEDULENominations open October 2006Nominations close December 15, 2006Finalists announced January 15, 2007Winners announced at SD West 2007 on March 21, 2007Jolt Awards年年关注，现在也只..."
    },
    {
        "Title": "挣脱浏览器的束缚（3） - 两个连接还不够“并行”",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/22/Break_the_Browsers_Restrictions_3.html",
        "BriefIntro": "摘要: 谈谈优化难度：比较document.write与defer、突破两个连接的限制"
    },
    {
        "Title": "挣脱浏览器的束缚（2） - 别让脚本引入坏了事",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/20/Break_the_Browsers_Restrictions_2.html",
        "BriefIntro": "摘要: 现在哪里还找得到不引入JavaScript脚本文件的Web应用？使用脚本文件的好处多多，其中最重要的可能就是提供缓存能力了。使用脚本文件之后再加上缓存，可以大大降低数据传输量，提高页面打开的速度。不过脚本文件的引入也不是简单得不值一提，我们完全有能力来优化它。"
    },
    {
        "Title": "挣脱浏览器的束缚（1） - 前言",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/18/Break_the_Browsers_Restrictions_1.html",
        "BriefIntro": "摘要: 最近在为某个人门户站点作优化。\n"
    },
    {
        "Title": "其实编程是一件非常令人愉快的事情",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/15/620892.html",
        "BriefIntro": "摘要: 如果没有压力，只是把一个项目当作一件艺术品来维护的话。所以我喜欢看一些设计、架构、规范、重构的书和资料，因为它们能够真真切切地将项目的各个方便变得“漂亮”、“精致”。但是如果时间紧，赶进度的话，项目的每个角落都散发着不完美的气息，就只能让人唉声叹气了。真正的程序员应该都是艺术家，真正的项目应该都是艺术品。艺术家从自己创作的艺术品中获得自豪感，艺术品因其完美而产生无与伦比的价值。"
    },
    {
        "Title": "Web Client Software Factory发布了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/13/619811.html",
        "BriefIntro": "摘要: 真是一件神奇的事情。Eugenio Pace在他的Blog上公布了这则好消息，在Web Client Software Factory RC发布仅仅4、5天之后，Web Client Software Factory正式版就发布了。园子里曾经有朋友关注过这个项目，例如TerryLee，也包括我。这次发布让我们也算是真正盼到了这个东西。这似乎又是一个非常值得关注的项目，可惜时间有限，否则真想一个都不..."
    },
    {
        "Title": "IE Dev Toolbar Beta 3 Released",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2007/01/10/616624.html",
        "BriefIntro": "摘要: IE Dev Toolbar不久前发布了Beta 3，新增（或改变）的功能有：\n\n1、工具栏的打开方式：\n2、最常用的操作被列举为单独的按钮：\n3、Style Tracer：\n4、View Source："
    },
    {
        "Title": "在2006年的最后一天，我做出了一个决定",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/31/Decision_at_the_Last_Day_of_2006.html",
        "BriefIntro": "摘要: 在2006年的最后一天，我做出了一个决定。今天我决定离开现在的单位――Windows Live China――寻求更好的发展。"
    },
    {
        "Title": "Tip：使用Extender的ResolveControlID事件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/31/ResolveControlID_Event.html",
        "BriefIntro": "摘要: 不知道大家在使用ASP.NET AJAX Control Toolkit里的各个Extender控件时，有没有接触过ResolveControlID事件？这个事件在官方也只用了很少的笔墨来描述。的确，这个事件不太常用，看看ASP.NET AJAX的演示站点，根本没有使用过ResolveControlID事件。本文简单描述了ResolveControlID事件的作用以及使用方式。"
    },
    {
        "Title": "Tips：AccordionExtender中的DataTable数据绑定/点击特定元素出发折叠效果",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/29/Accordion_Data_Binding.html",
        "BriefIntro": "摘要: ASP.NET AJAX Control Toolkit中实现地最复杂的Extender估计就是AccordionExtender了。因为它对于DOM元素结构的要求比较高，所以它还为此实现了AccordionPane控件，用来生成符合AccordionBehavior的DOM结构。但是在使用时，似乎总是会遇到一些限制，这里将对于两个问题介绍一下简单的解决方案。\n1、使用DataTable进行数据绑定\n2、点击指定元素产生折叠效果"
    },
    {
        "Title": "可能是最漂亮的非静态Page Method解决方案",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/28/Best_Nonstatic_Page_Method_Implementation.html",
        "BriefIntro": "摘要: 在我前一片文章《浅谈实例Page Method到静态Page Method的移植》中，我提到了两种属于work around的解决方案，的确有效，如果可以的话我也建议尽可能地改成那样，尤其是第一种“在客户端获得参数信息”的做法，性能很高，值得推荐。不过从“技术”方面来考虑，这两个做法都不如现在这种来得漂亮。我尝试着实现了一个HttpModule，只要使用了它就能轻松使用原来的“非静态Page Method”了，这几乎完全解决了ASP.NET AJAX中无法使用非静态Page Method的问题，CTP时期程序的移植也变得再容易不过。"
    },
    {
        "Title": "不复杂，但是很有趣的JavaScript代码",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/28/605547.html",
        "BriefIntro": "摘要: 找个图片比较多的页面，把下面的代码粘贴到地址栏按回车就可以看到效果。:)**************************javascript:R=0; x1=.1; y1=.05; x2=.25; y2=.24; x3=1.6; y3=.24; x4=300; y4=200; x5=300; y5=200; DI=document.images; DIL=DI.length; function..."
    },
    {
        "Title": "UpdatePanel与UrlRewrite",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/27/UpdatePanel_with_Url_Rewrite.html",
        "BriefIntro": "摘要: 今天被问及一个UpdatePanel与Url Rewrite结合时的问题，研究之后得出解决方案，在此和大家分享一下。"
    },
    {
        "Title": "浅谈实例Page Method到静态Page Method的移植",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/26/Page_Methods.html",
        "BriefIntro": "摘要: 最近被问及Page Method的问题比较多，主要还是如何从Atlas CTP中的非静态Page Method转向Beta或RC中的静态Page Method时所遇到的问题。现在我来谈一下在这方面的一些看法，也希望大家能和我一起探讨一下。"
    },
    {
        "Title": "推荐一个站点：http://www.msdewey.com/",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/25/602919.html",
        "BriefIntro": "摘要: http://www.msdewey.com/十分“人性化”的搜索引擎，根据你的搜索内容，会有不同的有趣应答。"
    },
    {
        "Title": "WPF/E SDK更新",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/25/602559.html",
        "BriefIntro": "摘要: 前天WPF/E SDK同时在WPF/E Dev Center和MSDN Library更新了。现在WPF/E SDK包含以下内容： 更新的SDK文档 更新的Quick Start VS 2005 SP1的模板支持 \"WPF/E\" (codename) Software Development Kit (SDK) Community Technology Preview (Dec 2006)MSDN..."
    },
    {
        "Title": "扩展JavaScript的时候，千万要保留其原来的所有功能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/24/601901.html",
        "BriefIntro": "摘要: 扩展JavaScript的时候，千万要保留其原来的所有功能，因为不知道别人的代码是否会用到这些。而且一般来说，为了写出兼容更多JS框架的代码，最保险的方法就是用JS的原生功能。然而在这个问题上，这次ASP.NET AJAX RC栽跟头了。"
    },
    {
        "Title": "现在的媒体时兴“毁人不倦”？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/23/601063.html",
        "BriefIntro": "摘要: 从“吴莹莹”同学到“王小云”教授。吴莹莹也只是个普通人，接触ACM比较频繁，被一个叫做Top Coder的公司捧了一下。其实整件事我倒没有看出她有什么问题，问题都在于北师大和媒体的“捧神”，以及Top Coder的炒作――Top Coder也承认了使用大学生是为了出名，北京办事处就“吴”一个员工――现在..."
    },
    {
        "Title": "WPF/E CTP Quick Start - 第十一部分：示例控件（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/21/WPFE_CTP_Quick_Start_Part_11.html",
        "BriefIntro": "摘要: 这片文档包含了几个例子，演示了如何使用WPF/E来创建交互式的控件。这篇文档包含了如下部分：\n\n“超级链接”示例 \n“按钮”示例 \n“滚动条”示例  \n下面该做什么呢？"
    },
    {
        "Title": "ASP.NET AJAX RC Tip：页面中无UpdatePanel时UpdateProgress创建出错问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/20/597416.html",
        "BriefIntro": "摘要: 安装ASP.NET AJAX RC之后，某些页面总是在创建UpdateProgress时出现脚本错误。刚才简单看了一下System.Web.Extensions.dll中的相关实现，得出了一个解决方案，在这里简单地说一下。"
    },
    {
        "Title": "ASP.NET AJAX RC的Script文件引入方式又有了改变",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/18/596057.html",
        "BriefIntro": "摘要: 不知道朋友们有没有发现，ASP.NET AJAX RC中Script文件的引入方式有发生了改变。 在ScriptManager中使用ScriptReference引用一个脚本文件时，回归了使用<script />，而不是Sys.Application.queueScriptReference方法，其结果就是这时引入的脚本文件不需要之前的Sys.Application.notifyScr..."
    },
    {
        "Title": "WPF/E CTP Quick Start - 第十部分：脚本和鼠标事件（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/18/WPFE_CTP_Quick_Start_Part_10.html",
        "BriefIntro": "摘要: WPF/E支持使用JavaScript进行编程，能够使您为WPF/E内容增加交互性。这篇文档包含了如下部分：\n\n脚本与事件  \n设置属性  \n设置附加属性  \n公有鼠标事件  \n为对象命名并重新获取它们  \n动态创建WPF/E对象  \n交互地控制动画  \n下面该做什么呢？"
    },
    {
        "Title": "最近的精神状态不太好",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/15/592778.html",
        "BriefIntro": "摘要: 轻微的感冒一直好不了。这几天睡公司比较多，躺着睡不着，趴着不舒服。工作时打不起精神。容易分心，脑子一会儿就想到别处去了，但是回过神来后，刚才在想的内容已经想不起来了。直接导致工作效率下降。"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第九部分：动画（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/14/WPFE_CTP_Quick_Start_Part_9.html",
        "BriefIntro": "摘要: WPF/E能够让您使用标记来定义动画。这篇QuickStart介绍了WPF/E的动画特性，并且带领您创建您的第一个WPF/E动画。这篇QuickStart包含了如下部分：\n\n演练：为一个对象添加动画效果\n其它类型的动画 \nTimeline的属性 \n指定动画变换的值 \n在同一个对象上添加多个动画 \n下面该做什么呢？"
    },
    {
        "Title": "讲座展示：TechEd Europe DEV 411 - AJAX Patterns with ASP.NET AJAX（3）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/13/Lecture__TechEd_Europe_DEV411_3.html",
        "BriefIntro": "摘要: 这次我选择的讲座内容，是最近在TechEd 2006 Europe中Andre Snanbria和Jeff Prosise的讲座“AJAX Pattern with ASP.NET AJAX”。Jeff Prosise是Wintellect的Co-Founder，Andre Sanabria是ASP.NET AJAX Team的Lead Program Manager。这次讲座的主要内容是讲述了使用ASP.NET AJAX开发AJAX应用的最佳实践，在这次讲座里，会对建立轻量级的客户端控件的方法进行深入，讲述了如何优化脚本代码，并提出了如何避免AJAX开发中常见的问题。本篇文章是这次讲座展示的第三篇，使用了一个例子来观察UpdatePanel的工作方式，并通过几个步骤对这个例子进行优化。"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第八部分：媒体（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/12/WPFE_CTP_Quick_Start_Part_8.html",
        "BriefIntro": "摘要: WPF/E提供了MediaElement对象，可以让您在页面中播放WMV（Windows Media Video）和WMA（Windows Media Audio）文件。这篇文档包含了以下部分：\n\n在页面中添加媒体信息 \n有用的MediaElement属性 \n交互式地控制媒体的播放  \n下面该做什么呢？"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第七部分：文本（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/12/WPFE_CTP_Quick_Start_Part_7.html",
        "BriefIntro": "摘要: TextBlock元素能使您在WPF/E内容中添加文本。这篇文档描述了使用TextBlock元素的方式。这篇文档包含了以下部分：\n\nTextBlock元素  \n常用TextBlock属性  \nRun元素  \n指定多种字体  \n下面该做什么呢？"
    },
    {
        "Title": "The Problem with Programming（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/11/The_Problem_with_Programming.html",
        "BriefIntro": "摘要: 这是一次访谈。访谈的对象是大名鼎鼎的Bjarne Stroustrup，“C++之父”的称号注定他永远是大师。这次他在接受了Technology Review的采访，对于软件开发的目前状况谈了他的看法，指出了不少问题。那么这些问题是否真的如他所述？按照我个人的习惯，我始终把对于大师的“尊敬”和对于其言论的“吸收”相分离，我们不妨围绕着这次Bjarne Stroustrup的谈话内容，展开我们的讨论吧。"
    },
    {
        "Title": "SQL Server - Best Practices",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/11/588422.html",
        "BriefIntro": "摘要: http://www.microsoft.com/technet/prodtechnol/sql/bestpractice/default.mspx"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第六部分：图像（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/10/WPFE_CTP_Quick_Start_Part_6.html",
        "BriefIntro": "摘要: Image元素能使您在WPF/E中显示位图信息。这篇文档包含了以下部分：\n\nImage元素 \nStretch属性 \n使用位图的其它方法 \n下面该做什么呢？\n"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第五部分：公有图形属性（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/10/WPFE_CTP_Quick_Start_Part_5.html",
        "BriefIntro": "摘要: 一些属性能够被应用在所有的WPF/E的UIElement对象上：Canvas，shapes和TextBlock。这篇文档描述了这些对象所具有的公有图形属性。这篇文档包含了以下部分：\n\nOpacity属性 \nOpacityMask属性 \nClip属性 \nRenderTransform属性 \n下面该做什么呢？"
    },
    {
        "Title": "另一个开发WPF/E用的Template，无需Web Application Project",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/10/587701.html",
        "BriefIntro": "摘要: 官方的WPF/E Template需要基于Web Application Project，不过其实安装后也就两个JS文件，一个Default.html和一个Plugin.xaml文件，何必要Web Application Project？再者基于文件加的Web Site其实也还是不错的。因此John Rayner把这些文件给剥离了出来，制作了一个再简单不过Project Template。具体信息..."
    },
    {
        "Title": "WPF/E CTP Quick Start - 第四部分：绘图与填充（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/09/WPFE_CTP_Quick_Start_Part_4.html",
        "BriefIntro": "摘要: WPF/E通过提供Ellipse，Rectangle，Line，Polyline，Polygon和Path元素以支持矢量图。同样的，这些元素也被称之为“形状（Shape）”元素。这片文档包含了以下部分\n\n基础形状 \n其他形状元素 \n使用画刷填充形状 \n形状转换 \n下面该做什么呢？"
    },
    {
        "Title": "我有些搞不懂Office Live了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/09/587624.html",
        "BriefIntro": "摘要: Office Live去掉了Beta标记了？它到底是什么？原本还比较清楚，算是微软给中小型企业提供的一系列服务吧。但是……Windows Live Mail为什么变成了Office Live Mail？ Office Live Mail powered by Windows Live，好奇怪的东西，搞不懂了。Office Live昨天还给我发来了一封信，说是推出了免费的的O..."
    },
    {
        "Title": "最高法重新公布网络著作权司法解释",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/09/587575.html",
        "BriefIntro": "摘要: 最高人民法院今天公布再次修订后的关于审理涉及计算机网络著作权纠纷案件适用法律若干问题的解释(全文见法制日报五版)。与前一次修订相比，此次修订删除了原司法解释的第三条。修订后的司法解释将于2006年12月8日施行。据介绍，最高人民法院此次修改计算机网络著作权纠纷司法解释的内容只有一项，即删去了第三条，该条文的内容在第一次修改时已经作过修改，内容为：已在报刊上刊登或者网络上传播的作品，除著作权人声明或..."
    },
    {
        "Title": "笔记重装好了，换了不少新的软件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/09/587311.html",
        "BriefIntro": "摘要: WinRAR 2.62 Adobe Captivate 2.0 Adobe Reader 8.0 MS Office 2007 McAfee VirusScan PLUS 2007 IE 7 金山词霸2007 新版本软件对我还是比较有诱惑的，其主要原因是因为界面已经焕然一新了，呵呵，似乎在一个新的工作环境里。可惜不得不承认，上面这些玩意儿，除了IE 7和Adobe Reader 8.0之外，都是盗..."
    },
    {
        "Title": "讲座展示：TechEd Europe DEV 411 - AJAX Patterns with ASP.NET AJAX（2）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/08/Lecture__TechEd_Europe_DEV411_2.html",
        "BriefIntro": "摘要: 这次我选择的讲座内容，是最近在TechEd 2006 Europe中Andre Snanbria和Jeff Prosise的讲座“AJAX Pattern with ASP.NET AJAX”。Jeff Prosise是Wintellect的Co-Founder，Andre Sanabria是ASP.NET AJAX Team的Lead Program Manager。这次讲座的主要内容是讲述了使用ASP.NET AJAX开发AJAX应用的最佳实践，在这次讲座里，会对建立轻量级的客户端控件的方法进行深入，讲述了如何优化脚本代码，并提出了如何避免AJAX开发中常见的问题。本篇文章是这次讲座展示的第二篇，讲述了UpdatePanel的工作方式。"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第三部分：Canvas对象（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/08/WPFE_CTP_Quick_Start_Part_3.html",
        "BriefIntro": "摘要: Canvas对象是一个设计用来存放和定位各种图形和控件的对象。每一个WPF/E XAML文件都至少有一个Canvas。这篇文当介绍了Canvas对象，并且描述了应该如何添加，定位子对象以及改变其大小。这篇文档包含以下部分。\n\n向您的Canvas里添加一个对象 \n定位一个对象 \n控制宽度和高度 \n嵌套的Canvas对象 \n下面该做什么呢？"
    },
    {
        "Title": "WPF/E CTP Quick Start - 第二部分：创建一个XAML文件（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/07/WPFE_CTP_Quick_Start_Part_2.html",
        "BriefIntro": "摘要: 在前一篇文档中“创建一个WPF/E项目”中，我们向HTML页面里添加了一个WPF/E控件，并且创建了一个空的XAML文件。这篇文档会向您展示如何在您的XAML文件里创建WPF/E内容。\n\n第一步：创建一个Canvas和命名空间的声明 \n第二步：画些东西吧！ \n第三步：查看您的XAML内容 \n下面该做什么呢？"
    },
    {
        "Title": "今天凌晨2点左右笔记本忽然无法进入WinXP了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/07/585191.html",
        "BriefIntro": "摘要: 就是忽然无法进入了，重启自检都没有问题，就是不见WinXP的小小旗帜“冉冉升起”。我不介意重装系统，但是我C盘上的资料必须让我备份一下啊！还好住在同一屋檐下的兄弟是搞编译的，从他那里翻出一张Ubuntu的Live CD，进入了Ubuntu。挂载Windows下所有分区，然后想把C盘下有用的数据复制到其他分区中，可是问题就来了，首先我总是无法搞定编码问题，挂载好Windows..."
    },
    {
        "Title": "WPF/E CTP Quick Start - 第一部分：创建一个WPF/E项目（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/07/WPFE_CTP_Quick_Start_Part_1.html",
        "BriefIntro": "摘要: 您该如何在您的页面中添加WPF/E呢？一个典型的WPF/E项目有4个文件：一个用于存放和显示内容的HTML文件，一个aghost.js文件，一个XAML文件和一个JavaScript文件。这篇文当描述了创建一个WPF/E工程，以及向HTML添加WPF/E内容的三个步骤。这份指导包括了一下部分：\n\n    * 在您开始之前……\n    * 第一步：建立一个aghost.js文件\n    * 第二步：在您的HTML文件中创建一个ActiveX控件\n    * 第三步：创建一个表示WPF/E内容的文件\n    * 添加额外的WPF/E内容\n    * 一个示例工程\n    * 下面该做什么呢？"
    },
    {
        "Title": "[公告]WPF/E学习与研究团队成立 - WPF/E已经来了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/06/Welcome_to_the_WPFE_Club.html",
        "BriefIntro": "摘要: “WPF/E（Windows Presentation Foundation / Everywhere）”是微软的一套用于开发丰富地交互式界面，并且能够跨平台的解决方案。它基于Web，但是超越Web。它使用类似PF（Windows Presentation Foundation）的XAML，能够在多个操作系统下的多个浏览器中执行，只需要安装一个免费的小插件即可。它能够使用JavaScript与XA..."
    },
    {
        "Title": "AJAX培训第三讲：开发一个简单的AJAX聊天室",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/06/AJAX_Lesson_03.html",
        "BriefIntro": "摘要: 这次的内容是开发一个AJAX聊天室，目的是让大家略为巩固一下前两次所讲的AJAX常用的基础知识。"
    },
    {
        "Title": "讲座展示：TechEd Europe DEV 411 - AJAX Patterns with ASP.NET AJAX（1）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/04/Lecture__TechEd_Europe_DEV411_1.html",
        "BriefIntro": "摘要: 这次我选择的讲座内容，是最近在TechEd 2006 Europe中Andre Snanbria和Jeff Prosise的讲座“AJAX Pattern with ASP.NET AJAX”。这次讲座的主要内容是讲述了使用ASP.NET AJAX开发AJAX应用的最佳实践，在这次讲座里，会对建立轻量级的客户端控件的方法进行深入，讲述了如何优化脚本代码，并提出了如何避免AJAX开发中常见的问题。本篇文章是这次讲座展示的第一篇，讲述了这次讲座的内容概要，并浏览了第一个示例的各个功能。"
    },
    {
        "Title": "WPF/E Dev Center出现的过于仓促了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/04/581642.html",
        "BriefIntro": "摘要: 页面上的链接几乎都不能用，而导致的直接后果就是……现在这个Dev Center页面已经被撤下了。微软兄弟们太心急了阿，不过似乎也能说明大家对于WPF/E的急切心情，呵呵，我也拭目以待。:)"
    },
    {
        "Title": "文章推荐：ASP.NET AJAX Under the Hood Secrets及其他",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/04/Article_Suggestion__ASPNET_AJAX_Under_the_Hood_Secrets_and_Others.html",
        "BriefIntro": "摘要: ScottGu今天在他的Blog上发了一篇新的文章，提到了PageFlakes.com网站，以及它的核心架构师Omar Al Zabir。当然最重要的还是Omar的文章：《ASP.NET AJAX Under the Hood Secrets》，虽然可能一些已经深入了解ASP.NET AJAX以及Web开发的朋友们会对这篇文章里提到的内容已经比较多的了解，但是我想对于大多数的朋友来说，这篇文章会给我们的ASP.NET AJAX使用，以及Web开发带来一些启示。不过，我产生推荐这篇文章“冲动”其实还有别的原因……"
    },
    {
        "Title": "讲座展示：Live From Redmond: Microsoft AJAX Patterns - Implementing Predictive Fetch with Microsoft ASP.NET 2.0 AJAX Extensions",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/03/Lecture_LFR_Microsoft_AJAX_Pattern_Prediction_Fetch.html",
        "BriefIntro": "摘要: 在AJAX形式的Web开发中存在着一些常用的编程模式。在这个讲座里，Joe会讲述并且使用ASP.NET 2.0 AJAX Extensions做一个简单的演示，用来说明“Predictive Fetch”模式。"
    },
    {
        "Title": "InteWidgetTookit现有三个控件的使用方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/12/02/InteWidgetTookit_Introduction_to_the_First_Three_Extenders.html",
        "BriefIntro": "摘要: 在我之前的文章《我的开源项目：InteWidgetTookit》里，对InteWidgetToolkit进行了的简单介绍。现在我已经开始使用CodePlex进行开发和管理，它的地址是：http://www.codeplex.com/InteWidget，欢迎感兴趣的朋友关注。在之前的基础上，我改进了基于Dojo开发Extender所以使用的DojoExtenderControlBase与BaseScripts.js，现在使用它们开发基于Dojo的Extender只需简单地在服务器端编写一个类，使用CustomAttribute进行一些标记即可，几乎不要写任何客户端代码，并且能够在UpdatePanel中执行。现在我基于Dojo简单地开发了三个不同类型的Extender：ColorPalatteExtender、TooltipExtender和SplitContainerExtender。这次我将描述一下它们的使用方式。"
    },
    {
        "Title": "总算用上Vista和Office 2007了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/30/578023.html",
        "BriefIntro": "摘要: 目前感觉很不错，使用很流畅。不过有些不习惯，需要再适应一段时间。不过现在才用，怎么看怎么觉得落伍了，呵呵。"
    },
    {
        "Title": "建立了一个Google Group：“博客园AJAX技术交流”",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/28/Cnblogs_Ajax_Google_Group_Created.html",
        "BriefIntro": "摘要: 地址：http://groups.google.com/group/cnblogs_ajax\n邮箱：cnblogs_ajax@googlegroups.com\n前几天有朋友建议：“为AJAX或者AJAX培训的QnA建立一个群吧”。但是从以往的经验来说，“群”这个东西很容易就变成了聊天室，似乎效果不佳。因此最后经过一些朋友的建议，我也想了一下，最后决定申请了一个Google Group。它的好处就是您可以把它当作一个Mail List使用，如果有新的信息您就会收到邮件。而且如果您怕邮件太多的话，也可以选择一天收到一封“集合”邮件等等，还是比较灵活的。如果您有任何疑问，或者想讨论任何AJAX相关的话题，都可以发送邮件至cnblogs_ajax@googlegroups.com。"
    },
    {
        "Title": "SQL Server 2005 White Papers",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/28/574530.html",
        "BriefIntro": "摘要: Deep level technical papers on specific SQL Server topics that were tested and validated by SQL Development SQL Server 2005 Performance Tuning using Waits and Queues TEMPDB Capacity Planning and Concu..."
    },
    {
        "Title": "我的开源项目：InteWidgetTookit",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/27/InteWidgetToolkit_Introduction.html",
        "BriefIntro": "摘要: “InteWidgetToolkit”很明显是一个Toolkit，也就是工具包。“Inte”是“Integrate”的缩略。而Widget的含义则是“小工具”。其实这个名字的本意是“一个集成第三方脚本类库中Widget的ASP.NET AJAX工具包”，但是目前的决定是“一个集成第三方脚本类库的ASP.NET工具包，提供了各种Widget”。InteWidgetToolkit的目的是提供各种控件，目前想法是以Extender的方式为主，但是不排除今后会加入普通WebControl的类型。目前第三方脚本控件暂且定位在Dojo和Yahoo! UI Library。"
    },
    {
        "Title": "我们是不是建立一个培训的用户群比较好呢？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/27/574199.html",
        "BriefIntro": "摘要: 有朋友提出这个建议，需要吗？如果有意义的话，我可以去申请一个MSN群。"
    },
    {
        "Title": "我的一些看法：关于AJAX框架的比较",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/27/About_AJAX_Framework_Comparation.html",
        "BriefIntro": "摘要: Dflying兄最近在对于ASP.NET的AJAX实现进行一基于数据传输大小的比较，图文并茂，颇能够在体现某些方面的问题。这不禁使我我对于这方面也进行了一些思索，这里就说一下我的看法。"
    },
    {
        "Title": "AJAX培训第二讲：使用AJAX框架（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/27/AJAX_Lesson_02_2.html",
        "BriefIntro": "摘要: “AJAX培训第二讲：使用AJAX框架”现在拆成了两部分，现在发布是第一部分，探讨了AJAX框架相关内容，并给出了一些最简单的例子。"
    },
    {
        "Title": "AJAX培训第二讲：使用AJAX框架（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/25/AJAX_Lesson_02_1.html",
        "BriefIntro": "摘要: “AJAX培训第二讲：使用AJAX框架”现在拆成了两部分，现在发布是第一部分，探讨了ASP.NET 2.0中的AJAX能力。而第二部分我还在重新修补和录制，大概会在周一发布。"
    },
    {
        "Title": "FAQ - 什么是软件工厂？（翻译）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/25/FAQ__What_is_Software_Factory.html",
        "BriefIntro": "摘要: Microsoft Patterns & Practices已经提供了不少“软件工厂（Software Factory）”，例如Smart Client Software Factory，Web Service Software Factory和Mobile Client Software Factory。而在CodePlex上也已经有了Microsoft P & P Team正在开发的下一代产品：Web Client Software Factory。这是一个非常有价值，非常值得关注的项目，目前正在以Weekly Drop的形式发布，按照计划将会在年底发布。在Terry Lee和我都曾经对它进行过介绍。\n\n　　那么什么是“软件工厂”呢？它的作用又是什么呢？Jezz Santos在写了数篇有关这方面非常精彩的文章，他本人已经同意我将其文章进行翻译。我将陆续将它们翻译成中文，帮助大家和我自己理解一些概念。"
    },
    {
        "Title": "F# Resources",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/24/571237.html",
        "BriefIntro": "摘要: The F# WebsiteF# Library DocumentationThe Hub - \"The place for F# on the Web\"Dominic Cooney's weblogBenvenuti in F#!Jack's F# DirectX TutorialThe F# Wiki on strangelightsF# News from Jon Harrop"
    },
    {
        "Title": "工具推荐：SlickEdit Gadgets for Microsoft Visual Studio 2005",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/23/SlickEdit_Gadgets.html",
        "BriefIntro": "摘要: SlickEdit是一个著名的制作开发工具以及插件的公司，可惜这些产品都是需要用美金购买的。幸运的是，现在它推出了一款免费的VS 2005的插件：SlickEdit Gadgets，对于开发来说还是很有帮助的。"
    },
    {
        "Title": "紧急求助：Captivate发布后没有声音",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/22/569166.html",
        "BriefIntro": "摘要: 使用状况如下： 一开始使用正常，但是在录制过程中忽然CPU 100%无法恢复，于是使用任务管理器杀掉进程。 重启计算机，重新打开Captivate，打开文件时说有未保存部分，是否修复，选择是。 文件中多出莫名其妙的帧，内容为不规则几何图案，并且无法删除，选中它删除，反而会删除掉第1帧或者第2帧。 将莫名其妙的帧移至最后，但是发布出的结果表明居然还在原来位置。 新建文件，选择从其它*.cp文件导入，..."
    },
    {
        "Title": "ASP.NET AJAX Control Toolkit Update",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/22/ASP_NET_AJAX_Contro_Toolkit_Release_61121.html",
        "BriefIntro": "摘要: 就在不久之前，ASP.NET AJAX Control Toolkit发布了Release 61121，Release 61121解决了用户反馈中一些比较大的问题。"
    },
    {
        "Title": "录讲座？被讲座录得精疲力尽……",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/21/567752.html",
        "BriefIntro": "摘要: 最近一直没有大段的时间录讲座，只能在今天请了个假，想把讲座录掉。一开始感觉还不错，机器虽然慢但还比较顺利。直到一次Captivate忽然崩溃……重新打开，说正在录制，不知应该如何是好，只得重启机器。启动好之后发现影片多出来几帧，却无论如何也删不掉，选择它们反而会删除之前的几帧。那么就把它们转移到末尾吧，似乎好了，但是编译出来一看，发现还是有莫名其妙的白色的画面，而之后录进去..."
    },
    {
        "Title": "Microsoft Windows年满21岁了！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/21/566777.html",
        "BriefIntro": "摘要: 无论你是否相信，Windows在本周一刚刚21周岁，自1985年Windows 1.0推向市场之后，Winows所带来的辉煌有目共睹，它改变了PC世界。就在过完今年之后，最新的Windows Vista将与大众见面，历经21年风雨的Windows回首过去会是一个什么样的表情？ Windows 1.0于1985年11月20日诞生，它需要256KB的内容和DOS2.O环境,它的安装介质为2张软盘。 当..."
    },
    {
        "Title": "Microsoft SaaS Resources",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/20/566402.html",
        "BriefIntro": "摘要: Guidance for Application Hosters SaaS Architectural Guidance Service Provider License Agreement SaaS Onramp Program"
    },
    {
        "Title": "讲座展示：TechEd Europe DEV344 - ASP.NET AJAX Control Toolkit（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/18/Lecture_TechEd_Europe_DEV344_3.html",
        "BriefIntro": "摘要: 此次讲座分为两部分：“ASP.NET AJAX Control Toolkit介绍和使用”以及“开发一个Extender控件”。本文将对于该讲座的第二部分进行讲述，并且对其第二个演示的剩余部分进行分析。"
    },
    {
        "Title": "Borland工具部门预计将在2007年初独立为CodeGear公司",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/18/564311.html",
        "BriefIntro": "摘要: 虽然如此，虽然Turbo Pascal和Delphi已经久远了，但是还是觉得Borland编译器和工具部门的各种产品无疑是优秀的，至少我觉得Delphi 6的水准超过了VS.NET 2003。我不懂这种公司决策，虽然Borland不可能恢复书本上才能看到的辉煌，不过总是希望Borland能够继续生存下去，不管是Borland还是CodeGear。http://www.borland.com/us/..."
    },
    {
        "Title": "讲座展示：TechEd Europe DEV344 - ASP.NET AJAX Control Toolkit（中）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/17/Lecture_TechEd_Europe_DEV344_2.html",
        "BriefIntro": "摘要: 此次讲座分为两部分：“ASP.NET AJAX Control Toolkit介绍和使用”以及“开发一个Extender控件”。本文将对于该讲座的第二部分进行讲述，并且对其第二个演示的第一个部分进行分析。"
    },
    {
        "Title": "盼望着可以早点装Vista",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/16/563101.html",
        "BriefIntro": "摘要: 正在为安装Vista做准备，早在一年多前，我就装过一次Vista，不过具体的感觉已经忘记了。准备尽快装好，就可以开始体验Vista了。:)"
    },
    {
        "Title": "讲座展示：TechEd Europe DEV344 - ASP.NET AJAX Control Toolkit（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/15/Lecture_TechEd_Europe_DEV344_1.html",
        "BriefIntro": "摘要: 这次我选择的讲座内容是最近在TechEd 2006 Europe中Shawn Burke的讲座“ASP.NET AJAX Control Toolkit Unleashed: Creating Rich Client-Side Controls and Components”。Shawn Burke是微软.NET Developer Platform总监。\n　　此次讲座的内容主要是对于ASP.NET AJAX Control Toolkit进行简单的介绍，展示了Extender控件是如何帮助ASP.NET开发人员简单地将丰富的用户体验集成到他们的Web应用程序中。在这次讲座里将看到应该如何在您的应用中使用ASP.NET AJAX Control Toolkit中的组件，并且了解开发人员是如何方便地开发一个APS.NET AJAX Extender的。\n　　此次讲座分为两部分：“ASP.NET AJAX Control Toolkit介绍和使用”以及“开发一个Extender控件”。本文将对于该讲座的第一部分进行讲述，并且对其第一个演示进行分析。"
    },
    {
        "Title": "推荐：体验TechEd 2006 Europe Edition",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/14/TechEd_2006_Europe_Edition.html",
        "BriefIntro": "摘要: TechEd 2006 China不久刚落下帷幕，TechEd 2006 Europe Edition又在西班牙巴塞罗那风风火火地开始了。微软为这次盛会专门准备一个网站来介绍它的一切。在这个站点里您能够看到此次盛会的大量相关信息，当然也有Virtual Side，不过最重要的就是其中有部分讲座的视频！这些都是优秀的资源。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（7） - 编写JavaScriptConverter处理含有循环引用的类型",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/13/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_7.html",
        "BriefIntro": "摘要: 有时候在Web Service中会需要使用到比较复杂的类型，它们的特征往往都是含用循环引用，这样的对象如果交给ASP.NET AJAX中默认的序列化方式来处理则会抛出异常，大家经常遇到的“DataTable”问题正是由此引起的。关于这一点，ASP.NET AJAX自然提供了解决方法，在这里“官方”的解决方案就是JavaScriptConverter，它可以让开发人员自定义特定类型的序列化能力。"
    },
    {
        "Title": "写什么样的文章关注的人会多一些呢？",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/13/558960.html",
        "BriefIntro": "摘要: 发现我用心写的文章却反而少有人关注。人气高的反而都是些半小时内能够“描述”的东西，甚至于只是“新闻”形式的介绍。一步小心进来看到的朋友麻烦给点建议吧，都不知道写什么好了，sigh。"
    },
    {
        "Title": "深入Atlas系列：综合示例（1） - 调用服务器端方法时直接获得客户端具体类型",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/11/Inside_Atlas_Series__Sample_1.html",
        "BriefIntro": "摘要: 在使用ASP.NET AJAX时，大家对于返回服务器端的复杂类型的情况经常会遇到问题。Dflying兄写了一篇文章来说明在如何在客户端得到Sys.Preview.Data.DataTable对象的文章，但是这种方法需要在客户端进行Sys.Preview.Data.DataTable的构造，那么我们该如何直接获得这个对象呢？再进一步，我们该如何直接获得客户端某种特定格式的对象呢？本篇文章给出了一个解决方案，事实上，这个扩展的能力还不止如此……"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（6） - 在客户端隐藏服务器端类型信息",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/11/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_6.html",
        "BriefIntro": "摘要: 如果要在客户端指定服务器端Web Service方法所接收的参数类型，就必须在客户端通过“__type”来指定，但是这就暴露了服务器端的具体类型了，这可不太好。现在我们就来看一下应该如何解决这个问题。"
    },
    {
        "Title": "深入Atlas系列：探究序列化与反序列化能力（下） - JavaScriptSerializer",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/10/Inside_Atlas_Series__Investigate_the_Serialization_and_Deserialization_Ability_2.html",
        "BriefIntro": "摘要: 在ASP.NET AJAX中，客户端的序列化与反序列能力由Sys.Serialization.JavaScriptSerializer类的serialize和deserialize两个静态方法提供。在服务器端，所有的序列化与反序列化能力，包括类型之间的转换，对于开发人员来说都是由JavaScriptSerializer类的几个方法实现的。从前一片文章里我们已经知道了两个辅助的类：JavaScriptTypeResolver和JavaScriptConverter，他们的作用分别是“映射类与类标识”，以及“提供特定类的序列化与反序列化能力”。在某些情况下，我们还是需要使用JavaScriptSerializer类的方法来操作一个类型，例如使用JavaScriptConverter来自定义特定类的序列化或者反序列化，就需要使用JavaScriptSerializer类的方法，因此我们这次就详细看一下这个类的能力。"
    },
    {
        "Title": "近期微软的一些动作还是比较令人欣喜的",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/08/554607.html",
        "BriefIntro": "摘要: 关键字：下一代Windows平台技术，Virtual Earth 3D，Windows Sysinternal"
    },
    {
        "Title": "深入Atlas系列 - 浅析ASP.NET Beta 2中令人疑惑的脚本引入方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/08/Inside_Atlas_Series__Skim_the_Confusing_Script_Loading_Mechanism_in_Beta2.html",
        "BriefIntro": "摘要: 似乎已经有不少朋友在作了ASP.NET AJAX Beta 1到Beta 2的转移之后遇到了这样的问题：如果使用了ScriptManager引入了自定义的JavaScript脚本文件后会发生JavaScript错误。本文简单讨论了引发这个问题的原因，解决方案以及注意事项。"
    },
    {
        "Title": "AJAX培训第一讲：AJAX基础",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/07/AJAX_Lesson_01.html",
        "BriefIntro": "摘要: 经过了5个小时的准备，10多个小时的录制和剪辑，我终于将第一次AJAX培训的内容做完了。录一次讲座真的是一件费神费时的事情，我也深切感受到了天轰穿兄录了数十次讲座有多么不容易。这是我第一次录制讲座，所以经验有些不足，而且对着屏幕一个人傻傻地说话总是不如对着观众说话，在语气上也略显单调。虽然我已经极力yy正在为数十人作讲座的情形，但是似乎效果不甚理想。另外不知道是什么原因，录下来的声音总是不像我的原声，听上去也有些沉闷，请大家多多包涵了。如果大家对于讲座的方式上有什么意见或者建议的话，请回复在这里，您的支持能够让我们的工作越做越好。如果大家对于讲座的内容有任何疑问，请在Q & A专用文章里进行提问，当然如果您有其它任何疑问的话，也能在那里提出，我会尽快为您解答。"
    },
    {
        "Title": "深入Atlas系列：探究序列化与反序列化能力（上） - 客户端支持，JavaScriptTypeResolver与JavaScriptConverter",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/06/Inside_Atlas_Series__Investigate_the_Serialization_and_Deserialization_Ability_1.html",
        "BriefIntro": "摘要: 在ASP.NET AJAX中是使用了JSON作为客户端与服务器端传递对象信息的方式。因此，在ASP.NET AJAX的客户端与服务器端均提供了序列化与反序列化的能力。了解这些内容的使用方法，可以说是使用与扩展ASP.NET AJAX所必须的能力。在这两篇文章里，我们就来看一下ASP.NET AJAX中的序列化与反序列化的能力。"
    },
    {
        "Title": "深入Atlas系列：探究Application Services（3） - 自定义客户端Profile Service支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/05/Inside_Atlas_Series__Investigate_the_Application_Services_3.html",
        "BriefIntro": "摘要: 　　如果不能在客户端进行自定义的话，Profile Service的自定义能力还是远远不够的。虽然Profile Service没有提供一种“官方”的客户端自定义支持，不过事实上“自定义”能力“天然”地存在与客户端里。为什么？因为整个客户端是由JavaScript实现的，这种灵活的语言使得我们能够在一定程度上自由地修改客户端的行为。"
    },
    {
        "Title": "深入Atlas系列：探究Application Services（2） - 自定义服务器端Profile Service支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/04/Inside_Atlas_Series__Investigate_the_Application_Services_2.html",
        "BriefIntro": "摘要: 在上一篇文章中，我们讨论了使用ASP.NET AJAX默认的Profile Service。一般来说，它已经能够迎合大多数应用的需要了。不过除此之外，ASP.NET AJAX还提供了让我们自定义Profile Service的机制。"
    },
    {
        "Title": "深入Atlas系列：探究Application Services（1） - Profile Service分析与使用",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/02/Inside_Atlas_Series__Investigate_the_Application_Services_1.html",
        "BriefIntro": "摘要: ASP.NET AJAX提供了Profile Service，允许开发人员异步地从服务器端访问Profile信息。从RTM开始，客户端的Profile Service还提供了对于Profile Group的支持，因此可以说已经相当成熟了。那么对于Profile Service的细节，是否大家都了解了呢？从ScriptManager的使用上来看，ProfileService是能够扩展的，那么应该如何扩展呢？细心的朋友们应该也发现了，在web.config中也增加了对于Profile Service的配置，那么这些配置应该如何使用呢？"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（8） - RTM中可叹的Web Service Proxy",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/01/Inside_Atlas_Series__Web_Services_Access_in_Atlas_8.html",
        "BriefIntro": "摘要: 使用Web Service Proxy应该是使用ASP.NET AJAX访问Web Service最常用的方法了。服务器端会根据ScriptManager中添加的Service引用而对于Web Service类进行分析，并生成相应的客户端脚本。这样开发人员就能在客户端方便而且直观地访问Web Services方法了。这是ASP.NET中很重要的功能。从官方文档上看来，CTP和RTM似乎在脚本使用这方面没有很大的改变，只要在服务器端将一些CustomAttribute改变一下就可以了。的确没错，在使用方式上只有这点细微改变，但是事实上，从生成脚本本身来说，CTP和RTM的做法大相径庭。"
    },
    {
        "Title": "呼，“深入Atlas系列”好难写",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/11/01/546249.html",
        "BriefIntro": "摘要: 写了3个多小时，却越写觉得越没有价值，一狠心，删了。以后在动手前要想清楚了。工作有点忙了，不过要坚持。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（7） - RTM中的客户端支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/30/Inside_Atlas_Series__Web_Services_Access_in_Atlas_7.html",
        "BriefIntro": "摘要: 在RTM版本中，客户端访问Web Services的基础类库发生了一些改变，并直接影响到了它们的使用方式。对于自己写ASP.NET AJAX组件（例如ExtenderControl）的朋友们来说，了解这部分改变是非常重要的。"
    },
    {
        "Title": "深入Atlas系列：客户端网络访问基础结构示例（1） - 编写并使用自定义的WebRequestExecutor",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/30/Inside_Atlas_Series__Client_Communication_Architecture__Sample_1.html",
        "BriefIntro": "摘要: WebRequestExecutor是ASP.NET AJAX网络访问基础结构的唯一修改点。理论上，我们可以使用自定义的WebRequestExecutor来取代默认的XMLHttpExecutor。我们要做的，其实只是开发一个继承于Sys.Net.WebRequestExecutor类。不过事实上，在实际使用中，Sys.Net.XMLHttpExecutor已经足够用了，真的要自定义，也只需继承这个类即可。就像接下去的例子一样。"
    },
    {
        "Title": "Q & A专用文章（已过期）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/29/ASP_NET_AJAX_Q_and_A.html",
        "BriefIntro": "摘要: "
    },
    {
        "Title": "深入Atlas系列：客户端网络访问基础结构（下） - WebRequestExecutor和XMLHttpExecutor",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/29/Inside_Atlas_Series__Client_Communication_Architecture_2.html",
        "BriefIntro": "摘要: 正如前一篇文章所说的那样，WebRequestExecutor是客户端网络访问的基础结构的唯一扩展点，而XMLHttpExecutor是其默认实现。在ASP.NET AJAX中，开发人员能够将自定义的WebRequestExecutor子类设为默认的Executor，也可以为某一个WebRequest指定一个特定的Executor。虽然一般来说XMLHttpExecutor已经足够大多数应用，但是既然ASP.NET AJAX提供了这个功能，我们也根据默认的类进行一下这方面的学习。"
    },
    {
        "Title": "AJAX讲座内容提纲（意见征询）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/29/543176.html",
        "BriefIntro": "摘要: AJAX作为一个“新生事物”已经被几乎所有人接受了。大家对于AJAX应该也有了一定的学习，因此我总是感觉AJAX的东西容易让人听腻，想做好不容易。下面是我初步定下来的提纲，希望大家能多提一些意见和建议，我会随时更新和细化这些内容。"
    },
    {
        "Title": "祝老爸生日快乐！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/28/542474.html",
        "BriefIntro": "摘要: 今天是父亲生日，一定要纪念一下的。:)顺便也祝一下比尔同学，毕竟和我老爸同年同月同日的……"
    },
    {
        "Title": "深入Atlas系列：客户端网络访问基础结构（上） - WebRequest的工作流程与生命周期",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/27/Inside_Atlas_Series__Client_Communication_Architecture_1.html",
        "BriefIntro": "摘要: ASP.NET AJAX的许多功能会要求异步地访问服务器端，例如访问Web Services，Authentication/Profile Services（事实上和访问Web Services是相同的机制）和Partial Rendering。在ASP.NET AJAX中，所有的这些访问都是通过一个网络访问的基础结构来完成的，无一例外。"
    },
    {
        "Title": "万恶的小偷，还我钱包来！",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/26/540440.html",
        "BriefIntro": "摘要: 习惯性地上车后就到头睡觉，在迷迷糊糊之中习惯性地摸口袋……顿时大惊失色，钱包没了！钱是小事，可是好多证啊卡啊都没有了……完了……"
    },
    {
        "Title": "深入Atlas系列：客户端代码编写规则分析与指南",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/25/Inside_Atlas_Series__RTM_Script_Style_Analyse_and_Coding_Guidelines.html",
        "BriefIntro": "摘要: 在RTM版本中，我们可以发现ASP.NET AJAX的客户端脚本引入了许多规则：有方法注释规则，有参数验证规则，而且对于Debug和Release模式下的脚本代码，甚至添加在程序集里的方式，也有相当严禁的规则。如果我们想要编写真正规范和严谨的代码或组件，了解这些规则是非常必要的。有了这些规则，用户在使用Debug模式进行开发和调试时可以得到更好的提示（比如Call Stack），下一版本的Visual Studio“Orcas”也会根据这些规则提供良好的IntelliSense功能。另外，了解这些规则也有利于帮助开发人员阅读和理解客户端代码，这不也是我写“深入Atlas系列”的目的吗？在这片文章里，我将使用ASP.NET AJAX的脚本代码为范例，对开发规则进行一番描述。在某些时候也会对客户端和服务器端的部分代码进行简单的分析。\n"
    },
    {
        "Title": "[意见征集]AJAX培训",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/25/538957.html",
        "BriefIntro": "摘要: 承蒙厚爱，经过培训团队的讨论之后，决定将由Dflying Chen和我负责AJAX部分的培训。初期培训的方式是录制视频讲座并提供下载，等条件成熟后会逐渐转向在线培训的方式。　　培训的内容为AJAX，将着重讲述AJAX在ASP.NET中的应用。初期的侧重点将是AJAX基础部分的讲解，并逐渐过渡到微软公司的ASP.NET AJAX框架。虽然会由我们来决定讲座的内容与提纲，但是由于我们的目的是服务于各位..."
    },
    {
        "Title": "为ASP.NET AJAX 1.0 Beta补充trace和dump功能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/24/Add_Trace_and_Dump_for_ASP_NET_AJAX_1_0_Beta.html",
        "BriefIntro": "摘要: ASP.NET 1.0 Beta将客户端的Debug能力大大减弱了，window.debug对象目前只剩下了fail和trace功能，这让以客户端开发为中心的开发人员觉得非常不满。本文为RTM增加了CTP的trace和dump能力。"
    },
    {
        "Title": "在虚拟主机上部署ASP.NET AJAX 1.0 Beta的程序集",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/23/Deploy_ASP_NET_AJAX_Assembly_in_Virtual_Web_Host.html",
        "BriefIntro": "摘要: 说明了在虚拟主机中部署ASP.NET AJAX 1.0 Beta的程序集的方法，并提供模版下载。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（9） - Using the Value-add Scripts",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/23/From_Atlas_to_Microsoft_ASP_NET_AJAX_9.html",
        "BriefIntro": "摘要: Discussed the usage of the Value-add Scripts"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（8） - UpdatePanel Control",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/22/From_Atlas_to_Microsoft_ASP_NET_AJAX_8.html",
        "BriefIntro": "摘要: 对于UpdatePanel控件的使用是ASP.NET AJAX Extentions的重要部分。我们收到了关于它和UpdateProgress控件的大量用户反馈。为了增强部分刷新的功能我们作了多处修改，并加强了UpdatePanel对于控件的兼容性。我们也为异步PoskBack实现了一个丰富的事件模型，这样您就可以在客户端响应它们并对页面更新提供额外操作了。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（7） - ScriptManager and ScriptManagerProxy Controls, Extender Controls",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/22/From_Atlas_to_Microsoft_ASP_NET_AJAX_7.html",
        "BriefIntro": "摘要: Discussed ScriptManager, ScriptManagerProxy and Extender Controls"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（6） - Networking, Application Services",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/22/From_Atlas_to_Microsoft_ASP_NET_AJAX_6.html",
        "BriefIntro": "摘要: 为了简化Web Services方法调用，客户端代理的设计被改变了，它在方法调用和回调函数设置方面提供了强大的灵活性。另外，在RTM版本中，客户端的Authentication服务和Profile服务使用了一个简化的并且更为灵活的设计。这个设计与客户端访问Web Services方法保持了统一。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（5） - Higher-level Component Framework",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/21/From_Atlas_to_Microsoft_ASP_NET_AJAX_5.html",
        "BriefIntro": "摘要: 高级组件的功能已经根据客户反馈，性能等诸多因素进行了修改。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（4） - Browser Compatibility, Building Debug and Release Scripts, Defining Type Descriptors",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/21/From_Atlas_to_Microsoft_ASP_NET_AJAX_4.html",
        "BriefIntro": "摘要: Discussed the differences of the following aspects between CTP and RTM release of Microsoft ASP.NET AJAX:\n1、Browser Compatibility\n2、Building Debug and Release Scripts\n3、Defining Type Descriptors"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（3） - Class and Type Definition, Reflection APIs",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/21/From_Atlas_to_Microsoft_ASP_NET_AJAX_3.html",
        "BriefIntro": "摘要: 在CTP版本中，您能创建各种各样的类型，例如类，接口，枚举和标记（flag）。这些功能在RTM版本中被改变了。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（2） - Class、JavaScript Extensions (Client BCL)",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/21/From_Atlas_to_Microsoft_ASP_NET_AJAX_2.html",
        "BriefIntro": "摘要: 在CTP release中，“类”和类型是使用closure定义的，在类的构造函数中生效（尽管这些类不能以.NET Framework中的类的方式理解，为了方便，我们在这里还是将它们称之为类）。在RTM中，我们使用了prototype模型。另外，CTP版本包括了对于JavaScript内置对象的一系列扩展，这些会继续保留在RTM版本中。然而，它们被重新设计以避免与其它AJAX框架的潜在冲突。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX（1） - Overview of Major Changes",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/21/From_Atlas_to_Microsoft_ASP_NET_AJAX_1.html",
        "BriefIntro": "摘要: ASP.NET 2.0 AJAX Extensions对于Atlas来说，不仅仅是一个名称上的改变，它从基础结构实现，到客户端与服务器端的应用，都发生了翻天覆地的变化。相对于Atlas来说，似乎ASP.NET 2.0 AJAX Extentions在各个方面都有了长足的进步。一些原有的诟病与硬伤得到了改善，可以说，相比于以前的Atlas，它成熟了。"
    },
    {
        "Title": "从Atlas到Microsoft ASP.NET AJAX - 序",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/20/From_Atlas_to_Microsoft_ASP_NET_AJAX_LETs_BEGIN.html",
        "BriefIntro": "摘要: 从现在开始，我们来“从Atlas到Microsoft ASP.NET AJAX”！"
    },
    {
        "Title": "Microsoft ASP.NET AJAX的RTM Release在一定程度上更像是一个晴天霹雳",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/20/what_the_hell_the_change_is.html",
        "BriefIntro": "摘要: 即使我已经将Atlas的代码看了大半，即使我已经准备好了后面几片“深入Atlas系列”的文章，但是不得不承认，它们几乎没有什么用了。粗粗看了一遍客户端代码和一半左右的文档，它已经不是我所认识的Atlas了。它对于我来说又成了一个陌生的东西。这次的Release，我认为，从一个根本的角度改变了原来的Atlas，从客户端的对象构造的基础（closure变成了prototype）..."
    },
    {
        "Title": "Atlas中有趣且无用的功能：Sys.UI.Window类",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/20/Sys_UI_Window.html",
        "BriefIntro": "摘要: Atlas的客户端代码中有着一个有趣的类，就是Sys.UI.Window。这个类的功能非常简单，只是对于Javascript功能的封装，用于提供各种提示框。"
    },
    {
        "Title": "想计划做一套Atlas的控件集合",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/20/534816.html",
        "BriefIntro": "摘要: 一个设想，我们可以有一套自己的控件库。参与Atlas Control Toolkit的开发比较麻烦，不如我们自己做一套。"
    },
    {
        "Title": "出于对Atlas自带AutoCompleteBehavior的不满，自定义了一个支持模版的AutoCompleteBehavior",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/20/Jeffz_UI_AutoCompleteBehavior.html",
        "BriefIntro": "摘要: AutoCompleteBehavior只能作出最简单的提示，其它什么功能也没有。无法设置样式，无法自定义信息，这就是我们想要的功能吗？这就是所谓的“桌面级”体验吗？很显然，这远远不够。豪不夸张地说，我是怀着对于AutoCompleteBehavior的强烈不满（其实这是前几天我在向别人介绍Atlas时被人Challenge的结果），决定自定义一个加强的AutoCompleteBehavior，不过其实唯一的增强也就是提供了用户自定义模版的能力。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（5） - 自定义TypeConverter把基础类型转换为复杂类型",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/19/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_5.html",
        "BriefIntro": "摘要: 　　在上一个示例中我们了解到如何通过HTTP GET来访问Web Services方法。很显然，使用HTTP GET依靠Query String传递参数，于是在客户端拿到的总是基本数据类型String。幸好，在Atlas中，对于基础类型的参数，如果遇到了一个字符串，则会设法将其转换成一个合适的类型。因此，在使用HTTP GET方法传递参数时，在Web Services方法里能够使用个中各样的基础类型。但是，这显然远远不够，Atlas也不会将这个问题置之不理。在Atlas中，自提供了一套自定义机制可以将基础类型转换为复杂类型。\n本文通过示例演示了如何通过自定义TypeConverter来提供简单类型到复杂类型的转换。"
    },
    {
        "Title": "IE7 - 千呼万唤始出来",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/19/IE7_Released.html",
        "BriefIntro": "摘要: IE7 Home: http://www.microsoft.com/windows/ie/default.mspx?mg_ID=10010\n\n下载地址：http://www.microsoft.com/windows/ie/downloads/default.mspx\n\n（版本：7.0.5730.11）\n"
    },
    {
        "Title": "晚上花了不少时间与笔记本键盘进行了搏斗",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/19/533113.html",
        "BriefIntro": "摘要: 现在才发觉，我的笔记本键盘里实在太脏了，将几个按钮翘开来清理之后却差点装不上去，还好问题最终解决。相比处理笔记本键盘，似乎还是编程容易些。至少我没有在网上搜到该如何安装笔记本键盘按钮的解答。嗯……接下来准备写一个增强的AutoCompleteBehavior吧，现在的不太实用……深入Atlas系列是不是也该继续了呢？我的业余生活似乎都交给博客园了。不..."
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（4） - 使用HTTP GET调用Web Services方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/18/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_4.html",
        "BriefIntro": "摘要: 在之前的例子里，由于Atlas客户端在调用Web Services方法时总是使用了Sys.Net.ServiceMethod类，因此始终使用了HTTP POST方法与服务器端进行交互。POST方法有其好处，不过GET方法也自有其价值。本文通过示例解释了如何使一个Web Services方法能够通过HTTP GET调用，并且如何调用它。"
    },
    {
        "Title": "写示例也是一件麻烦的事情",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/18/532491.html",
        "BriefIntro": "摘要: 麻烦的地方不是因为写示例难，写示例比写分析要简单何止千百倍。写示例麻烦的地方是要想清楚应该使用什么“题材”作为示例。对一种使用技术或者用法的示例，必须简单，必须要有实用价值，必须存有一个合理的scenario，必须……如果想清楚了这些，示例就很简单了，简直就可以作为一种休息了……"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（3） - 在Web Services方法中使用多态",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/18/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_3.html",
        "BriefIntro": "摘要: 在Web Services方法中，我们往往使用的都是一个具体类型的参数。这个参数一般就是一个数据对象，所有的功能基本上只是为了存放数据。虽然这对于应用来说一般已经足够，我们大量使用了这样的Web Services，不也过得好好的吗？但是，在这一点上实在太不够面向对象了。本文提供了示例演示如何在客户端选择传递给Web Service参数的具体类型，以达到一定程度上多态的效果。"
    },
    {
        "Title": "似乎有关Atlas的书也渐渐多起来了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/18/531964.html",
        "BriefIntro": "摘要: 在浏览Amazon上的书时，发现了两本新出的有关Atlas的书籍。不过简单看了看内容，似乎还是没有什么新意。哎，Atlas难道说来说去都只有那些吗？"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（2） - 自定义JavaScriptConverter处理循环引用对象",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/17/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_2.html",
        "BriefIntro": "摘要: 在以前的文章中我曾经举了一个简单例子，如果一个对象存在着循环引用，那么无论在客户端还是服务器端都会出现异常状况。这篇文章将通过示例来解释如何使用自定义JavaScriptConverter来解决这个问题。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（6） - 对于复杂数据类型的支持（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/17/Inside_Atlas_Series__Web_Services_Access_in_Atlas_6.html",
        "BriefIntro": "摘要: 将Atlas访问Web Services方法对于复杂类型的支持讨论完毕，在之后的文章中将通过示例着重讲解一些有用的功能和在文章中提到的扩展。\n　　本文分析了Web Services方法寻找自身所支持的复杂类型的方式，以及将对象序列化输出的实现和注意点。"
    },
    {
        "Title": "在使用.Net Reflector时发现了一个Bug:)",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/17/530910.html",
        "BriefIntro": "摘要: 在写“深入Atlas系列”文章时，估计最常用的工具就是Lutz Roeder's .Net Reflector了。自从遇见了它，它就成为了我最喜欢的.NET相关工具，是绝对的第一。不过今天在反序列化时，在结果中发现了一个奇怪的方法调用，而这个调用既不符合逻辑也无法编译通过，而点击它想查看它的实现时则跳转到另一个方法上了。有趣，特此留念。"
    },
    {
        "Title": "一个值得关注的项目：Patterns & Practices Web Client Software Factory",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/16/Introduction_to_Patterns_and_Practices_Web_Client_Software_Factory.html",
        "BriefIntro": "摘要: 强烈推荐一个值得关注的项目：Patterns & Practices Web Client Software Factory (WC-SF)。"
    },
    {
        "Title": "“深入Atlas系列”文章导读",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/16/Inside_Atlas_Series_Index.html",
        "BriefIntro": "摘要: “深入Atlas系列”的路还很长，还有许许多多的东西可以分析与挖掘。这个“文章导读”既是对这个系列文章的一种整理，也是对我坚持完成这一系列的一个自我鼓励与鞭策。\n　　从现在开始，我决定从现在开始将“深入Atlas系列”的文章分为“分析”与“示例”两部分。“分析”部分文章可能会相对比较“枯燥”，因为它几乎完全就是从实现角度对Atlas的原理进行剖析，附带一些说明性的简单示例。但是这才是我精力花费最大的地方。这部分文章都是“示例”部分的实现依据。“示例”部分文章使用了“分析”部分所得到的结论，然后设计出来的Atlas使用示例。它们用一种比较直观的方式对一些复杂或高级的问题提供解决方案。\n　　既然是“深入Atlas系列”，我会尽可能保持这个系列内容的“深入”性，讨论的内容也尽可能地避免流于表面或者已有的文档和示例，因此这对我的要求也会相当的高。请朋友们有也不要吝啬您的意见、建议和疑问。你们的支持是对我最大的鼓励。如果希望深入了解Atlas的哪个部分，也请尽管告诉我。"
    },
    {
        "Title": "换了个Blog主题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/16/529850.html",
        "BriefIntro": "摘要: 换了个主题。以前的主题似乎感觉有点暗，对于超级链接的显示也不好。现在感觉蛮清爽的。:)嗯，不过我选择主题的最主要的衡量标准就是文章内容显示大小，因此都是选择旁侧很窄的主题。内容范围大，就可以显示更多的东西。我喜欢将分辨率开到1600*1200也是这个原因。否则使用现在的IDE做开发，上下左右都是各种工具栏，编写代码的地方实在太少。忽然觉得，该给自己的Blog写个索引文章了，以后的文章也会越来越多了..."
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（5） - 对于复杂数据类型的支持（中）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/15/Inside_Atlas_Series__Web_Services_Access_in_Atlas_5.html",
        "BriefIntro": "摘要: 这篇文章继续讨论了Atlas访问Web Services方法时对于复杂类型的支持，并从实现角度分析了可以说是此中最重要的那部分代码。这部分内容是扩展Atlas对于复杂类型支持的依据，由此可以得出Atlas的一些强大之处。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（4） - 对于复杂数据类型的支持（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/15/Inside_Atlas_Series__Web_Services_Access_in_Atlas_4.html",
        "BriefIntro": "摘要: Atlas访问Web Serivces方法对于复杂数据类型的支持并不如前几片文章所描述的那么简单。从这篇文章开始，我将从实现角度详细分析Atlas访问Web Services方法是如何支持复杂数据类型的，并最终对于一些常见的情况给出解决方案。"
    },
    {
        "Title": "在“黑色星期五”没有更新Blog",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/14/528677.html",
        "BriefIntro": "摘要: 为自己圆一下：因为黑色星期五，所以没有没有更新Blog。可惜这个理由过于无厘头了，假得连我自己都不相信。如果不出差错，今天“深入Atlas系列”又会增加一片文章了。愈发觉得这个系列的文章难写，深入的东西如何才能写得让人能够接受？似乎我还没有找到关键的地方……"
    },
    {
        "Title": "忽然发现来博客园整一个月了",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/13/527936.html",
        "BriefIntro": "摘要: 码了不少字，花了不少精力，不过似乎也习惯于每天写点了。以前找不到可以写什么，但是现在忽然发现就光“深入Atlas系列”就有许许多多东西可写，只担心没有时间和精力。脑子里的东西可以存放很多，整理成文字真还要费神不少……以目前打算，保持一周五篇的速度吧。或者再用把力，一天一篇，让首页上永远存在我的文章。:)"
    },
    {
        "Title": "VS 2005中文版用户请谨慎使用我提供的Atlas Xml Scripts Intellisense方法",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/12/527539.html",
        "BriefIntro": "摘要: VS 2005中文版用户请谨慎使用我的文章《为VS.NET 2005增加Atlas Scripts的代码提示功能》所提供的Atlas Xml Scripts Intellisense方法。有少数使用VS 2005中文版的朋友在使用了我提供的Intellisense方法后，出现了HTML编辑器“无法加载此属性页”的的错误。而且在删除了Schma文件和注册表项之后错误依旧。目前..."
    },
    {
        "Title": "补充部分官方文档里没有的Client Library以及代码提示Schema更新（三）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/12/Additional_Client_Library_and_Update_Intelligence_Schema_3.html",
        "BriefIntro": "摘要: 配合《"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas示例（1） - 特别的访问方式",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/12/Inside_Atlas_Series__Web_Services_Access_in_Atlas__Sample_1.html",
        "BriefIntro": "摘要: 本文从实现角度讨论了使用Sys.Net.ServiceMethod.invoke以及Declarative Syntax调用Web Services的方法。并通过示例指出了Atlas现有的组件的不足并提供了改进办法、源文件以及示例。\n本文提供了三个示例：\n1、使用Sys.Net.ServiceMethod.invoke静态方法访问Web Services\n2、使用Declarative Syntax访问Web Services方法\n3、使用改进的Declarative Syntax访问Web Services方法"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（3） - 服务器端支持（下）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/11/Inside_Atlas_Series__Web_Services_Access_in_Atlas_3.html",
        "BriefIntro": "摘要: 在上一篇文章里，我们分析了一部分服务器端的代码。在这篇文章里，我将完成服务器端代码分析之外，另外提供了两个范例让大家参考：\n1、在Web Services方法中使用复杂的数据类型\n2、使用Web Services将对象序列化成XML并使用客户端XSLTView空间输出信息"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（2） - 服务器端支持（上）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/10/Inside_Atlas_Series__Web_Services_Access_in_Atlas_2.html",
        "BriefIntro": "摘要: 在上一片文章里，我们分析讨论了使用Atlas在进行AJAX访问Web Services所用的客户端代码。但是如果要实现这一功能，很显然还离不开服务器端的支持。在这篇文章里，我们就来讨论这一点。"
    },
    {
        "Title": "深入Atlas系列：Web Sevices Access in Atlas（1） - 客户端支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/10/Inside_Atlas_Series__Web_Services_Access_in_Atlas_1.html",
        "BriefIntro": "摘要: 　　Atlas提供了强大而灵活的服务器端Web Services访问能力。这对于客户端AJAX开发提供了绝好的条件，这几乎也是任何AJAX框架必备的功能。因为只要有了它，就能轻松地以AJAX方式与服务器端进行交互，而其他多样的页面操作自然可以由开发人员尽情开发。对于部分喜欢自己动手的开发人员来说，这甚至是他们仅仅需要的支持。\n\n　　从这篇文章开始，我会从实现角度剖析Atlas对于Web Services的支持，希望能够帮助大家更深入地理解，更灵活地使用Atlas提供的这一功能。"
    },
    {
        "Title": "[E-book Download] - OReilly Programming Atlas Sep 2006",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/08/Ebook_Download_OReilly_Programming_Atlas_Sep_2006.html",
        "BriefIntro": "摘要: 本电子书仅提供研究和学习使用，请勿用于商业目的。如果产生任何版权纠纷，本人会将其立即撤除。"
    },
    {
        "Title": "Gadget，又见Gadget - 浅尝Windows Live Contacts Gadget",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/08/Windows_Live_Contacts_Gadget.html",
        "BriefIntro": "摘要: 近日在Windows Live Dev里发现了一个新的Feature（其实已经出现一个多月了）：Windows Live Contacts Gadget (Beta)，一试之下，颇为有趣。Windows Live Contacts Gadget可能是一个创举，它能够将Windows Live Account上的联系人信息提供给任意第三方使用。任意第三方的产品可以轻易地结合这些联系人信息进行开发（后面将会看到它与Windows Live Local结合的范例）。"
    },
    {
        "Title": "Book List Gadget for Windows Live Spaces - Usage Instructions",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/08/523458.html",
        "BriefIntro": "摘要: An advanced book list for Windows Live Spaces.\n\n1. The text to show can be given by the owner or from Amazon if ISBNs are provided.\n2. All the texts will link to some place - if you need them to do so.\n3. The format of texts can be defined by the ower by 'template'.\n4. The owner can give a title to the book list.\n5. The owner can set the position of images - left or right.\n6. The details can be show/close by a switch for each book."
    },
    {
        "Title": "不看不知道，一看吓一跳，Atlas中有些Bug还真让人无语。",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/06/Interesting_Atlas_Bug.html",
        "BriefIntro": "摘要: 阅读了Atlas的代码才发现，Atlas中有些Bug真是让人无话可说。除去以前提到过的有些类成员在重载时奇怪的代码之外，现在在阅读IEDragDropManager时也发现了点有趣的Bug。"
    },
    {
        "Title": "使用Atlas创建自己的Client Control",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/10/04/Use_Atlas_to_Build_Custom_Client_Control.html",
        "BriefIntro": "摘要: Atlas客户端脚本提供了数个继承于Sys.UI.Control的类，从简单如Sys.UI.Button，到复杂如Sys.UI.Data.ListView，在一定程度上方便了开发人员，另外可以使用Declarative Syntax也可谓一大进步。但是一般仅仅使用Atlas提供的那些类是远远不够的，开发人员必须自行使用Atlas进行扩展，并且将自己的扩展融入到Atlas模型中去。"
    },
    {
        "Title": "Microsoft Visual Studio 2007 September CTP Released!",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/30/Microsoft_Visual_Studio_2007_September_CTP_Released.html",
        "BriefIntro": "摘要: 专门针对Windows Vista平台开发的Visual Studio终于集体亮相了，以前都只是一个以小插件形式附着于Visual Studio 2005之上,现在独立为一个完整的版本了。"
    },
    {
        "Title": "补充部分官方文档里没有的Client Library以及代码提示Schema更新（二）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/29/Additional_Client_Library_and_Update_Intelligence_Schema_2.html",
        "BriefIntro": "摘要: 这次补充了所有的Data Access相关控件，现在似乎Atlas.js中最常用的Tag都已经写进了Schema。这次更新的Tag有：\n“<itemView />”、“<listView />”、“<dataSource />”、“<dataView />”、“<dataNavigator />”、“<xmlDataSource />”、“<xsltView />”、“<sortBehavior />”和“<propertyFilter />”"
    },
    {
        "Title": "Sys.UI.Data.DataNavigator与Sys.UI.Data.SortBehavior",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/28/Sys_UI_Data_DataNavigator_and_Sys_UI_Data_SortBehavior.html",
        "BriefIntro": "摘要: 阅读了Atlas代码之后，出现了很多想法。现在对于Sys.UI.Data.DataNavigator进行简单分析，并对它的设计产生了质疑，并提出了Sys.UI.Data.DataNavigator的一个bug，即使在功能上并无体现。"
    },
    {
        "Title": "另一种Atlas Scripts Intellisense的方法以及对比与分析",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/27/Another_Intellisense_of_AtlasScript_and_the_Difference.html",
        "BriefIntro": "摘要: 这是另一种Intellisense做法，可能会对我们使用Atlas Scripts的方式有所启发。"
    },
    {
        "Title": "FloatingBehavior补遗：Location属性与move事件",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/26/Addendum_of_FloatingBehavior_Location_and_Move.html",
        "BriefIntro": "摘要: 　　FloatingBehavior在官方文档中的例子似乎只有对其最简单使用方式的介绍，却没有对其Location属性和move事件的说明。虽然它们非常简单，我想可能还是需要了解一下的。FloatingBehavior的Class Library在本人前面的文章《"
    },
    {
        "Title": "补充部分官方文档里没有的Client Library以及代码提示Schema更新（一）",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/26/Additional_Client_Library_and_Update_Intelligence_Schema_1.html",
        "BriefIntro": "摘要: 　　为了保证Intelligence Schema的正确性，不得不仔细地去挖掘文档上没有描述的特性，最好的方式自然是阅读它的代码，似乎进展还算顺利。新增支持的Tag为validator相关和floatingBehavior。具体为“<requiredFieldValidator />”、“<typeValidator />”、“<rangeValidator />”、“<regexValidator />”、“<customValidator />”、“<validationErrorLabel />”、“<validationGroupt />”和“<floatingBehavior />”。"
    },
    {
        "Title": "为VS.NET 2005增加Atlas Scripts的代码提示功能",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/25/Add_VS_NET_2005_Intelligence_for_Atlas_Scripts.html",
        "BriefIntro": "摘要: 　　一直在不遗余力地向周围地人传播Atlas的Declarative Syntax，却总是得到“太难编写”的回答。最近有一次无论如何也找不出一个问题，最终发现是一个拼写错误，愤愤之余，无奈之下，只得设法为VS增加为Atlas的代码提示功能。苦于缺乏相关资料，MSDN上尽是如何为VS.NET 2003下Web Control增加客户端提示的文章。不过幸运地是，这些文章也给了我提示和方向。摸索数小时之后总算有所门道，不敢独享，略有小成。虽然期间也曾遇到过一些头疼事，例如VS.NET编辑器无法区分HTML的<select />和Atlas Scripts里的<select />，幸运的是最终找到了解决办法。"
    },
    {
        "Title": "本地化与Atlas对于本地化的支持",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/22/Localization_and_Localization_Support_in_Atlas.html",
        "BriefIntro": "摘要: 周三我参与的项目的Beta版终于发布了，这个项目是对今年2月已经在美国上线的产品进行本地化工作。很奇怪，在Production环境中使用下来感觉比想象中要好很多，忐忑的心情放轻松了不少。虽然我那个项目没有用到Atlas，不过也就趁这个机会，简单讲一下本地化和Atlas对于本地化的支持吧。\n\n本文分以下四部分：\n一、什么是本地化\n二、Atlas对于本地化的支持\n三、为Atlas的本地化的支持自定义Culture Detection规则\n四、更好地控制Atlas本地化支持"
    },
    {
        "Title": "一个我在研究Atlas Control Toolkit时做的尝试：ImageGalleryExtender",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/21/AtlasControlToolkit_Demo_ImageGalleryExtender.html",
        "BriefIntro": "摘要: ImageGalleryExtender是我在研究Atlas Control Toolkit代码时的一个尝试。这个Extender的作用是能够轻松地制作一个相册浏览的功能。"
    },
    {
        "Title": "和之前的版本相比，昨天Release的Atlas Control Toolkit变化不可谓不大",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/20/Newly_Released_AtlasControlToolkit_Changes_a_Lot.html",
        "BriefIntro": "摘要: 姑且不论增加了4个新的控件，姑且不论Accordion控件的代码和使用都发生了很大变化，这次Atlas Control Toolkit的更新，改变了一些非常基础的地方。"
    },
    {
        "Title": "10月份的MSDN Magazine中CLR Inside Out栏目是一篇关于IronPython的文章",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/19/507973.html",
        "BriefIntro": "摘要: 这是文章的链接：http://msdn.microsoft.com/msdnmag/issues/06/10/CLRInsideOut/default.aspx在文章的最后引用了Aaron Marten的Blog，是关于IronPython与VS2005的集成（可惜不支持VS 2005 Express）。http://blogs.msdn.com/aaronmar/archive/2006/02/..."
    },
    {
        "Title": "修补AJAX应用中Back/Forward Button和Bookmark失效的问题",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/14/Support_Back_Forward_And_Bookmark_In_AJAX_App.html",
        "BriefIntro": "摘要: 　　从AJAX诞生至今，就存在着Back/Forward Button和bookmark失效的问题，我以前一般提倡，一个好的AJAX应用应该不让用户有点击“Back/Forward”的想法，并且使用某种方式提供给用户一个能够记录直接产生页面的Bookmark。Windows Live Local应该是这种应用最好的典范之一，其灵活的交互，良好的界面让我在初遇时不得不眼前一亮。\n\n　　另外，我也曾经见过把后退按钮禁用的做法（其实这样对于解决问题的确不错），不过这些都似乎只是一个workaround，设法避开这个AJAX应用普遍存在的问题。似乎Gmail能够支持Back按钮，但是我惊奇的发现，在点击Back后，却不能使用Forward，所以这还不算成功的解决这个问题。那么能否解决？似乎已经有了一定的实现。\n"
    },
    {
        "Title": "Sys.ScriptLoader与JS加载进度条的实现",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/13/SysScriptLoader_And_Implementation_of_Script_Loading_Progress_Bar.html",
        "BriefIntro": "摘要: Sys.ScriptLoader与JS加载进度条的实现\n\n　　今天有人问我，163邮箱那样的Javascript加载进度条是如何实现的。\n\n　　我不知道，不过实现一个不难，因为<script />有onload事件。还有就是，我们有Atlas。"
    },
    {
        "Title": "有感Atlas - 优点、缺点、学习",
        "Link": "http://www.cnblogs.com/JeffreyZhao/archive/2006/09/12/Advantage_Disadvantage_Learning_and_Others_of_Atlas.html",
        "BriefIntro": "摘要: Atlas的优点是什么？\n \n　　仁者见仁，智者见智。在这种问题上每个优秀的技术人员应该总是有自己独特的见解。能得到一个能“服众”的结论固然好，但是支持百家争鸣更为重要。我始终认为Atlas的最大长处不在于其Ajax特性，不在于其提供了复杂JS才能实现的多样化功能。在我看来，Atlas是很了不起的，而它的了不起体现在三个地方： \n\nDeclarative Syntax\nExtendable Behavior, Extender, etc.\nPowerful Foundational Framework"
    }
]